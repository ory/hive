package selfservice

import (
	"net/http"

	"github.com/julienschmidt/httprouter"

	"github.com/ory/hive/driver/configuration"
	"github.com/ory/hive/errorx"
	"github.com/ory/hive/session"
	"github.com/ory/hive/x"
)

const (
	BrowserLogoutPath = "/auth/browser/logout"
)

type logoutHandlerDependencies interface {
	errorx.ManagementProvider
	session.ManagementProvider
}

type LogoutHandler struct {
	c configuration.Provider
	d logoutHandlerDependencies
}

func NewLogoutHandler(d logoutHandlerDependencies, c configuration.Provider) *LogoutHandler {
	return &LogoutHandler{d: d, c: c}
}

func (h *LogoutHandler) RegisterPublicRoutes(public *x.RouterPublic) {
	public.GET(BrowserLogoutPath, h.logout)
}

func (h *LogoutHandler) logout(w http.ResponseWriter, r *http.Request, ps httprouter.Params) {
	if err := h.d.SessionManager().PurgeFromRequest(w, r); err != nil {
		h.d.ErrorManager().ForwardError(w, r, err)
		return
	}

	http.Redirect(w, r, h.c.AuthnDefaultReturnToURL().String(), http.StatusFound)
}

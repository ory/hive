# Golang CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-go/ for more details
version: 2
jobs:
  format:
    docker:
      - image: circleci/golang:1.12
        environment:
          - GO111MODULE=on
    working_directory: /go/src/github.com/ory/hive
    steps:
      - checkout
      - run: curl -L https://git.io/vp6lP | sh -s -- -b ./bin
      - run: mv ./bin/* $GOPATH/bin
      - restore_cache:
          keys:
            - go-mod-v1-{{ checksum "go.sum" }}
      - run: go mod download
      - run: go mod vendor
      - save_cache:
          key: go-mod-v1-{{ checksum "go.sum" }}
          paths:
            - "/go/pkg/mod"
      - run: GO111MODULE=off gometalinter --disable-all --enable=goimports --enable=vet --vendor ./...

  test:
    docker:
      - image: circleci/golang:1.12
        environment:
          - GO111MODULE=on
    working_directory: /go/src/github.com/ory/hive
    steps:
      - checkout
      - setup_remote_docker
      - run:
          command: |
            ./.circleci/release_name.bash
            echo 'export DOCKER_SHORT_TAG=$CIRCLE_SHA1' >> $BASH_ENV
            source $BASH_ENV
      - run: GO111MODULE=off go get github.com/mattn/goveralls github.com/ory/go-acc
      - restore_cache:
          keys:
            - go-mod-v1-{{ checksum "go.sum" }}
      - run: go mod download
      - save_cache:
          key: go-mod-v1-{{ checksum "go.sum" }}
          paths:
            - "/go/pkg/mod"
      - run: go-acc -o coverage.txt ./... -- -failfast -timeout=20m
      - run: test -z "$CIRCLE_PR_NUMBER" && goveralls -service=circle-ci -coverprofile=coverage.txt -repotoken=$COVERALLS_REPO_TOKEN || echo "forks are not allowed to push to coveralls"

workflows:
  version: 2
  "test":
    jobs:
      - format:
          filters:
            tags:
              only: /.*/
      - test:
          filters:
            tags:
              only: /.*/
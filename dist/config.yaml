project_name: kratos
env:
- GO111MODULE=on
release:
  github:
    owner: ory
    name: kratos
  prerelease: auto
  name_template: '{{.Env.RELEASE_NAME}}'
brews:
- name: kratos
  github:
    owner: ory
    name: homebrew-kratos
  commit_author:
    name: ory
    email: hi@ory.sh
  install: bin.install "kratos"
  homepage: https://www.ory.sh
  ids:
  - kratos-archive
  goarm: "6"
scoop:
  name: kratos
  bucket:
    owner: ory
    name: scoop-kratos
  commit_author:
    name: ory
    email: hi@ory.sh
  homepage: https://www.ory.sh
builds:
- id: kratos
  goos:
  - freebsd
  - linux
  - windows
  - darwin
  goarch:
  - amd64
  - "386"
  - arm
  - arm64
  goarm:
  - "5"
  - "6"
  - "7"
  targets:
  - freebsd_amd64
  - freebsd_386
  - freebsd_arm_5
  - freebsd_arm_6
  - freebsd_arm_7
  - linux_amd64
  - linux_386
  - linux_arm_5
  - linux_arm_6
  - linux_arm_7
  - linux_arm64
  - windows_amd64
  - windows_386
  - darwin_amd64
  - darwin_386
  main: .
  ldflags:
  - -s -w -X github.com/ory/kratos/cmd.Version={{.Env.RELEASE_NAME}} -X github.com/ory/kratos/cmd.Commit={{.FullCommit}}
    -X github.com/ory/kratos/cmd.Date={{.Date}}
  flags:
  - -a
  binary: kratos
  env:
  - CGO_ENABLED=1
  lang: go
archives:
- id: kratos-archive
  builds:
  - kratos
  name_template: '{{ .ProjectName }}_{{ .Version }}_{{ .Os }}_{{ .Arch }}{{ if .Arm
    }}v{{ .Arm }}{{ end }}'
  replacements:
    "386": 32-bit
    amd64: 64-bit
    darwin: macOS
    linux: Linux
    windows: Windows
  format: tar.gz
  format_overrides:
  - goos: windows
    format: zip
  files:
  - licence*
  - LICENCE*
  - license*
  - LICENSE*
  - readme*
  - README*
  - changelog*
  - CHANGELOG*
nfpms:
- file_name_template: '{{ .ProjectName }}_{{ .Version }}_{{ .Os }}_{{ .Arch }}{{ if
    .Arm }}v{{ .Arm }}{{ end }}'
  package_name: kratos
  id: default
  builds:
  - kratos
  bindir: /usr/local/bin
snapcrafts:
- name_template: '{{ .ProjectName }}_{{ .Version }}_{{ .Os }}_{{ .Arch }}{{ if .Arm
    }}v{{ .Arm }}{{ end }}'
  builds:
  - kratos
snapshot:
  name_template: '{{ .Tag }}-next'
checksum:
  name_template: '{{ .ProjectName }}_{{ .Version }}_checksums.txt'
  algorithm: sha256
dockers:
- binaries:
  - kratos
  goos: linux
  goarch: amd64
  dockerfile: Dockerfile
  image_templates:
  - oryd/kratos:v{{ .Major }}
  - oryd/kratos:v{{ .Major }}.{{ .Minor }}
  - oryd/kratos:v{{ .Major }}.{{ .Minor }}.{{ .Patch }}
  - oryd/kratos:{{ .Env.DOCKER_SHORT_TAG }}
  - oryd/kratos:latest
changelog:
  sort: asc
dist: dist
signs:
- cmd: gpg
  args:
  - --output
  - $signature
  - --detach-sig
  - $artifact
  signature: ${artifact}.sig
  artifacts: none
env_files:
  github_token: ~/.config/goreleaser/github_token
  gitlab_token: ~/.config/goreleaser/gitlab_token
  gitea_token: ~/.config/goreleaser/gitea_token
before:
  hooks:
  - go mod download
github_urls:
  download: https://github.com
gitlab_urls:
  download: https://gitlab.com

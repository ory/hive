{"remainingRequest":"/Users/foobar/go/src/github.com/ory/kratos/docs/node_modules/babel-loader/lib/index.js??ref--7-1!/Users/foobar/go/src/github.com/ory/kratos/docs/node_modules/@docusaurus/mdx-loader/src/index.js??ref--7-2!/Users/foobar/go/src/github.com/ory/kratos/docs/node_modules/@docusaurus/plugin-content-docs/lib/markdown/index.js??ref--7-3!/Users/foobar/go/src/github.com/ory/kratos/docs/docs/reference/jsonnet.mdx","dependencies":[{"path":"/Users/foobar/go/src/github.com/ory/kratos/docs/docs/reference/jsonnet.mdx","mtime":1589385453670},{"path":"/Users/foobar/go/src/github.com/ory/kratos/docs/.docusaurus/docusaurus-plugin-content-docs/site-docs-reference-jsonnet-mdx-98f.json","mtime":1588773223585},{"path":"/Users/foobar/go/src/github.com/ory/kratos/docs/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/foobar/go/src/github.com/ory/kratos/docs/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/foobar/go/src/github.com/ory/kratos/docs/node_modules/@docusaurus/mdx-loader/src/index.js","mtime":499162500000},{"path":"/Users/foobar/go/src/github.com/ory/kratos/docs/node_modules/@docusaurus/plugin-content-docs/lib/markdown/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9leHRlbmRzIGZyb20iL1VzZXJzL2Zvb2Jhci9nby9zcmMvZ2l0aHViLmNvbS9vcnkva3JhdG9zL2RvY3Mvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2V4dGVuZHMiO2ltcG9ydCBSZWFjdCBmcm9tJ3JlYWN0JztpbXBvcnR7bWR4fWZyb20nQG1keC1qcy9yZWFjdCc7ZXhwb3J0IGNvbnN0IGZyb250TWF0dGVyPXtpZDonanNvbm5ldCcsdGl0bGU6J0RhdGEgTWFwcGluZyB3aXRoIEpzb25uZXQnfTtleHBvcnQgY29uc3QgbWV0YWRhdGE9eyJpZCI6InJlZmVyZW5jZS9qc29ubmV0IiwidGl0bGUiOiJEYXRhIE1hcHBpbmcgd2l0aCBKc29ubmV0IiwiZGVzY3JpcHRpb24iOiJTb21lIG1vZHVsZXMgbGlrZSB0aGUiLCJzb3VyY2UiOiJAc2l0ZS9kb2NzL3JlZmVyZW5jZS9qc29ubmV0Lm1keCIsInBlcm1hbGluayI6Ii9rcmF0b3MvZG9jcy9uZXh0L3JlZmVyZW5jZS9qc29ubmV0IiwiZWRpdFVybCI6Imh0dHBzOi8vZ2l0aHViLmNvbS9vcnkva3JhdG9zL2VkaXQvbWFzdGVyL2RvY3MvZG9jcy9yZWZlcmVuY2UvanNvbm5ldC5tZHgiLCJ2ZXJzaW9uIjoibmV4dCIsImxhc3RVcGRhdGVkQnkiOiJBdXRob3IiLCJsYXN0VXBkYXRlZEF0IjoxNTM5NTAyMDU1fTsvKiBAanN4IG1keCAqL2V4cG9ydCBjb25zdCByaWdodFRvYz1be3ZhbHVlOidGb3JtYXR0aW5nIEpzb25uZXQgQ29kZScsaWQ6J2Zvcm1hdHRpbmctanNvbm5ldC1jb2RlJyxjaGlsZHJlbjpbXX0se3ZhbHVlOidMaW50aW5nIEpzb25uZXQgQ29kZScsaWQ6J2xpbnRpbmctanNvbm5ldC1jb2RlJyxjaGlsZHJlbjpbXX0se3ZhbHVlOidUZXN0aW5nIEpzb25uZXQgQ29kZScsaWQ6J3Rlc3RpbmctanNvbm5ldC1jb2RlJyxjaGlsZHJlbjpbXX0se3ZhbHVlOidUaXBzICZhbXA7IFRyaWNrcycsaWQ6J3RpcHMtLXRyaWNrcycsY2hpbGRyZW46W3t2YWx1ZTonT3B0aW9uYWxpdHknLGlkOidvcHRpb25hbGl0eScsY2hpbGRyZW46W119LHt2YWx1ZTonRGVmYXVsdHMnLGlkOidkZWZhdWx0cycsY2hpbGRyZW46W119LHt2YWx1ZTonUmFpc2luZyBFcnJvcnMnLGlkOidyYWlzaW5nLWVycm9ycycsY2hpbGRyZW46W119XX1dO2NvbnN0IG1ha2VTaG9ydGNvZGU9bmFtZT0+ZnVuY3Rpb24gTURYRGVmYXVsdFNob3J0Y29kZShwcm9wcyl7Y29uc29sZS53YXJuKCJDb21wb25lbnQgIituYW1lKyIgd2FzIG5vdCBpbXBvcnRlZCwgZXhwb3J0ZWQsIG9yIHByb3ZpZGVkIGJ5IE1EWFByb3ZpZGVyIGFzIGdsb2JhbCBzY29wZSIpO3JldHVybiBtZHgoImRpdiIscHJvcHMpO307Y29uc3QgbGF5b3V0UHJvcHM9e3JpZ2h0VG9jfTtjb25zdCBNRFhMYXlvdXQ9IndyYXBwZXIiO2V4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIE1EWENvbnRlbnQoe2NvbXBvbmVudHMsLi4ucHJvcHN9KXtyZXR1cm4gbWR4KE1EWExheW91dCxfZXh0ZW5kcyh7fSxsYXlvdXRQcm9wcyxwcm9wcyx7Y29tcG9uZW50czpjb21wb25lbnRzLG1keFR5cGU6Ik1EWExheW91dCJ9KSxtZHgoInAiLG51bGwsYFNvbWUgbW9kdWxlcyBsaWtlIHRoZQpgLG1keCgiYSIsX2V4dGVuZHMoe3BhcmVudE5hbWU6InAifSx7ImhyZWYiOiIva3JhdG9zL2RvY3MvbmV4dC9jb25jZXB0cy9jcmVkZW50aWFscy9vcGVuaWQtY29ubmVjdC1vaWRjLW9hdXRoMiJ9KSxgT3BlbklEIENvbm5lY3QgYW5kIE9BdXRoMiBTdHJhdGVneWApLGAKc3VwcG9ydCBgLG1keCgiYSIsX2V4dGVuZHMoe3BhcmVudE5hbWU6InAifSx7ImhyZWYiOiJodHRwczovL2pzb25uZXQub3JnIn0pLGBKc29ubmV0YCksYCwgYWxsb3dpbmcgeW91IHRvIGVhc2lseSB3cml0ZSBjb2RlIHRoYXQKbW9kaWZpZXMgeW91ciBpZGVudGl0eSdzIGRhdGEgYW5kIGxvYWQgaXQgaW50byBPUlkgS3JhdG9zLmApLG1keCgicCIsbnVsbCxgV2UgaGlnaGx5IHJlY29tbWVuZCBjaGVja2luZyBvdXQgdGhlIG9mZmljaWFsCmAsbWR4KCJhIixfZXh0ZW5kcyh7cGFyZW50TmFtZToicCJ9LHsiaHJlZiI6Imh0dHBzOi8vanNvbm5ldC5vcmcvbGVhcm5pbmcvdHV0b3JpYWwuaHRtbCJ9KSxgbGVhcm5pbmcgSnNvbm5ldCB0dXRvcmlhbGApLGAuYCksbWR4KCJoMiIseyJpZCI6ImZvcm1hdHRpbmctanNvbm5ldC1jb2RlIn0sYEZvcm1hdHRpbmcgSnNvbm5ldCBDb2RlYCksbWR4KCJwIixudWxsLGBGb3JtYXQgSnNvbm5ldCBjb2RlIHNuaXBwZXRzIHVzaW5nOmApLG1keCgicHJlIixudWxsLG1keCgiY29kZSIsX2V4dGVuZHMoe3BhcmVudE5hbWU6InByZSJ9LHsiY2xhc3NOYW1lIjoibGFuZ3VhZ2Utc2hlbGwiLCJtZXRhc3RyaW5nIjoic2NyaXB0Iiwic2NyaXB0Ijp0cnVlfSksYCQga3JhdG9zIGhlbHAganNvbm5ldCBmb3JtYXQKCiMgZS5nLjoKJCBrcmF0b3MganNvbm5ldCBmb3JtYXQgLS13cml0ZSBwYXRoL3RvL2ZpbGVzLyouanNvbm5ldApgKSksbWR4KCJoMiIseyJpZCI6ImxpbnRpbmctanNvbm5ldC1jb2RlIn0sYExpbnRpbmcgSnNvbm5ldCBDb2RlYCksbWR4KCJwIixudWxsLGBMaW50IEpzb25uZXQgY29kZSBzbmlwcGV0cyB1c2luZzpgKSxtZHgoInByZSIsbnVsbCxtZHgoImNvZGUiLF9leHRlbmRzKHtwYXJlbnROYW1lOiJwcmUifSx7ImNsYXNzTmFtZSI6Imxhbmd1YWdlLXNoZWxsIiwibWV0YXN0cmluZyI6InNjcmlwdCIsInNjcmlwdCI6dHJ1ZX0pLGAkIGtyYXRvcyBoZWxwIGpzb25uZXQgbGludAoKIyBlLmcuOgokIGtyYXRvcyBqc29ubmV0IGxpbnQgcGF0aC90by9maWxlcy8qLmpzb25uZXQKYCkpLG1keCgicCIsbnVsbCxgVGhlIGNvbW1hbmQgd2lsbCBleGl0IHdpdGggYW4gZXhpdCBjb2RlIG9mIGAsbWR4KCJpbmxpbmVDb2RlIix7cGFyZW50TmFtZToicCJ9LGAxYCksYCBhbmQgcHJpbnQgYWxsIGZvdW5kIGxpbnQgZXJyb3JzCnRvIHN0ZGVyciBpZiB0aGUgY29kZSBzbmlwcGV0IGhhcyBsaW50IGlzc3Vlcy5gKSxtZHgoImgyIix7ImlkIjoidGVzdGluZy1qc29ubmV0LWNvZGUifSxgVGVzdGluZyBKc29ubmV0IENvZGVgKSxtZHgoInAiLG51bGwsYFRoaXMgaXMgYW4gYW50aWNpcGF0ZWQgZnV0dXJlIGZlYXR1cmUuIEZvciBwcm9ncmVzcyBjaGVjayBvdXQKYCxtZHgoImEiLF9leHRlbmRzKHtwYXJlbnROYW1lOiJwIn0seyJocmVmIjoiaHR0cHM6Ly9naXRodWIuY29tL29yeS9rcmF0b3MvaXNzdWVzLzM5MSJ9KSxga3JhdG9zIzM5MWApLGAuYCksbWR4KCJoMiIseyJpZCI6InRpcHMtLXRyaWNrcyJ9LGBUaXBzICYgVHJpY2tzYCksbWR4KCJwIixudWxsLGBUaGUgcHVycG9zZSBvZiB0aGlzIHNlY3Rpb24gaXMgdG8gcHJvdmlkZSB5b3Ugd2l0aCBleGFtcGxlcyBmb3IgY29tbW9uIHVzZQpjYXNlcy5gKSxtZHgoImgzIix7ImlkIjoib3B0aW9uYWxpdHkifSxgT3B0aW9uYWxpdHlgKSxtZHgoInAiLG51bGwsYFdoZW4geW91J3JlIHVuc3VyZSB0aGF0IGEgZmllbGQgd2lsbCBiZSBzZXQgaW4gdGhlIGAsbWR4KCJpbmxpbmVDb2RlIix7cGFyZW50TmFtZToicCJ9LGBjbGFpbXNgKSxgIHZhcmlhYmxlIHVzZSB0aGUKZm9sbG93aW5nIHRvIG1ha2UgdGhlIHRyYWl0IGZpZWxkIGFsc28gb3B0aW9uYWw6YCksbWR4KCJwcmUiLG51bGwsbWR4KCJjb2RlIixfZXh0ZW5kcyh7cGFyZW50TmFtZToicHJlIn0seyJjbGFzc05hbWUiOiJsYW5ndWFnZS1qc29ubmV0In0pLGBsb2NhbCBjbGFpbXMgPSBzdGQuZXh0VmFyKCdjbGFpbXMnKTsKCnsKICBpZGVudGl0eTogewogICAgdHJhaXRzOiB7CiAgICAgIGVtYWlsOiBjbGFpbXMuc3ViLAogICAgICBbaWYgIndlYnNpdGUiIGluIGNsYWltcyB0aGVuICJ3ZWJzaXRlIiBlbHNlIG51bGxdOiBjbGFpbXMud2Vic2l0ZSwKICAgIH0sCiAgfSwKfQpgKSksbWR4KCJoMyIseyJpZCI6ImRlZmF1bHRzIn0sYERlZmF1bHRzYCksbWR4KCJwIixudWxsLGBTZXQgZGVmYXVsdHMgZm9yIHRoZSBgLG1keCgiaW5saW5lQ29kZSIse3BhcmVudE5hbWU6InAifSxgY2xhaW1zYCksYCB2YXJpYWJsZTpgKSxtZHgoInByZSIsbnVsbCxtZHgoImNvZGUiLF9leHRlbmRzKHtwYXJlbnROYW1lOiJwcmUifSx7ImNsYXNzTmFtZSI6Imxhbmd1YWdlLWpzb25uZXQifSksYGxvY2FsIGNsYWltcyA9IHsKIHdlYnNpdGU6ICdpIGFtIHRoZSBkZWZhdWx0IHdlYnNpdGUgdmFsdWUnCn0gKyBzdGQuZXh0VmFyKCdjbGFpbXMnKTsKCnsKICBpZGVudGl0eTogewogICAgdHJhaXRzOiB7CiAgICAgIHdlYnNpdGU6IGNsYWltcy53ZWJzaXRlCiAgICB9CiAgfQp9CmApKSxtZHgoImgzIix7ImlkIjoicmFpc2luZy1lcnJvcnMifSxgUmFpc2luZyBFcnJvcnNgKSxtZHgoInAiLG51bGwsYFlvdSBjYW4gcmFpc2UgZXJyb3JzIGluIHRoZSBKc29ubmV0IGNvZGUuIEtlZXAgaW4gbWluZCB0aGF0IHRoZXNlIHdpbGwgYmUgc2hvd24KYXMgc3lzdGVtIGVycm9ycywgbm90IHZhbGlkYXRpb24gZXJyb3JzLCBhbmQgdGhhdCB0aGUgdXNlciB3aWxsIGVuZCB1cCBhdCB0aGUKRXJyb3IgVUkhYCksbWR4KCJwcmUiLG51bGwsbWR4KCJjb2RlIixfZXh0ZW5kcyh7cGFyZW50TmFtZToicHJlIn0seyJjbGFzc05hbWUiOiJsYW5ndWFnZS1qc29ubmV0In0pLGBsb2NhbCBjbGFpbXMgPSBzdGQuZXh0VmFyKCdjbGFpbXMnKTsKCmlmIHN0ZC5sZW5ndGgoY2xhaW1zLnN1YikgPT0gMCB0aGVuCiAgZXJyb3IgJ2NsYWltIHN1YiBub3Qgc2V0JwplbHNlCiAgewogICAgaWRlbnRpdHk6IHsKICAgICAgdHJhaXRzOiB7CiAgICAgICAgLy8gLi4uCiAgICAgIH0sCiAgICB9LAogIH0KYCkpKTt9O01EWENvbnRlbnQuaXNNRFhDb21wb25lbnQ9dHJ1ZTs="},{"version":3,"sources":["/Users/foobar/go/src/github.com/ory/kratos/docs/docs/reference/jsonnet.mdx"],"names":["React","mdx","frontMatter","id","title","metadata","rightToc","value","children","makeShortcode","name","MDXDefaultShortcode","props","console","warn","layoutProps","MDXLayout","MDXContent","components","isMDXComponent"],"mappings":"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","sourcesContent":["\n  import React from 'react';\n  import { mdx } from '@mdx-js/react';\n\n  export const frontMatter = {\n\tid: 'jsonnet',\n\ttitle: 'Data Mapping with Jsonnet'\n};\nexport const metadata = {\n  \"id\": \"reference/jsonnet\",\n  \"title\": \"Data Mapping with Jsonnet\",\n  \"description\": \"Some modules like the\",\n  \"source\": \"@site/docs/reference/jsonnet.mdx\",\n  \"permalink\": \"/kratos/docs/next/reference/jsonnet\",\n  \"editUrl\": \"https://github.com/ory/kratos/edit/master/docs/docs/reference/jsonnet.mdx\",\n  \"version\": \"next\",\n  \"lastUpdatedBy\": \"Author\",\n  \"lastUpdatedAt\": 1539502055\n};\n  /* @jsx mdx */\n\nexport const rightToc = [{\n  value: 'Formatting Jsonnet Code',\n  id: 'formatting-jsonnet-code',\n  children: []\n}, {\n  value: 'Linting Jsonnet Code',\n  id: 'linting-jsonnet-code',\n  children: []\n}, {\n  value: 'Testing Jsonnet Code',\n  id: 'testing-jsonnet-code',\n  children: []\n}, {\n  value: 'Tips &amp; Tricks',\n  id: 'tips--tricks',\n  children: [{\n    value: 'Optionality',\n    id: 'optionality',\n    children: []\n  }, {\n    value: 'Defaults',\n    id: 'defaults',\n    children: []\n  }, {\n    value: 'Raising Errors',\n    id: 'raising-errors',\n    children: []\n  }]\n}];\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  rightToc\n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <p>{`Some modules like the\n`}<a parentName=\"p\" {...{\n        \"href\": \"/kratos/docs/next/concepts/credentials/openid-connect-oidc-oauth2\"\n      }}>{`OpenID Connect and OAuth2 Strategy`}</a>{`\nsupport `}<a parentName=\"p\" {...{\n        \"href\": \"https://jsonnet.org\"\n      }}>{`Jsonnet`}</a>{`, allowing you to easily write code that\nmodifies your identity's data and load it into ORY Kratos.`}</p>\n    <p>{`We highly recommend checking out the official\n`}<a parentName=\"p\" {...{\n        \"href\": \"https://jsonnet.org/learning/tutorial.html\"\n      }}>{`learning Jsonnet tutorial`}</a>{`.`}</p>\n    <h2 {...{\n      \"id\": \"formatting-jsonnet-code\"\n    }}>{`Formatting Jsonnet Code`}</h2>\n    <p>{`Format Jsonnet code snippets using:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-shell\",\n        \"metastring\": \"script\",\n        \"script\": true\n      }}>{`$ kratos help jsonnet format\n\n# e.g.:\n$ kratos jsonnet format --write path/to/files/*.jsonnet\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"linting-jsonnet-code\"\n    }}>{`Linting Jsonnet Code`}</h2>\n    <p>{`Lint Jsonnet code snippets using:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-shell\",\n        \"metastring\": \"script\",\n        \"script\": true\n      }}>{`$ kratos help jsonnet lint\n\n# e.g.:\n$ kratos jsonnet lint path/to/files/*.jsonnet\n`}</code></pre>\n    <p>{`The command will exit with an exit code of `}<inlineCode parentName=\"p\">{`1`}</inlineCode>{` and print all found lint errors\nto stderr if the code snippet has lint issues.`}</p>\n    <h2 {...{\n      \"id\": \"testing-jsonnet-code\"\n    }}>{`Testing Jsonnet Code`}</h2>\n    <p>{`This is an anticipated future feature. For progress check out\n`}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/ory/kratos/issues/391\"\n      }}>{`kratos#391`}</a>{`.`}</p>\n    <h2 {...{\n      \"id\": \"tips--tricks\"\n    }}>{`Tips & Tricks`}</h2>\n    <p>{`The purpose of this section is to provide you with examples for common use\ncases.`}</p>\n    <h3 {...{\n      \"id\": \"optionality\"\n    }}>{`Optionality`}</h3>\n    <p>{`When you're unsure that a field will be set in the `}<inlineCode parentName=\"p\">{`claims`}</inlineCode>{` variable use the\nfollowing to make the trait field also optional:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsonnet\"\n      }}>{`local claims = std.extVar('claims');\n\n{\n  identity: {\n    traits: {\n      email: claims.sub,\n      [if \"website\" in claims then \"website\" else null]: claims.website,\n    },\n  },\n}\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"defaults\"\n    }}>{`Defaults`}</h3>\n    <p>{`Set defaults for the `}<inlineCode parentName=\"p\">{`claims`}</inlineCode>{` variable:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsonnet\"\n      }}>{`local claims = {\n website: 'i am the default website value'\n} + std.extVar('claims');\n\n{\n  identity: {\n    traits: {\n      website: claims.website\n    }\n  }\n}\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"raising-errors\"\n    }}>{`Raising Errors`}</h3>\n    <p>{`You can raise errors in the Jsonnet code. Keep in mind that these will be shown\nas system errors, not validation errors, and that the user will end up at the\nError UI!`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsonnet\"\n      }}>{`local claims = std.extVar('claims');\n\nif std.length(claims.sub) == 0 then\n  error 'claim sub not set'\nelse\n  {\n    identity: {\n      traits: {\n        // ...\n      },\n    },\n  }\n`}</code></pre>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;\n  "]}]}
{"remainingRequest":"/Users/foobar/go/src/github.com/ory/kratos/docs/node_modules/babel-loader/lib/index.js??ref--7-1!/Users/foobar/go/src/github.com/ory/kratos/docs/node_modules/@docusaurus/mdx-loader/src/index.js??ref--7-2!/Users/foobar/go/src/github.com/ory/kratos/docs/node_modules/@docusaurus/plugin-content-docs/lib/markdown/index.js??ref--7-3!/Users/foobar/go/src/github.com/ory/kratos/docs/docs/reference/jsonnet.md","dependencies":[{"path":"/Users/foobar/go/src/github.com/ory/kratos/docs/docs/reference/jsonnet.md","mtime":1588770052563},{"path":"/Users/foobar/go/src/github.com/ory/kratos/docs/.docusaurus/docusaurus-plugin-content-docs/site-docs-reference-jsonnet-md-51a.json","mtime":1588769378798},{"path":"/Users/foobar/go/src/github.com/ory/kratos/docs/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/foobar/go/src/github.com/ory/kratos/docs/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/foobar/go/src/github.com/ory/kratos/docs/node_modules/@docusaurus/mdx-loader/src/index.js","mtime":499162500000},{"path":"/Users/foobar/go/src/github.com/ory/kratos/docs/node_modules/@docusaurus/plugin-content-docs/lib/markdown/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9leHRlbmRzIGZyb20iL1VzZXJzL2Zvb2Jhci9nby9zcmMvZ2l0aHViLmNvbS9vcnkva3JhdG9zL2RvY3Mvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2V4dGVuZHMiO2ltcG9ydCBSZWFjdCBmcm9tJ3JlYWN0JztpbXBvcnR7bWR4fWZyb20nQG1keC1qcy9yZWFjdCc7ZXhwb3J0IGNvbnN0IGZyb250TWF0dGVyPXtpZDonanNvbm5ldCcsdGl0bGU6J0RhdGEgTWFwcGluZyB3aXRoIEpzb25uZXQnfTtleHBvcnQgY29uc3QgbWV0YWRhdGE9eyJpZCI6InJlZmVyZW5jZS9qc29ubmV0IiwidGl0bGUiOiJEYXRhIE1hcHBpbmcgd2l0aCBKc29ubmV0IiwiZGVzY3JpcHRpb24iOiJTb21lIG1vZHVsZXMgbGlrZSB0aGUgW09wZW5JRCBDb25uZWN0IGFuZCBPQXV0aDIgU3RyYXRlZ3ldKC4uL2NvbmNlcHRzL2NyZWRlbnRpYWxzL29wZW5pZC1jb25uZWN0LW9pZGMtb2F1dGgyLm1keCkiLCJzb3VyY2UiOiJAc2l0ZS9kb2NzL3JlZmVyZW5jZS9qc29ubmV0Lm1kIiwicGVybWFsaW5rIjoiL2tyYXRvcy9kb2NzL25leHQvcmVmZXJlbmNlL2pzb25uZXQiLCJlZGl0VXJsIjoiaHR0cHM6Ly9naXRodWIuY29tL29yeS9rcmF0b3MvZWRpdC9tYXN0ZXIvZG9jcy9kb2NzL3JlZmVyZW5jZS9qc29ubmV0Lm1kIiwidmVyc2lvbiI6Im5leHQiLCJsYXN0VXBkYXRlZEJ5IjoiQXV0aG9yIiwibGFzdFVwZGF0ZWRBdCI6MTUzOTUwMjA1NX07LyogQGpzeCBtZHggKi9leHBvcnQgY29uc3QgcmlnaHRUb2M9W3t2YWx1ZTonRm9ybWF0dGluZyBKc29ubmV0IENvZGUnLGlkOidmb3JtYXR0aW5nLWpzb25uZXQtY29kZScsY2hpbGRyZW46W119LHt2YWx1ZTonTGludGluZyBKc29ubmV0IENvZGUnLGlkOidsaW50aW5nLWpzb25uZXQtY29kZScsY2hpbGRyZW46W119LHt2YWx1ZTonVGVzdGluZyBKc29ubmV0IENvZGUnLGlkOid0ZXN0aW5nLWpzb25uZXQtY29kZScsY2hpbGRyZW46W119XTtjb25zdCBtYWtlU2hvcnRjb2RlPW5hbWU9PmZ1bmN0aW9uIE1EWERlZmF1bHRTaG9ydGNvZGUocHJvcHMpe2NvbnNvbGUud2FybigiQ29tcG9uZW50ICIrbmFtZSsiIHdhcyBub3QgaW1wb3J0ZWQsIGV4cG9ydGVkLCBvciBwcm92aWRlZCBieSBNRFhQcm92aWRlciBhcyBnbG9iYWwgc2NvcGUiKTtyZXR1cm4gbWR4KCJkaXYiLHByb3BzKTt9O2NvbnN0IGxheW91dFByb3BzPXtyaWdodFRvY307Y29uc3QgTURYTGF5b3V0PSJ3cmFwcGVyIjtleHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBNRFhDb250ZW50KHtjb21wb25lbnRzLC4uLnByb3BzfSl7cmV0dXJuIG1keChNRFhMYXlvdXQsX2V4dGVuZHMoe30sbGF5b3V0UHJvcHMscHJvcHMse2NvbXBvbmVudHM6Y29tcG9uZW50cyxtZHhUeXBlOiJNRFhMYXlvdXQifSksbWR4KCJwIixudWxsLGBTb21lIG1vZHVsZXMgbGlrZSB0aGUgYCxtZHgoImEiLF9leHRlbmRzKHtwYXJlbnROYW1lOiJwIn0seyJocmVmIjoiLi4vY29uY2VwdHMvY3JlZGVudGlhbHMvb3BlbmlkLWNvbm5lY3Qtb2lkYy1vYXV0aDIubWR4In0pLGBPcGVuSUQgQ29ubmVjdCBhbmQgT0F1dGgyIFN0cmF0ZWd5YCksYApzdXBwb3J0IGAsbWR4KCJhIixfZXh0ZW5kcyh7cGFyZW50TmFtZToicCJ9LHsiaHJlZiI6Imh0dHBzOi8vanNvbm5ldC5vcmcifSksYEpzb25uZXRgKSxgLCBhbGxvd2luZyB5b3UgdG8gZWFzaWx5IHdyaXRlIGNvZGUgdGhhdCBtb2RpZmllcyB5b3VyIGlkZW50aXR5J3MgZGF0YQphbmQgbG9hZCBpdCBpbnRvIE9SWSBLcmF0b3MuYCksbWR4KCJwIixudWxsLGBXZSBoaWdobHkgcmVjb21tZW5kIGNoZWNraW5nIG91dCB0aGUgb2ZmaWNpYWwgYCxtZHgoImEiLF9leHRlbmRzKHtwYXJlbnROYW1lOiJwIn0seyJocmVmIjoiaHR0cHM6Ly9qc29ubmV0Lm9yZy9sZWFybmluZy90dXRvcmlhbC5odG1sIn0pLGBsZWFybmluZyBKc29ubmV0IHR1dG9yaWFsYCksYC5gKSxtZHgoImgyIix7ImlkIjoiZm9ybWF0dGluZy1qc29ubmV0LWNvZGUifSxgRm9ybWF0dGluZyBKc29ubmV0IENvZGVgKSxtZHgoInAiLG51bGwsYEZvcm1hdCBKc29ubmV0IGNvZGUgc25pcHBldHMgdXNpbmc6YCksbWR4KCJwcmUiLG51bGwsbWR4KCJjb2RlIixfZXh0ZW5kcyh7cGFyZW50TmFtZToicHJlIn0seyJjbGFzc05hbWUiOiJsYW5ndWFnZS1zaGVsbCIsIm1ldGFzdHJpbmciOiJzY3JpcHQiLCJzY3JpcHQiOnRydWV9KSxgJCBrcmF0b3MgaGVscCBqc29ubmV0IGZvcm1hdAoKIyBlLmcuOgolIGtyYXRvcyBqc29ubmV0IGZvcm1hdCAtLXdyaXRlIHBhdGgvdG8vZmlsZXMvKi5qc29ubmV0CmApKSxtZHgoImgyIix7ImlkIjoibGludGluZy1qc29ubmV0LWNvZGUifSxgTGludGluZyBKc29ubmV0IENvZGVgKSxtZHgoInAiLG51bGwsYExpbnQgSnNvbm5ldCBjb2RlIHNuaXBwZXRzIHVzaW5nOmApLG1keCgicHJlIixudWxsLG1keCgiY29kZSIsX2V4dGVuZHMoe3BhcmVudE5hbWU6InByZSJ9LHsiY2xhc3NOYW1lIjoibGFuZ3VhZ2Utc2hlbGwiLCJtZXRhc3RyaW5nIjoic2NyaXB0Iiwic2NyaXB0Ijp0cnVlfSksYCQga3JhdG9zIGhlbHAganNvbm5ldCBsaW50CgojIGUuZy46CiQga3JhdG9zIGpzb25uZXQgbGludCBwYXRoL3RvL2ZpbGVzLyouanNvbm5ldApgKSksbWR4KCJwIixudWxsLGBUaGUgY29tbWFuZCB3aWxsIGV4aXQgd2l0aCBhbiBleGl0IGNvZGUgb2YgYCxtZHgoImlubGluZUNvZGUiLHtwYXJlbnROYW1lOiJwIn0sYDFgKSxgIGFuZApwcmludCBhbGwgZm91bmQgbGludCBlcnJvcnMgdG8gc3RkZXJyIGlmIHRoZSBjb2RlCnNuaXBwZXQgaGFzIGxpbnQgaXNzdWVzLmApLG1keCgiaDIiLHsiaWQiOiJ0ZXN0aW5nLWpzb25uZXQtY29kZSJ9LGBUZXN0aW5nIEpzb25uZXQgQ29kZWApKTt9O01EWENvbnRlbnQuaXNNRFhDb21wb25lbnQ9dHJ1ZTs="},{"version":3,"sources":["/Users/foobar/go/src/github.com/ory/kratos/docs/docs/reference/jsonnet.md"],"names":["React","mdx","frontMatter","id","title","metadata","rightToc","value","children","makeShortcode","name","MDXDefaultShortcode","props","console","warn","layoutProps","MDXLayout","MDXContent","components","isMDXComponent"],"mappings":"sHACE,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,GAAT,KAAoB,eAApB,CAEA,MAAO,MAAMC,CAAAA,WAAW,CAAG,CAC5BC,EAAE,CAAE,SADwB,CAE5BC,KAAK,CAAE,2BAFqB,CAApB,CAIT,MAAO,MAAMC,CAAAA,QAAQ,CAAG,CACtB,KAAM,mBADgB,CAEtB,QAAS,2BAFa,CAGtB,cAAe,oHAHO,CAItB,SAAU,iCAJY,CAKtB,YAAa,qCALS,CAMtB,UAAW,0EANW,CAOtB,UAAW,MAPW,CAQtB,gBAAiB,QARK,CAStB,gBAAiB,UATK,CAAjB,CAWL,cAEF,MAAO,MAAMC,CAAAA,QAAQ,CAAG,CAAC,CACvBC,KAAK,CAAE,yBADgB,CAEvBJ,EAAE,CAAE,yBAFmB,CAGvBK,QAAQ,CAAE,EAHa,CAAD,CAIrB,CACDD,KAAK,CAAE,sBADN,CAEDJ,EAAE,CAAE,sBAFH,CAGDK,QAAQ,CAAE,EAHT,CAJqB,CAQrB,CACDD,KAAK,CAAE,sBADN,CAEDJ,EAAE,CAAE,sBAFH,CAGDK,QAAQ,CAAE,EAHT,CARqB,CAAjB,CAaP,KAAMC,CAAAA,aAAa,CAAGC,IAAI,EAAI,QAASC,CAAAA,mBAAT,CAA6BC,KAA7B,CAAoC,CAChEC,OAAO,CAACC,IAAR,CAAa,aAAeJ,IAAf,CAAsB,yEAAnC,EACA,MAAO,WAASE,KAAT,CAAP,CACD,CAHD,CAKA,KAAMG,CAAAA,WAAW,CAAG,CAClBT,QADkB,CAApB,CAGA,KAAMU,CAAAA,SAAS,CAAG,SAAlB,CACA,cAAe,SAASC,CAAAA,UAAT,CAAoB,CACjCC,UADiC,CAEjC,GAAGN,KAF8B,CAApB,CAGZ,CACD,MAAO,KAAC,SAAD,aAAeG,WAAf,CAAgCH,KAAhC,EAAuC,UAAU,CAAEM,UAAnD,CAA+D,OAAO,CAAC,WAAvE,GAEL,aAAK,wBAAL,CAA6B,kBAAG,UAAU,CAAC,GAAd,EAAsB,CAC/C,OAAQ,wDADuC,CAAtB,EAEtB,oCAFsB,CAA7B,CAEiD;SAFjD,CAGM,kBAAG,UAAU,CAAC,GAAd,EAAsB,CACxB,OAAQ,qBADgB,CAAtB,EAEC,SAFD,CAHN,CAKsB;6BALtB,CAFK,CASL,aAAK,gDAAL,CAAqD,kBAAG,UAAU,CAAC,GAAd,EAAsB,CACvE,OAAQ,4CAD+D,CAAtB,EAE9C,2BAF8C,CAArD,CAEwC,GAFxC,CATK,CAYL,SAAQ,CACN,KAAM,yBADA,CAAR,CAEK,yBAFL,CAZK,CAeL,aAAK,qCAAL,CAfK,CAgBL,eAAK,qBAAM,UAAU,CAAC,KAAjB,EAA2B,CAC5B,YAAa,gBADe,CAE5B,aAAc,QAFc,CAG5B,SAAU,IAHkB,CAA3B,EAIE;;;;CAJF,CAAL,CAhBK,CAyBL,SAAQ,CACN,KAAM,sBADA,CAAR,CAEK,sBAFL,CAzBK,CA4BL,aAAK,mCAAL,CA5BK,CA6BL,eAAK,qBAAM,UAAU,CAAC,KAAjB,EAA2B,CAC5B,YAAa,gBADe,CAE5B,aAAc,QAFc,CAG5B,SAAU,IAHkB,CAA3B,EAIE;;;;CAJF,CAAL,CA7BK,CAsCL,aAAK,6CAAL,CAAkD,kBAAY,UAAU,CAAC,GAAvB,EAA6B,GAA7B,CAAlD,CAAiG;;yBAAjG,CAtCK,CAyCL,SAAQ,CACN,KAAM,sBADA,CAAR,CAEK,sBAFL,CAzCK,CAAP,CA6CD,CAED,CACAD,UAAU,CAACE,cAAX,CAA4B,IAA5B","sourcesContent":["\n  import React from 'react';\n  import { mdx } from '@mdx-js/react';\n\n  export const frontMatter = {\n\tid: 'jsonnet',\n\ttitle: 'Data Mapping with Jsonnet'\n};\nexport const metadata = {\n  \"id\": \"reference/jsonnet\",\n  \"title\": \"Data Mapping with Jsonnet\",\n  \"description\": \"Some modules like the [OpenID Connect and OAuth2 Strategy](../concepts/credentials/openid-connect-oidc-oauth2.mdx)\",\n  \"source\": \"@site/docs/reference/jsonnet.md\",\n  \"permalink\": \"/kratos/docs/next/reference/jsonnet\",\n  \"editUrl\": \"https://github.com/ory/kratos/edit/master/docs/docs/reference/jsonnet.md\",\n  \"version\": \"next\",\n  \"lastUpdatedBy\": \"Author\",\n  \"lastUpdatedAt\": 1539502055\n};\n  /* @jsx mdx */\n\nexport const rightToc = [{\n  value: 'Formatting Jsonnet Code',\n  id: 'formatting-jsonnet-code',\n  children: []\n}, {\n  value: 'Linting Jsonnet Code',\n  id: 'linting-jsonnet-code',\n  children: []\n}, {\n  value: 'Testing Jsonnet Code',\n  id: 'testing-jsonnet-code',\n  children: []\n}];\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  rightToc\n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <p>{`Some modules like the `}<a parentName=\"p\" {...{\n        \"href\": \"../concepts/credentials/openid-connect-oidc-oauth2.mdx\"\n      }}>{`OpenID Connect and OAuth2 Strategy`}</a>{`\nsupport `}<a parentName=\"p\" {...{\n        \"href\": \"https://jsonnet.org\"\n      }}>{`Jsonnet`}</a>{`, allowing you to easily write code that modifies your identity's data\nand load it into ORY Kratos.`}</p>\n    <p>{`We highly recommend checking out the official `}<a parentName=\"p\" {...{\n        \"href\": \"https://jsonnet.org/learning/tutorial.html\"\n      }}>{`learning Jsonnet tutorial`}</a>{`.`}</p>\n    <h2 {...{\n      \"id\": \"formatting-jsonnet-code\"\n    }}>{`Formatting Jsonnet Code`}</h2>\n    <p>{`Format Jsonnet code snippets using:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-shell\",\n        \"metastring\": \"script\",\n        \"script\": true\n      }}>{`$ kratos help jsonnet format\n\n# e.g.:\n% kratos jsonnet format --write path/to/files/*.jsonnet\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"linting-jsonnet-code\"\n    }}>{`Linting Jsonnet Code`}</h2>\n    <p>{`Lint Jsonnet code snippets using:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-shell\",\n        \"metastring\": \"script\",\n        \"script\": true\n      }}>{`$ kratos help jsonnet lint\n\n# e.g.:\n$ kratos jsonnet lint path/to/files/*.jsonnet\n`}</code></pre>\n    <p>{`The command will exit with an exit code of `}<inlineCode parentName=\"p\">{`1`}</inlineCode>{` and\nprint all found lint errors to stderr if the code\nsnippet has lint issues.`}</p>\n    <h2 {...{\n      \"id\": \"testing-jsonnet-code\"\n    }}>{`Testing Jsonnet Code`}</h2>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;\n  "]}]}
{"remainingRequest":"/Users/foobar/go/src/github.com/ory/kratos/docs/node_modules/babel-loader/lib/index.js??ref--7-1!/Users/foobar/go/src/github.com/ory/kratos/docs/node_modules/@docusaurus/mdx-loader/src/index.js??ref--7-2!/Users/foobar/go/src/github.com/ory/kratos/docs/node_modules/@docusaurus/plugin-content-docs/lib/markdown/index.js??ref--7-3!/Users/foobar/go/src/github.com/ory/kratos/docs/docs/concepts/identity-data-model.md","dependencies":[{"path":"/Users/foobar/go/src/github.com/ory/kratos/docs/docs/concepts/identity-data-model.md","mtime":1589545707046},{"path":"/Users/foobar/go/src/github.com/ory/kratos/docs/.docusaurus/docusaurus-plugin-content-docs/site-docs-concepts-identity-data-model-md-40a.json","mtime":1589542779064},{"path":"/Users/foobar/go/src/github.com/ory/kratos/docs/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/foobar/go/src/github.com/ory/kratos/docs/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/foobar/go/src/github.com/ory/kratos/docs/node_modules/@docusaurus/mdx-loader/src/index.js","mtime":499162500000},{"path":"/Users/foobar/go/src/github.com/ory/kratos/docs/node_modules/@docusaurus/plugin-content-docs/lib/markdown/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/Users/foobar/go/src/github.com/ory/kratos/docs/docs/concepts/identity-data-model.md"],"names":["React","mdx","frontMatter","id","title","metadata","rightToc","value","children","makeShortcode","name","MDXDefaultShortcode","props","console","warn","layoutProps","MDXLayout","MDXContent","components","isMDXComponent"],"mappings":"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","sourcesContent":["\n  import React from 'react';\n  import { mdx } from '@mdx-js/react';\n\n  export const frontMatter = {\n\tid: 'identity-user-model',\n\ttitle: 'Identity Data Model'\n};\nexport const metadata = {\n  \"id\": \"concepts/identity-user-model\",\n  \"title\": \"Identity Data Model\",\n  \"description\": \"An identity (\\\"user\\\", \\\"user account\\\", \\\"account\\\", \\\"subject\\\") is the \\\"who\\\" of a\",\n  \"source\": \"@site/docs/concepts/identity-data-model.md\",\n  \"permalink\": \"/kratos/docs/next/concepts/identity-user-model\",\n  \"editUrl\": \"https://github.com/ory/kratos/edit/master/docs/docs/concepts/identity-data-model.md\",\n  \"version\": \"next\",\n  \"lastUpdatedBy\": \"Author\",\n  \"lastUpdatedAt\": 1539502055,\n  \"sidebar\": \"docs\",\n  \"previous\": {\n    \"title\": \"User Interface\",\n    \"permalink\": \"/kratos/docs/next/concepts/ui-user-interface\"\n  },\n  \"next\": {\n    \"title\": \"Overview\",\n    \"permalink\": \"/kratos/docs/next/concepts/credentials\"\n  }\n};\n  /* @jsx mdx */\n\nexport const rightToc = [{\n  value: 'Identity Traits and JSON Schemas',\n  id: 'identity-traits-and-json-schemas',\n  children: []\n}, {\n  value: 'JSON Schema Vocabulary Extensions',\n  id: 'json-schema-vocabulary-extensions',\n  children: [{\n    value: 'Identifier for Username and Password Flows',\n    id: 'identifier-for-username-and-password-flows',\n    children: []\n  }]\n}];\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  rightToc\n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <p>{`An identity (\"user\", \"user account\", \"account\", \"subject\") is the \"who\" of a\nsoftware system. It can be a customer, an employee, a user, a contractor, and\neven a programmatic identity such as an IoT device, an application, or some\nother type of \"robot.\"`}</p>\n    <p>{`In ORY Kratos' terminology we call all of them \"Identity\", and it is always\nexposed as `}<inlineCode parentName=\"p\">{`identity`}</inlineCode>{` in the API Endpoints, request and response payloads.`}</p>\n    <p>{`The following examples uses YAML for improved readability. However, the API\npayload is usually in JSON format. An `}<inlineCode parentName=\"p\">{`identity`}</inlineCode>{` has the following properties:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-yaml\",\n        \"metastring\": \"title=\\\"$ curl kratos-host-url/admin-endpoint/identities/9f425a8d-7efc-4768-8f23-7647a74fdf13\\\"\",\n        \"title\": \"\\\"$\",\n        \"curl\": true,\n        \"kratos-host-url/admin-endpoint/identities/9f425a8d-7efc-4768-8f23-7647a74fdf13\\\"\": true\n      }}>{`# A universally unique ID that is generated when the identity is created and that cannot be changed or updated\n# at a later stage.\nid: '9f425a8d-7efc-4768-8f23-7647a74fdf13'\n\n# This section represents all the credentials associated with this identity. It is further explained in section \"Credentials\".\ncredentials:\n  password:\n    id: password\n    identifiers:\n      - john.doe@acme.com\n      - johnd@ory.sh\n    config:\n      hashed_password: ...\n  oidc:\n    id: oidc\n    identifiers:\n      - google:j8kf7a3...\n      - facebook:83475891...\n    config:\n      - provider: google\n        identifier: j8kf7a3\n      - provider: facebook\n        identifier: 83475891\n\n# This is the JSON Schema ID used for validating the identities's traits.\ntraits_schema_id: default\n# Could also be another schema:\n# traits_schema_id: customer\n\n# Traits represent information about the identity, such as the first or last name. The traits content is completely\n# up to you and will be validated using the JSON Schema at \\`traits_schema_url\\`.\ntraits:\n  # These are just examples\n  email: office@ory.sh\n  name:\n    first: Aeneas\n    last: Rekkas\n  favorite_animal: Dog\n  accepted_tos: true\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"identity-traits-and-json-schemas\"\n    }}>{`Identity Traits and JSON Schemas`}</h2>\n    <p>{`Traits are data associated with an identity. You have to define its schema\naccording to your application's needs. They are also supposed to be modified by\nthe identity itself e.g. as part of the registration or profile update process\nas well as anyone having access to ORY Krato's Admin API.`}</p>\n    <p>{`To validate traits Ory Kratos uses\n`}<a parentName=\"p\" {...{\n        \"href\": \"https://json-schema.org/learn/getting-started-step-by-step.html\"\n      }}>{`JSON Schema`}</a>{`\nadding a small extension \"Vocabulary\" that allows you to tell ORY Kratos that a\nspecific trait adds some specific meaning to the standard JSON Schema (more on\nthat later).`}</p>\n    <p>{`Each identity can, theoretically, have a different Traits Schema. This is useful\nin the following situations:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`there is more than one type of identity in the system for instance customers,\nsupport or staff;`}</li>\n      <li parentName=\"ul\">{`the system includes both users and robots sometimes also known as named\nservice accounts;`}</li>\n      <li parentName=\"ul\">{`the system needs to ingest another company's identity model, and`}</li>\n      <li parentName=\"ul\">{`the system's identity model changes or grows over time and requires\nversioning.`}</li>\n    </ul>\n    <p>{`The following example illustrates a usage scenario with three types of\nidentities: Regular customers,\n`}<a parentName=\"p\" {...{\n        \"href\": \"https://en.wikipedia.org/wiki/Grandfather_clause\"\n      }}>{`grandfather accounts`}</a>{`, and\nService Accounts (e.g. Microsoft provides\n`}<a parentName=\"p\" {...{\n        \"href\": \"https://docs.microsoft.com/en-us/windows/security/identity-protection/access-control/service-accounts\"\n      }}>{`Service Accounts`}</a>{`).\nThere would be one JSON Schema per type of identity:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`Customers: `}<inlineCode parentName=\"li\">{`http://mydomain.com/schemas/v2/customer.schema.json`}</inlineCode></li>\n      <li parentName=\"ul\">{`Grandfather Accounts: `}<inlineCode parentName=\"li\">{`http://mydomain.com/schemas/v1/customer.schema.json`}</inlineCode></li>\n      <li parentName=\"ul\">{`Service Accounts: `}<inlineCode parentName=\"li\">{`http://mydomain.com/schemas/service-account.schema.json`}</inlineCode></li>\n    </ul>\n    <p>{`ORY Kratos expects the JSON Schemas in its configuration file:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-yaml\"\n      }}>{`identity:\n  traits:\n    # This will be the default JSON Schema. If  \\`traits_schema_id\\` is empty when creating an identity using the\n    # Admin API, or a user signs up using a selfservice flow, this schema will be used.\n    #\n    # This is a required configuration field!\n    default_schema_url: http://foo.bar.com/person.schema.json\n\n    # Optionally define additional schemas here:\n    schemas:\n      # When creating an identity that uses this schema, \\`traits_schema_id: customer\\` would be set for that identity.\n      - id: customer\n        url: http://foo.bar.com/customer.schema.json\n`}</code></pre>\n    <p>{`ORY Kratos validates the traits against the corresponding schema on all writing\noperations like create or update. The employed business logic must be able to\ndistinguish these three types of identities. You might use a switch statement\nlike in the following example:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-go\"\n      }}>{`// This is an example program that can deal with all three types of identities\nsession, err := ory.SessionFromRequest(r)\n// some error handling\nswitch (session.Identity.TraitsSchemaID) {\n    case \"customer\":\n        // ...\n    case \"employee\":\n        // ...\n    case \"default\":\n        fallthrough\n    default:\n        // ...\n}\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"json-schema-vocabulary-extensions\"\n    }}>{`JSON Schema Vocabulary Extensions`}</h2>\n    <p>{`Because ORY Kratos does not know that a particular field has a system-relevant\nmeaning you have to specify these in the schema. This includes for example:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`The email address for recovering a lost password`}</li>\n      <li parentName=\"ul\">{`The identifier for logging in with a password e.g. username or email`}</li>\n      <li parentName=\"ul\">{`The phone number for enabling SMS 2FA`}</li>\n      <li parentName=\"ul\">{`...`}</li>\n    </ul>\n    <p>{`ORY Kratos' JSON Schema Vocabulary Extension can be used within a property:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-json5\"\n      }}>{`{\n  $id: 'http://mydomain.com/schemas/v2/customer.schema.json',\n  $schema: 'http://json-schema.org/draft-07/schema#',\n  title: 'A customer (v2)',\n  type: 'object',\n  properties: {\n    email: {\n      title: 'E-Mail',\n      type: 'string',\n      format: 'email',\n\n      // This tells ORY Kratos that the field should be used as the \"username\" for the username+password flow.\n      // It is an extension to the regular JSON Schema vocabulary.\n      'ory.sh/kratos': {\n        credentials: {\n          password: {\n            identifier: true,\n          },\n        },\n      },\n    },\n  },\n}\n`}</code></pre>\n    <p>{`An overview of available configuration options follows in the next sections.`}</p>\n    <h3 {...{\n      \"id\": \"identifier-for-username-and-password-flows\"\n    }}>{`Identifier for Username and Password Flows`}</h3>\n    <p>{`You can configure ORY Kratos to use specific fields as the `}<em parentName=\"p\">{`identifier`}</em>{` e.g.\nusername, email, phone number, etc., in the Username and Password Registration\nand Login Flow:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-json5\"\n      }}>{`{\n  'ory.sh/kratos': {\n    credentials: {\n      password: {\n        identifier: true,\n      },\n    },\n  },\n}\n`}</code></pre>\n    <p>{`Looking at the traits from above`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-yaml\"\n      }}>{`traits:\n  # These are just examples\n  email: office@ory.sh\n  name:\n    first: Aeneas\n    last: Rekkas\n  favorite_animal: Dog\n  accepted_tos: true\n`}</code></pre>\n    <p>{`and using a JSON Schema that uses the `}<inlineCode parentName=\"p\">{`email`}</inlineCode>{` field as the identifier for the\npassword flow`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-json5\"\n      }}>{`{\n  $id: 'http://mydomain.com/schemas/v2/customer.schema.json',\n  $schema: 'http://json-schema.org/draft-07/schema#',\n  title: 'A customer (v2)',\n  type: 'object',\n  properties: {\n    email: {\n      title: 'E-Mail',\n      type: 'string',\n      format: 'email',\n\n      // This tells ORY Kratos that the field should be used as the \"username\" for the Username and Password Flow.\n      'ory.sh/kratos': {\n        credentials: {\n          password: {\n            identifier: true,\n          },\n        },\n      },\n    },\n    name: {\n      type: 'object',\n      properties: {\n        first: {\n          type: 'string',\n        },\n        last: {\n          type: 'string',\n        },\n      },\n    },\n    favorite_animal: {\n      type: 'string',\n    },\n    accepted_tos: {\n      type: 'string',\n    },\n  },\n  required: ['email'],\n  additionalProperties: false,\n}\n`}</code></pre>\n    <p>{`In this example, ORY Kratos understands that traits✉️ `}<inlineCode parentName=\"p\">{`office@ory.sh`}</inlineCode>{` is\nthe identity's identifier. The system expects `}<inlineCode parentName=\"p\">{`office@ory.sh`}</inlineCode>{` plus a password to\nsign in.`}</p>\n    <p><a parentName=\"p\" {...{\n        \"href\": \"/kratos/docs/next/concepts/credentials#username-and-password\"\n      }}>{`Username and Password Credentials`}</a>{`\ncontains more information and examples.`}</p>\n    <p>{`There are currently no other extensions supported for Identity Traits. Further\nfields will be added in future releases!`}</p>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;\n  "]}]}
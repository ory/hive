{"remainingRequest":"/Users/foobar/go/src/github.com/ory/kratos/docs/node_modules/babel-loader/lib/index.js??ref--7-1!/Users/foobar/go/src/github.com/ory/kratos/docs/node_modules/@docusaurus/mdx-loader/src/index.js??ref--7-2!/Users/foobar/go/src/github.com/ory/kratos/docs/node_modules/@docusaurus/plugin-content-docs/lib/markdown/index.js??ref--7-3!/Users/foobar/go/src/github.com/ory/kratos/docs/versioned_docs/version-v0.1/self-service/flows/verify-email-account-activation.mdx","dependencies":[{"path":"/Users/foobar/go/src/github.com/ory/kratos/docs/versioned_docs/version-v0.1/self-service/flows/verify-email-account-activation.mdx","mtime":1587158277523},{"path":"/Users/foobar/go/src/github.com/ory/kratos/docs/.docusaurus/docusaurus-plugin-content-docs/site-versioned-docs-version-v-0-1-self-service-flows-verify-email-account-activation-mdx-c00.json","mtime":1588767627273},{"path":"/Users/foobar/go/src/github.com/ory/kratos/docs/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/foobar/go/src/github.com/ory/kratos/docs/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/foobar/go/src/github.com/ory/kratos/docs/node_modules/@docusaurus/mdx-loader/src/index.js","mtime":499162500000},{"path":"/Users/foobar/go/src/github.com/ory/kratos/docs/node_modules/@docusaurus/plugin-content-docs/lib/markdown/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9leHRlbmRzIGZyb20iL1VzZXJzL2Zvb2Jhci9nby9zcmMvZ2l0aHViLmNvbS9vcnkva3JhdG9zL2RvY3Mvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2V4dGVuZHMiO2ltcG9ydCBSZWFjdCBmcm9tJ3JlYWN0JztpbXBvcnR7bWR4fWZyb20nQG1keC1qcy9yZWFjdCc7ZXhwb3J0IGNvbnN0IGZyb250TWF0dGVyPXtpZDondmVyaWZ5LWVtYWlsLWFjY291bnQtYWN0aXZhdGlvbicsdGl0bGU6J0VtYWlsIGFuZCBQaG9uZSBWZXJpZmljYXRpb24gYW5kIEFjY291bnQgQWN0aXZhdGlvbid9O2V4cG9ydCBjb25zdCBtZXRhZGF0YT17ImlkIjoidmVyc2lvbi12MC4xL3NlbGYtc2VydmljZS9mbG93cy92ZXJpZnktZW1haWwtYWNjb3VudC1hY3RpdmF0aW9uIiwidGl0bGUiOiJFbWFpbCBhbmQgUGhvbmUgVmVyaWZpY2F0aW9uIGFuZCBBY2NvdW50IEFjdGl2YXRpb24iLCJkZXNjcmlwdGlvbiI6ImltcG9ydCB1c2VCYXNlVXJsIGZyb20gJ0Bkb2N1c2F1cnVzL3VzZUJhc2VVcmwnOyIsInNvdXJjZSI6IkBzaXRlL3ZlcnNpb25lZF9kb2NzL3ZlcnNpb24tdjAuMS9zZWxmLXNlcnZpY2UvZmxvd3MvdmVyaWZ5LWVtYWlsLWFjY291bnQtYWN0aXZhdGlvbi5tZHgiLCJwZXJtYWxpbmsiOiIva3JhdG9zL2RvY3MvdjAuMS9zZWxmLXNlcnZpY2UvZmxvd3MvdmVyaWZ5LWVtYWlsLWFjY291bnQtYWN0aXZhdGlvbiIsImVkaXRVcmwiOiJodHRwczovL2dpdGh1Yi5jb20vb3J5L2tyYXRvcy9lZGl0L21hc3Rlci9kb2NzL3ZlcnNpb25lZF9kb2NzL3ZlcnNpb24tdjAuMS9zZWxmLXNlcnZpY2UvZmxvd3MvdmVyaWZ5LWVtYWlsLWFjY291bnQtYWN0aXZhdGlvbi5tZHgiLCJ2ZXJzaW9uIjoidjAuMSIsImxhc3RVcGRhdGVkQnkiOiJBdXRob3IiLCJsYXN0VXBkYXRlZEF0IjoxNTM5NTAyMDU1LCJzaWRlYmFyIjoidmVyc2lvbi12MC4xL2RvY3MiLCJwcmV2aW91cyI6eyJ0aXRsZSI6IlVzZXItRmFjaW5nIEVycm9ycyIsInBlcm1hbGluayI6Ii9rcmF0b3MvZG9jcy92MC4xL3NlbGYtc2VydmljZS9mbG93cy91c2VyLWZhY2luZy1lcnJvcnMifSwibmV4dCI6eyJ0aXRsZSI6Ik92ZXJ2aWV3IiwicGVybWFsaW5rIjoiL2tyYXRvcy9kb2NzL3YwLjEvc2VsZi1zZXJ2aWNlL3N0cmF0ZWdpZXMvaW5kZXgifX07LyogQGpzeCBtZHggKi9pbXBvcnQgdXNlQmFzZVVybCBmcm9tJ0Bkb2N1c2F1cnVzL3VzZUJhc2VVcmwnO2V4cG9ydCBjb25zdCByaWdodFRvYz1be3ZhbHVlOidBY2NvdW50IEFjdGl2YXRpb24nLGlkOidhY2NvdW50LWFjdGl2YXRpb24nLGNoaWxkcmVuOltdfSx7dmFsdWU6J1NldHRpbmcgRW1haWwgVmVyaWZpY2F0aW9uJyxpZDonc2V0dGluZy1lbWFpbC12ZXJpZmljYXRpb24nLGNoaWxkcmVuOlt7dmFsdWU6J1ZlcmlmeSBFbWFpbCBvbiBVc2VyIFJlZ2lzdHJhdGlvbicsaWQ6J3ZlcmlmeS1lbWFpbC1vbi11c2VyLXJlZ2lzdHJhdGlvbicsY2hpbGRyZW46W119XX0se3ZhbHVlOidTZWxmLVNlcnZpY2UgUmVxdWVzdCBvciBSZXNlbmQgVmVyaWZpY2F0aW9uIExpbmsgZm9yIEJyb3dzZXIgQXBwbGljYXRpb25zJyxpZDonc2VsZi1zZXJ2aWNlLXJlcXVlc3Qtb3ItcmVzZW5kLXZlcmlmaWNhdGlvbi1saW5rLWZvci1icm93c2VyLWFwcGxpY2F0aW9ucycsY2hpbGRyZW46W3t2YWx1ZTonU2VydmVyLVNpZGUgQnJvd3NlciBBcHBsaWNhdGlvbnMnLGlkOidzZXJ2ZXItc2lkZS1icm93c2VyLWFwcGxpY2F0aW9ucycsY2hpbGRyZW46W119LHt2YWx1ZTonQ2xpZW50LVNpZGUgQnJvd3NlciBBcHBsaWNhdGlvbnMnLGlkOidjbGllbnQtc2lkZS1icm93c2VyLWFwcGxpY2F0aW9ucycsY2hpbGRyZW46W119XX0se3ZhbHVlOidFbWFpbCBWZXJpZmljYXRpb24gZm9yIEFQSSBDbGllbnRzJyxpZDonZW1haWwtdmVyaWZpY2F0aW9uLWZvci1hcGktY2xpZW50cycsY2hpbGRyZW46W119XTtjb25zdCBtYWtlU2hvcnRjb2RlPW5hbWU9PmZ1bmN0aW9uIE1EWERlZmF1bHRTaG9ydGNvZGUocHJvcHMpe2NvbnNvbGUud2FybigiQ29tcG9uZW50ICIrbmFtZSsiIHdhcyBub3QgaW1wb3J0ZWQsIGV4cG9ydGVkLCBvciBwcm92aWRlZCBieSBNRFhQcm92aWRlciBhcyBnbG9iYWwgc2NvcGUiKTtyZXR1cm4gbWR4KCJkaXYiLHByb3BzKTt9O2NvbnN0IGxheW91dFByb3BzPXtyaWdodFRvY307Y29uc3QgTURYTGF5b3V0PSJ3cmFwcGVyIjtleHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBNRFhDb250ZW50KHtjb21wb25lbnRzLC4uLnByb3BzfSl7cmV0dXJuIG1keChNRFhMYXlvdXQsX2V4dGVuZHMoe30sbGF5b3V0UHJvcHMscHJvcHMse2NvbXBvbmVudHM6Y29tcG9uZW50cyxtZHhUeXBlOiJNRFhMYXlvdXQifSksbWR4KCJwIixudWxsLGBPUlkgS3JhdG9zIGFsbG93cyB1c2VycyB0byB2ZXJpZnkgdGhlaXIgb3V0LW9mLWJhbmQgKGVtYWlsLCB0ZWxlcGhvbmUgbnVtYmVyLAouLi4pIGNvbW11bmljYXRpb24gY2hhbm5lbHMuIFZlcmlmaWNhdGlvbiBjYW4gYmUgaW5pdGlhdGVkYCksbWR4KCJ1bCIsbnVsbCxtZHgoImxpIix7cGFyZW50TmFtZToidWwifSxgYWZ0ZXIgcmVnaXN0cmF0aW9uIG9yIGJ5IHBlcmZvcm1pbmcgYSB2ZXJpZmljYXRpb24gZmxvdztgKSxtZHgoImxpIix7cGFyZW50TmFtZToidWwifSxgbWFudWFsbHkgYnkgdGhlIHVzZXIuYCkpLG1keCgicCIsbnVsbCxgQ3VycmVudGx5LCBPUlkgS3JhdG9zIG9ubHkgc3VwcG9ydHMgdmVyaWZpY2F0aW9uIG9mIGVtYWlsIGFkZHJlc3Nlcy4gQmVmb3JlCnNlbmRpbmcgb3V0IGEgdmVyaWZpY2F0aW9uIEUtTWFpbCwgT1JZIEtyYXRvcyB3aWxsIGNoZWNrIGlmIHRoZSBlbWFpbCBhZGRyZXNzIGlzCmFscmVhZHkga25vd24uIERlcGVuZGluZyBvbiB0aGUgcmVzdWx0LCBvbmUgb2YgdGhlIHR3byBmbG93cyB3aWxsIGJlIGV4ZWN1dGVkOmApLG1keCgidWwiLG51bGwsbWR4KCJsaSIse3BhcmVudE5hbWU6InVsIn0sYFVua25vd24gZW1haWwgYWRkcmVzczogQW4gZW1haWwgaXMgc2VudCB0byB0aGUgYWRkcmVzcyBpbmZvcm1pbmcgdGhlIHJlY2lwaWVudAp0aGF0IHNvbWVvbmUgdHJpZWQgdG8gdmVyaWZ5IHRoaXMgZW1haWwgYWRkcmVzcyBidXQgdGhhdCBpdCBpcyBub3Qga25vd24gYnkKdGhlIHN5c3RlbTogIGAsbWR4KCJpbWciLHthbHQ6IlZlcmlmaWNhdGlvbiBlbWFpbCBmb3IgdW5rbm93biBhZGRyZXNzIixzcmM6dXNlQmFzZVVybCgnaW1nL2RvY3MvZW1haWwtdmVyaWZ5LXVua25vd24ucG5nJyl9KSwiOyIpLG1keCgibGkiLHtwYXJlbnROYW1lOiJ1bCJ9LGBLbm93biBlbWFpbCBhZGRyZXNzOiBBbiBlbWFpbCB3aGljaCBpbmNsdWRlcyBhIHZlcmlmaWNhdGlvbiBsaW5rIGlzIHNlbnQgdG8KdGhlIGFkZHJlc3M6YCxtZHgoImltZyIse2FsdDoiVmVyaWZpY2F0aW9uIGVtYWlsIGZvciBrbm93biBhZGRyZXNzIixzcmM6dXNlQmFzZVVybCgnaW1nL2RvY3MvZW1haWwtdmVyaWZ5LWtub3duLnBuZycpfSksIjsiKSksbWR4KCJwIixudWxsLGBUaGlzIHByZXZlbnRzIEFjY291bnQgRW51bWVyYXRpb24gQXR0YWNrcyBhdCBpcyBpcyBub3QgcG9zc2libGUgZm9yIGEgdGhyZWF0CmFnZW50IHRvIGRldGVybWluZSBpZiBhbiBhY2NvdW50IGV4aXN0cyBvciBub3QgYmFzZWQgb24gdGhlIHZlcmlmaWNhdGlvbiBmbG93LmApLG1keCgicCIsbnVsbCxgVGhlIGVtYWlscyBhcmUgdXNpbmcgdGVtcGxhdGVzIHRoYXQgY2FuIGJlIGN1c3RvbWlzZWQgYXMgZXhwbGFpbmVkIGluCmAsbWR4KCJhIixfZXh0ZW5kcyh7cGFyZW50TmFtZToicCJ9LHsiaHJlZiI6Ii9rcmF0b3MvZG9jcy92MC4xL2NvbmNlcHRzL2VtYWlsLXNtcyN0ZW1wbGF0ZXMifSksYEN1c3RvbWl6aW5nIEUtTWFpbCBUZW1wbGF0ZXNgKSxgLiBUaGUKdGVtcGxhdGUgSURzIGFyZTpgKSxtZHgoInVsIixudWxsLG1keCgibGkiLHtwYXJlbnROYW1lOiJ1bCJ9LGBVbmtub3duIGVtYWlsIGFkZHJlc3M6IGAsbWR4KCJpbmxpbmVDb2RlIix7cGFyZW50TmFtZToibGkifSxgdmVyaWZ5X2ludmFsaWRgKSksbWR4KCJsaSIse3BhcmVudE5hbWU6InVsIn0sYEtub3duIGVtYWlsIGFkZHJlc3M6IGAsbWR4KCJpbmxpbmVDb2RlIix7cGFyZW50TmFtZToibGkifSxgdmVyaWZ5X3ZhbGlkc2ApKSksbWR4KCJoMiIseyJpZCI6ImFjY291bnQtYWN0aXZhdGlvbiJ9LGBBY2NvdW50IEFjdGl2YXRpb25gKSxtZHgoInAiLG51bGwsYFVzaW5nIHRoaXMgZmVhdHVyZSBpbXBsZW1lbnRzIHRoZSBzby1jYWxsZWQgImFjY291bnQgYWN0aXZhdGlvbiIgd2l0aCB0aGUKZGlmZmVyZW5jZSB0aGF0IE9SWSBLcmF0b3MgZG9lcyBub3QgcHJvdmlkZSBhIGZlYXR1cmUgdGhhdCBwcmV2ZW50cyBzaWduIGluIGludG8KYWNjb3VudHMgd2l0aG91dCB2ZXJpZmllZCBhZGRyZXNzZXMuIFRoZSByZWFzb24gYmVpbmcgdGhhdCB2ZXJpZmljYXRpb24gaXMKcHJvdmluZyB0aGF0IHRoZSB1c2VyIGNvbnRyb2xzIHRoZSBnaXZlbiBhZGRyZXNzLCBidXQgaXQgaXMgbm90IGFuCmF1dGhlbnRpY2F0aW9uIG1lY2hhbmlzbS5gKSxtZHgoInAiLG51bGwsYFlvdSBtYXkgaG93ZXZlciBjaG9zZSB0byBsaW1pdCB3aGF0IGFuIGlkZW50aXR5IHdpdGhvdXQgdmVyaWZpZWQgYWRkcmVzc2VzIGlzCmFibGUgdG8gZG8gaW4geW91ciBhcHBsaWNhdGlvbiBsb2dpYyBvciBBUEkgR2F0ZXdheXMuYCksbWR4KCJoMiIseyJpZCI6InNldHRpbmctZW1haWwtdmVyaWZpY2F0aW9uIn0sYFNldHRpbmcgRW1haWwgVmVyaWZpY2F0aW9uYCksbWR4KCJwIixudWxsLGBZb3UgbXVzdCBkZWZpbmUgYXQgbGVhc3Qgb25lIElkZW50aXR5IFRyYWl0cyBmaWVsZCBhcyBhIHZlcmlmaWNhdGlvbiBmaWVsZC4gWW91CmNhbiBkbyBzbyBieSBkZWZpbmluZyB0aGUgZm9sbG93aW5nIHNlY3Rpb24gaW4geW91ciBJZGVudGl0eSBUcmFpdHMgSlNPTiBTY2hlbWE6YCksbWR4KCJwcmUiLG51bGwsbWR4KCJjb2RlIixfZXh0ZW5kcyh7cGFyZW50TmFtZToicHJlIn0seyJjbGFzc05hbWUiOiJsYW5ndWFnZS1qc29uNSJ9KSxgewogIC8vIC4uLgogIHByb3BlcnRpZXM6IHsKICAgIC8vIFRoaXMgY291bGQgYWxzbyBiZSBhbiBhcnJheSBvciBhbnkgb3RoZXIgZmllbGQgbmFtZQogICAgZW1haWw6IHsKICAgICAgdHlwZTogJ3N0cmluZycsCiAgICAgIGZvcm1hdDogJ2VtYWlsJywKICAgICAgJ29yeS5zaC9rcmF0b3MnOiB7CiAgICAgICAgdmVyaWZpY2F0aW9uOiB7CiAgICAgICAgICAvLyBDdXJyZW50bHksIG9ubHkgZW1haWwgaXMgc3VwcG9ydGVkCiAgICAgICAgICB2aWE6ICdlbWFpbCcsCiAgICAgICAgfSwKICAgICAgfSwKICAgIH0sCiAgfSwKICAvLyAuLi4KfQpgKSksbWR4KCJwIixudWxsLGBZb3UgY2FuIGFsc28gY29tYmluZSB0aGlzIHdpdGggdGhlIHBhc3N3b3JkIHN0cmF0ZWd5IGxvZ2luIGlkZW50aWZpZXIuYCksbWR4KCJwcmUiLG51bGwsbWR4KCJjb2RlIixfZXh0ZW5kcyh7cGFyZW50TmFtZToicHJlIn0seyJjbGFzc05hbWUiOiJsYW5ndWFnZS1qc29uNSJ9KSxgewogIC8vIC4uLgogIHByb3BlcnRpZXM6IHsKICAgIC8vIFRoaXMgY291bGQgYWxzbyBiZSBhbiBhcnJheSBvciBhbnkgb3RoZXIgZmllbGQgbmFtZQogICAgZW1haWw6IHsKICAgICAgdHlwZTogJ3N0cmluZycsCiAgICAgIGZvcm1hdDogJ2VtYWlsJywKICAgICAgJ29yeS5zaC9rcmF0b3MnOiB7CiAgICAgICAgY3JlZGVudGlhbHM6IHsKICAgICAgICAgIHBhc3N3b3JkOiB7CiAgICAgICAgICAgIGlkZW50aWZpZXI6IHRydWUsCiAgICAgICAgICB9LAogICAgICAgIH0sCiAgICAgICAgdmVyaWZpY2F0aW9uOiB7CiAgICAgICAgICAvLyBDdXJyZW50bHksIG9ubHkgZW1haWwgaXMgc3VwcG9ydGVkCiAgICAgICAgICB2aWE6ICdlbWFpbCcsCiAgICAgICAgfSwKICAgICAgfSwKICAgIH0sCiAgfSwKICAvLyAuLi4KfQpgKSksbWR4KCJwIixudWxsLGBUaGF0IHdheSwgdGhlIGZpZWxkIGAsbWR4KCJpbmxpbmVDb2RlIix7cGFyZW50TmFtZToicCJ9LGBlbWFpbGApLGAgKG9yIGFueSBmaWVsZCB5b3UgZGVmaW5lIHdpdGggdGhlc2UgcHJvcGVydGllcykgd2lsbApzZXJ2ZSBhcyBib3RoIHRoZSBsb2dpbiBpZGVudGlmaWVyIGFzIHdlbGwgYXMgYSB2ZXJpZmlhYmxlIGVtYWlsIGFkZHJlc3MuYCksbWR4KCJoMyIseyJpZCI6InZlcmlmeS1lbWFpbC1vbi11c2VyLXJlZ2lzdHJhdGlvbiJ9LGBWZXJpZnkgRW1haWwgb24gVXNlciBSZWdpc3RyYXRpb25gKSxtZHgoInAiLG51bGwsYFRvIHNlbmQgYW4gZW1haWwgYWZ0ZXIgdXNlciByZWdpc3RyYXRpb24sIGFkZCB0aGUgZm9sbG93aW5nIHNlY3Rpb25zIHRvIHlvdXIgT1JZCktyYXRvcyBjb25maWcgZmlsZTpgKSxtZHgoInByZSIsbnVsbCxtZHgoImNvZGUiLF9leHRlbmRzKHtwYXJlbnROYW1lOiJwcmUifSx7ImNsYXNzTmFtZSI6Imxhbmd1YWdlLXlhbWwifSksYCMgcmVxdWlyZWQKdXJsczoKICAjIFNpbWlsYXIgdG8gbG9naW5fdWkgb3IgcHJvZmlsZV91aSwgdGhpcyBwb2ludHMgdG8gdGhlIHVzZXIgaW50ZXJmYWNlIHdoZXJlIHRoZSB2ZXJpZmljYWl0b24KICAjIHVzZXIgaW50ZXJmYWNlIGlzIGltcGxlbWVudGVkLgogICMKICAjIEZvciBtb3JlIGluZm9ybWF0aW9uIG9uIHRoaXMgZW5kcG9pbnQgcGxlYXNlIGhlYWQgb3ZlciB0byB0aGUgbmV4dCBzZWN0aW9uCiAgdmVyaWZ5X3VpOiBodHRwczovL215LWtyYXRvcy11aS92ZXJpZnkKCnNlbGZzZXJ2aWNlOgogIHJlZ2lzdHJhdGlvbjoKICAgIGFmdGVyOgogICAgICBwYXNzd29yZDoKICAgICAgICAjIC4uLi4KICAgICAgICAtIGpvYjogdmVyaWZ5ICMgVGhpcyBzZW5kcyB0aGUgdmVyaWZpY2F0aW9uIGVtYWlsIGFmdGVyIHN1Y2Nlc3NmdWwgcmVnaXN0cmF0aW9uCiAgICAgICAgIyAuLi4uCmApKSxtZHgoImgyIix7ImlkIjoic2VsZi1zZXJ2aWNlLXJlcXVlc3Qtb3ItcmVzZW5kLXZlcmlmaWNhdGlvbi1saW5rLWZvci1icm93c2VyLWFwcGxpY2F0aW9ucyJ9LGBTZWxmLVNlcnZpY2UgUmVxdWVzdCBvciBSZXNlbmQgVmVyaWZpY2F0aW9uIExpbmsgZm9yIEJyb3dzZXIgQXBwbGljYXRpb25zYCksbWR4KCJwIixudWxsLGBBIHVzZXIgbWlnaHQgd2FudCB0byByZXNlbmQgYSB2ZXJpZmljYXRpb24gbGluayBiZWNhdXNlIHRoZSBsaW5rIGV4cGlyZWQgb3IgZGlkCm5vdCBhcnJpdmUgaW4gdGhlIGluYm94LmApLG1keCgicCIsbnVsbCxgVGhlIGZsb3cgaW1wbGVtZW50aW5nIHRoaXMgZmVhdHVyZSB1c2VzIHRoZSBhbHJlYWR5IGVzdGFibGlzaGVkCmAsbWR4KCJhIixfZXh0ZW5kcyh7cGFyZW50TmFtZToicCJ9LHsiaHJlZiI6Ii9rcmF0b3MvZG9jcy92MC4xL3NlbGYtc2VydmljZS9mbG93cy9pbmRleCNuZXR3b3JrLWZsb3dzLWZvci1icm93c2VycyJ9KSxgTmV0d29yayBGbG93cyBmb3IgQnJvd3NlcnNgKSxgLmApLG1keCgiaDMiLHsiaWQiOiJzZXJ2ZXItc2lkZS1icm93c2VyLWFwcGxpY2F0aW9ucyJ9LGBTZXJ2ZXItU2lkZSBCcm93c2VyIEFwcGxpY2F0aW9uc2ApLG1keCgicCIsbnVsbCxgWW91IGNhbiBmaW5kIGFuIGV4ZW1wbGFyeSBpbXBsZW1lbnRhdGlvbiBmb3IgdGhpcyBmbG93IG9uIEdpdEh1YjpgKSxtZHgoInVsIixudWxsLG1keCgibGkiLHtwYXJlbnROYW1lOiJ1bCJ9LG1keCgiYSIsX2V4dGVuZHMoe3BhcmVudE5hbWU6ImxpIn0seyJocmVmIjoiaHR0cHM6Ly9naXRodWIuY29tL29yeS9rcmF0b3Mtc2VsZnNlcnZpY2UtdWktbm9kZS9ibG9iL21hc3Rlci9zcmMvcm91dGVzL3ZlcmlmeS50cyJ9KSxgVmVyaWZpY2F0aW9uIEhUVFAgUm91dGVgKSksbWR4KCJsaSIse3BhcmVudE5hbWU6InVsIn0sbWR4KCJhIixfZXh0ZW5kcyh7cGFyZW50TmFtZToibGkifSx7ImhyZWYiOiJodHRwczovL2dpdGh1Yi5jb20vb3J5L2tyYXRvcy1zZWxmc2VydmljZS11aS1ub2RlL2Jsb2IvbWFzdGVyL3ZpZXdzL3ZlcmlmeS5oYnMifSksYFZlcmlmaWNhdGlvbiBVSWApKSksbWR4KCJwIixudWxsLGBUaGUgYCxtZHgoImEiLF9leHRlbmRzKHtwYXJlbnROYW1lOiJwIn0seyJocmVmIjoiL2tyYXRvcy9kb2NzL3YwLjEvc2VsZi1zZXJ2aWNlL2Zsb3dzL2luZGV4I25ldHdvcmstZmxvd3MtZm9yLWJyb3dzZXJzIn0pLGBOZXR3b3JrIEZsb3dzIGZvciBCcm93c2Vyc2ApLGAgd29ya3MgYXMKZm9sbG93cyBmb3IgRW1haWwgVmVyaWZpY2F0aW9uOmApLG1keCgib2wiLG51bGwsbWR4KCJsaSIse3BhcmVudE5hbWU6Im9sIn0sYEFuIGluaXRpYWwgSFRUUCBSZXF1ZXN0IGlzIG1hZGUgdG8KYCxtZHgoImlubGluZUNvZGUiLHtwYXJlbnROYW1lOiJsaSJ9LGAvc2VsZi1zZXJ2aWNlL2Jyb3dzZXIvZmxvd3MvdmVyaWZpY2F0aW9uLzp2aWFgKSxgLiBDdXJyZW50bHksIG9ubHkgYCxtZHgoImlubGluZUNvZGUiLHtwYXJlbnROYW1lOiJsaSJ9LGBlbWFpbGApLGAgaXMKc3VwcG9ydGVkIGFzIGAsbWR4KCJpbmxpbmVDb2RlIix7cGFyZW50TmFtZToibGkifSxgOnZpYWApLGAuYCksbWR4KCJsaSIse3BhcmVudE5hbWU6Im9sIn0sYE9SWSBLcmF0b3MgcmVkaXJlY3RzIHRoZSBicm93c2VyIHRvIHRoZSBVUkwgc2V0IGluIGAsbWR4KCJpbmxpbmVDb2RlIix7cGFyZW50TmFtZToibGkifSxgdXJscy52ZXJpZnlfdWlgKSxgIGFuZAphcHBlbmRzIHRoZSBgLG1keCgiaW5saW5lQ29kZSIse3BhcmVudE5hbWU6ImxpIn0sYHJlcXVlc3RgKSxgIFVSTCBRdWVyeSBQYXJhbWV0ZXIgKGUuZy4KYCxtZHgoImlubGluZUNvZGUiLHtwYXJlbnROYW1lOiJsaSJ9LGBodHRwczovL2V4YW1wbGUub3JnL3ZlcmlmeT9yZXF1ZXN0PWFiY2RlYCksYCkuYCksbWR4KCJsaSIse3BhcmVudE5hbWU6Im9sIn0sYFRoZSBFbmRwb2ludCBhdCBgLG1keCgiaW5saW5lQ29kZSIse3BhcmVudE5hbWU6ImxpIn0sYC9wcm9maWxlYCksYCBtYWtlcyBhIEhUVFAgR0VUIFJlcXVlc3QgdG8KYCxtZHgoImlubGluZUNvZGUiLHtwYXJlbnROYW1lOiJsaSJ9LGBodHRwczovL29yeS1rcmF0b3MtYWRtaW4uZXhhbXBsZS1vcmcudnBjL3NlbGYtc2VydmljZS9icm93c2VyL2Zsb3dzL3JlcXVlc3RzL3ZlcmlmaWNhdGlvbj9yZXF1ZXN0PWFiY2RlYCksYAphbmQgZmV0Y2hlcyBWZXJpZmljYXRpb24gUmVxdWVzdCBKU09OIFBheWxvYWQgdGhhdCByZXByZXNlbnQgdGhlIGluZGl2aWR1YWwKZmllbGRzIHRoYXQgY2FuIGJlIHVwZGF0ZWQuYCksbWR4KCJsaSIse3BhcmVudE5hbWU6Im9sIn0sYFRoZSB1c2VyIGZpbGxzIG91dCB0aGUgZm9ybSBhbmQgc2VuZHMgYSBIVFRQIFBPU1QgcmVxdWVzdCB0bwpgLG1keCgiaW5saW5lQ29kZSIse3BhcmVudE5hbWU6ImxpIn0sYGh0dHBzOi8vZXhhbXBsZS5vcmcvLm9yeS9rcmF0b3MvcHVibGljL3NlbGYtc2VydmljZS9icm93c2VyL2Zsb3dzL3ZlcmlmaWNhdGlvbi86dmlhL2NvbXBsZXRlP3JlcXVlc3Q9YWJjZGVgKSxgLgpEZXBlbmRpbmcgb24gd2hldGhlciB0aGUgYWRkcmVzcyBpcyBrbm93biBvciBub3QsIGEgYCxtZHgoImlubGluZUNvZGUiLHtwYXJlbnROYW1lOiJsaSJ9LGB2ZXJpZnlfdmFsaWRgKSxgIG9yCmAsbWR4KCJpbmxpbmVDb2RlIix7cGFyZW50TmFtZToibGkifSxgdmVyaWZ5X2ludmFsaWRgKSxgIG1lc3NhZ2Ugd2lsbCBiZSBzZW50IHRvIHRoZSBnaXZlbiBhZGRyZXNzLmApKSxtZHgoInAiLG51bGwsYEFuIGV4ZW1wbGFyeSBwYXlsb2FkIGZvciBhIHZlcmlmaWNhdGlvbiByZXF1ZXN0IGxvb2tzIGFzIGZvbGxvd3M6YCksbWR4KCJwcmUiLG51bGwsbWR4KCJjb2RlIixfZXh0ZW5kcyh7cGFyZW50TmFtZToicHJlIn0seyJjbGFzc05hbWUiOiJsYW5ndWFnZS1qc29uIn0pLGB7CiAgImlkIjogIjljM2U5NDVjLTA5NmEtNDJlYy04NjE3LWNhZWNkYTllOTI2MyIsCiAgImV4cGlyZXNfYXQiOiAiMjAyMC0wMi0xOFQxNjoxMToyNS4zMTEyMDM4WiIsCiAgImlzc3VlZF9hdCI6ICIyMDIwLTAyLTE4VDE1OjExOjI1LjMxMTI4MjRaIiwKICAicmVxdWVzdF91cmwiOiAiaHR0cDovLzEyNy4wLjAuMTo0NDU1L3NlbGYtc2VydmljZS9icm93c2VyL2Zsb3dzL3ZlcmlmaWNhdGlvbi9lbWFpbCIsCiAgImZvcm0iOiB7CiAgICAiYWN0aW9uIjogImh0dHA6Ly8xMjcuMC4wLjE6NDQ1NS8ub3J5L2tyYXRvcy9wdWJsaWMvc2VsZi1zZXJ2aWNlL2Jyb3dzZXIvZmxvd3MvdmVyaWZpY2F0aW9uL2VtYWlsL2NvbXBsZXRlP3JlcXVlc3Q9OWMzZTk0NWMtMDk2YS00MmVjLTg2MTctY2FlY2RhOWU5MjYzIiwKICAgICJtZXRob2QiOiAiUE9TVCIsCiAgICAiZmllbGRzIjogWwogICAgICB7CiAgICAgICAgIm5hbWUiOiAiY3NyZl90b2tlbiIsCiAgICAgICAgInR5cGUiOiAiaGlkZGVuIiwKICAgICAgICAicmVxdWlyZWQiOiB0cnVlLAogICAgICAgICJ2YWx1ZSI6ICJmTXVzSmo2NUJ4TnRyb2cvRFlyeU40c1ptdUxBODVXa2JBaDR5UDlwVDFsQVFUSUFQVFZHSlRtbUxMNjZZMEhFYklwS0VVNWdUcjVxSm9SWEhzQm9Tdz09IgogICAgICB9LAogICAgICB7CiAgICAgICAgIm5hbWUiOiAidG9fdmVyaWZ5IiwKICAgICAgICAidHlwZSI6ICJlbWFpbCIsCiAgICAgICAgInJlcXVpcmVkIjogdHJ1ZQogICAgICB9CiAgICBdCiAgfSwKICAidmlhIjogImVtYWlsIiwKICAic3VjY2VzcyI6IGZhbHNlCn0KYCkpLG1keCgiaDMiLHsiaWQiOiJjbGllbnQtc2lkZS1icm93c2VyLWFwcGxpY2F0aW9ucyJ9LGBDbGllbnQtU2lkZSBCcm93c2VyIEFwcGxpY2F0aW9uc2ApLG1keCgicCIsbnVsbCxgQmVjYXVzZSBDbGllbnQtU2lkZSBCcm93c2VyIEFwcGxpY2F0aW9ucyBkbyBub3QgaGF2ZSBhY2Nlc3MgdG8gT1JZIEtyYXRvcycgQWRtaW4KQVBJLCB0aGV5IG11c3QgdXNlIHRoZSBPUlkgS3JhdG9zIFB1YmxpYyBBUEkgaW5zdGVhZC4gVGhlIGZsb3cgZm9yIGEgQ2xpZW50LVNpZGUKQnJvd3NlciBBcHBsaWNhdGlvbiBpcyBhbG1vc3QgdGhlIGV4YWN0IHNhbWUgYXMgdGhlIG9uZSBmb3IgU2VydmVyLVNpZGUKQXBwbGljYXRpb25zLCB3aXRoIHRoZSBzbWFsbCBkaWZmZXJlbmNlIHRoYXQKYCxtZHgoImlubGluZUNvZGUiLHtwYXJlbnROYW1lOiJwIn0sYGh0dHBzOi8vZXhhbXBsZS5vcmcvLm9yeS9rcmF0b3MvcHVibGljL3NlbGYtc2VydmljZS9icm93c2VyL2Zsb3dzL3JlcXVlc3RzL3ZlcmlmaWNhdGlvbj9yZXF1ZXN0PWFiY2RlYCksYAp3b3VsZCBiZSBjYWxsZWQgdmlhIEFKQVggaW5zdGVhZCBvZiBtYWtpbmcgYSByZXF1ZXN0IHRvCmAsbWR4KCJpbmxpbmVDb2RlIix7cGFyZW50TmFtZToicCJ9LGBodHRwczovL29yeS1rcmF0b3MtYWRtaW4uZXhhbXBsZS1vcmcudnBjL3NlbGYtc2VydmljZS9icm93c2VyL2Zsb3dzL3JlcXVlc3RzL3ZlcmlmaWNhdGlvbj9yZXF1ZXN0PWFiY2RlYCksYC5gKSxtZHgoImJsb2NrcXVvdGUiLG51bGwsbWR4KCJwIix7cGFyZW50TmFtZToiYmxvY2txdW90ZSJ9LGBUbyBwcmV2ZW50IGJydXRlIGZvcmNlLCBndWVzc2luZywgc2Vzc2lvbiBpbmplY3Rpb24sIGFuZCBvdGhlciBhdHRhY2tzLCBpdCBpcwpyZXF1aXJlZCB0aGF0IGNvb2tpZXMgYXJlIHdvcmtpbmcgZm9yIHRoaXMgZW5kcG9pbnQuIFRoZSBjb29raWUgc2V0IGluIHRoZQppbml0aWFsIEhUVFAgcmVxdWVzdCBtYWRlIHRvCmAsbWR4KCJpbmxpbmVDb2RlIix7cGFyZW50TmFtZToicCJ9LGBodHRwczovL2V4YW1wbGUub3JnLy5vcnkva3JhdG9zL3B1YmxpYy9zZWxmLXNlcnZpY2UvYnJvd3Nlci9mbG93cy92ZXJpZmljYXRpb24vOnZpYWApLGAKTVVTVCBiZSBzZXQgYW5kIGF2YWlsYWJsZSB3aGVuIGNhbGxpbmcgdGhpcyBlbmRwb2ludCFgKSxtZHgoInAiLHtwYXJlbnROYW1lOiJibG9ja3F1b3RlIn0sYFdoZW4gbWFraW5nIEFKQVggcmVxdWVzdHMgZnJvbSBKYXZhU2NyaXB0LCBtYWtlIHN1cmUgdG8gc2V0CmAsbWR4KCJpbmxpbmVDb2RlIix7cGFyZW50TmFtZToicCJ9LGB7IHdpdGhDcmVkZW50aWFsczogdHJ1ZSB9YCksYCAobmFtZSBhbmQgbGF5b3V0IG1heSB2YXJ5IGJldHdlZW4gbGlicmFyaWVzKS5gKSksbWR4KCJoMiIseyJpZCI6ImVtYWlsLXZlcmlmaWNhdGlvbi1mb3ItYXBpLWNsaWVudHMifSxgRW1haWwgVmVyaWZpY2F0aW9uIGZvciBBUEkgQ2xpZW50c2ApLG1keCgicCIsbnVsbCxgV2lsbCBiZSBhZGRyZXNzZWQgaW4gYSBmdXR1cmUgcmVsZWFzZS5gKSk7fTtNRFhDb250ZW50LmlzTURYQ29tcG9uZW50PXRydWU7"},{"version":3,"sources":["/Users/foobar/go/src/github.com/ory/kratos/docs/versioned_docs/version-v0.1/self-service/flows/verify-email-account-activation.mdx"],"names":["React","mdx","frontMatter","id","title","metadata","useBaseUrl","rightToc","value","children","makeShortcode","name","MDXDefaultShortcode","props","console","warn","layoutProps","MDXLayout","MDXContent","components","isMDXComponent"],"mappings":"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","sourcesContent":["\n  import React from 'react';\n  import { mdx } from '@mdx-js/react';\n\n  export const frontMatter = {\n\tid: 'verify-email-account-activation',\n\ttitle: 'Email and Phone Verification and Account Activation'\n};\nexport const metadata = {\n  \"id\": \"version-v0.1/self-service/flows/verify-email-account-activation\",\n  \"title\": \"Email and Phone Verification and Account Activation\",\n  \"description\": \"import useBaseUrl from '@docusaurus/useBaseUrl';\",\n  \"source\": \"@site/versioned_docs/version-v0.1/self-service/flows/verify-email-account-activation.mdx\",\n  \"permalink\": \"/kratos/docs/v0.1/self-service/flows/verify-email-account-activation\",\n  \"editUrl\": \"https://github.com/ory/kratos/edit/master/docs/versioned_docs/version-v0.1/self-service/flows/verify-email-account-activation.mdx\",\n  \"version\": \"v0.1\",\n  \"lastUpdatedBy\": \"Author\",\n  \"lastUpdatedAt\": 1539502055,\n  \"sidebar\": \"version-v0.1/docs\",\n  \"previous\": {\n    \"title\": \"User-Facing Errors\",\n    \"permalink\": \"/kratos/docs/v0.1/self-service/flows/user-facing-errors\"\n  },\n  \"next\": {\n    \"title\": \"Overview\",\n    \"permalink\": \"/kratos/docs/v0.1/self-service/strategies/index\"\n  }\n};\n  /* @jsx mdx */\nimport useBaseUrl from '@docusaurus/useBaseUrl';\nexport const rightToc = [{\n  value: 'Account Activation',\n  id: 'account-activation',\n  children: []\n}, {\n  value: 'Setting Email Verification',\n  id: 'setting-email-verification',\n  children: [{\n    value: 'Verify Email on User Registration',\n    id: 'verify-email-on-user-registration',\n    children: []\n  }]\n}, {\n  value: 'Self-Service Request or Resend Verification Link for Browser Applications',\n  id: 'self-service-request-or-resend-verification-link-for-browser-applications',\n  children: [{\n    value: 'Server-Side Browser Applications',\n    id: 'server-side-browser-applications',\n    children: []\n  }, {\n    value: 'Client-Side Browser Applications',\n    id: 'client-side-browser-applications',\n    children: []\n  }]\n}, {\n  value: 'Email Verification for API Clients',\n  id: 'email-verification-for-api-clients',\n  children: []\n}];\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  rightToc\n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <p>{`ORY Kratos allows users to verify their out-of-band (email, telephone number,\n...) communication channels. Verification can be initiated`}</p>\n    <ul>\n      <li parentName=\"ul\">{`after registration or by performing a verification flow;`}</li>\n      <li parentName=\"ul\">{`manually by the user.`}</li>\n    </ul>\n    <p>{`Currently, ORY Kratos only supports verification of email addresses. Before\nsending out a verification E-Mail, ORY Kratos will check if the email address is\nalready known. Depending on the result, one of the two flows will be executed:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`Unknown email address: An email is sent to the address informing the recipient\nthat someone tried to verify this email address but that it is not known by\nthe system:  `}<img alt=\"Verification email for unknown address\" src={useBaseUrl('img/docs/email-verify-unknown.png')} />;</li>\n      <li parentName=\"ul\">{`Known email address: An email which includes a verification link is sent to\nthe address:`}<img alt=\"Verification email for known address\" src={useBaseUrl('img/docs/email-verify-known.png')} />;</li>\n    </ul>\n    <p>{`This prevents Account Enumeration Attacks at is is not possible for a threat\nagent to determine if an account exists or not based on the verification flow.`}</p>\n    <p>{`The emails are using templates that can be customised as explained in\n`}<a parentName=\"p\" {...{\n        \"href\": \"/kratos/docs/v0.1/concepts/email-sms#templates\"\n      }}>{`Customizing E-Mail Templates`}</a>{`. The\ntemplate IDs are:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`Unknown email address: `}<inlineCode parentName=\"li\">{`verify_invalid`}</inlineCode></li>\n      <li parentName=\"ul\">{`Known email address: `}<inlineCode parentName=\"li\">{`verify_valids`}</inlineCode></li>\n    </ul>\n    <h2 {...{\n      \"id\": \"account-activation\"\n    }}>{`Account Activation`}</h2>\n    <p>{`Using this feature implements the so-called \"account activation\" with the\ndifference that ORY Kratos does not provide a feature that prevents sign in into\naccounts without verified addresses. The reason being that verification is\nproving that the user controls the given address, but it is not an\nauthentication mechanism.`}</p>\n    <p>{`You may however chose to limit what an identity without verified addresses is\nable to do in your application logic or API Gateways.`}</p>\n    <h2 {...{\n      \"id\": \"setting-email-verification\"\n    }}>{`Setting Email Verification`}</h2>\n    <p>{`You must define at least one Identity Traits field as a verification field. You\ncan do so by defining the following section in your Identity Traits JSON Schema:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-json5\"\n      }}>{`{\n  // ...\n  properties: {\n    // This could also be an array or any other field name\n    email: {\n      type: 'string',\n      format: 'email',\n      'ory.sh/kratos': {\n        verification: {\n          // Currently, only email is supported\n          via: 'email',\n        },\n      },\n    },\n  },\n  // ...\n}\n`}</code></pre>\n    <p>{`You can also combine this with the password strategy login identifier.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-json5\"\n      }}>{`{\n  // ...\n  properties: {\n    // This could also be an array or any other field name\n    email: {\n      type: 'string',\n      format: 'email',\n      'ory.sh/kratos': {\n        credentials: {\n          password: {\n            identifier: true,\n          },\n        },\n        verification: {\n          // Currently, only email is supported\n          via: 'email',\n        },\n      },\n    },\n  },\n  // ...\n}\n`}</code></pre>\n    <p>{`That way, the field `}<inlineCode parentName=\"p\">{`email`}</inlineCode>{` (or any field you define with these properties) will\nserve as both the login identifier as well as a verifiable email address.`}</p>\n    <h3 {...{\n      \"id\": \"verify-email-on-user-registration\"\n    }}>{`Verify Email on User Registration`}</h3>\n    <p>{`To send an email after user registration, add the following sections to your ORY\nKratos config file:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-yaml\"\n      }}>{`# required\nurls:\n  # Similar to login_ui or profile_ui, this points to the user interface where the verificaiton\n  # user interface is implemented.\n  #\n  # For more information on this endpoint please head over to the next section\n  verify_ui: https://my-kratos-ui/verify\n\nselfservice:\n  registration:\n    after:\n      password:\n        # ....\n        - job: verify # This sends the verification email after successful registration\n        # ....\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"self-service-request-or-resend-verification-link-for-browser-applications\"\n    }}>{`Self-Service Request or Resend Verification Link for Browser Applications`}</h2>\n    <p>{`A user might want to resend a verification link because the link expired or did\nnot arrive in the inbox.`}</p>\n    <p>{`The flow implementing this feature uses the already established\n`}<a parentName=\"p\" {...{\n        \"href\": \"/kratos/docs/v0.1/self-service/flows/index#network-flows-for-browsers\"\n      }}>{`Network Flows for Browsers`}</a>{`.`}</p>\n    <h3 {...{\n      \"id\": \"server-side-browser-applications\"\n    }}>{`Server-Side Browser Applications`}</h3>\n    <p>{`You can find an exemplary implementation for this flow on GitHub:`}</p>\n    <ul>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"https://github.com/ory/kratos-selfservice-ui-node/blob/master/src/routes/verify.ts\"\n        }}>{`Verification HTTP Route`}</a></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"https://github.com/ory/kratos-selfservice-ui-node/blob/master/views/verify.hbs\"\n        }}>{`Verification UI`}</a></li>\n    </ul>\n    <p>{`The `}<a parentName=\"p\" {...{\n        \"href\": \"/kratos/docs/v0.1/self-service/flows/index#network-flows-for-browsers\"\n      }}>{`Network Flows for Browsers`}</a>{` works as\nfollows for Email Verification:`}</p>\n    <ol>\n      <li parentName=\"ol\">{`An initial HTTP Request is made to\n`}<inlineCode parentName=\"li\">{`/self-service/browser/flows/verification/:via`}</inlineCode>{`. Currently, only `}<inlineCode parentName=\"li\">{`email`}</inlineCode>{` is\nsupported as `}<inlineCode parentName=\"li\">{`:via`}</inlineCode>{`.`}</li>\n      <li parentName=\"ol\">{`ORY Kratos redirects the browser to the URL set in `}<inlineCode parentName=\"li\">{`urls.verify_ui`}</inlineCode>{` and\nappends the `}<inlineCode parentName=\"li\">{`request`}</inlineCode>{` URL Query Parameter (e.g.\n`}<inlineCode parentName=\"li\">{`https://example.org/verify?request=abcde`}</inlineCode>{`).`}</li>\n      <li parentName=\"ol\">{`The Endpoint at `}<inlineCode parentName=\"li\">{`/profile`}</inlineCode>{` makes a HTTP GET Request to\n`}<inlineCode parentName=\"li\">{`https://ory-kratos-admin.example-org.vpc/self-service/browser/flows/requests/verification?request=abcde`}</inlineCode>{`\nand fetches Verification Request JSON Payload that represent the individual\nfields that can be updated.`}</li>\n      <li parentName=\"ol\">{`The user fills out the form and sends a HTTP POST request to\n`}<inlineCode parentName=\"li\">{`https://example.org/.ory/kratos/public/self-service/browser/flows/verification/:via/complete?request=abcde`}</inlineCode>{`.\nDepending on whether the address is known or not, a `}<inlineCode parentName=\"li\">{`verify_valid`}</inlineCode>{` or\n`}<inlineCode parentName=\"li\">{`verify_invalid`}</inlineCode>{` message will be sent to the given address.`}</li>\n    </ol>\n    <p>{`An exemplary payload for a verification request looks as follows:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-json\"\n      }}>{`{\n  \"id\": \"9c3e945c-096a-42ec-8617-caecda9e9263\",\n  \"expires_at\": \"2020-02-18T16:11:25.3112038Z\",\n  \"issued_at\": \"2020-02-18T15:11:25.3112824Z\",\n  \"request_url\": \"http://127.0.0.1:4455/self-service/browser/flows/verification/email\",\n  \"form\": {\n    \"action\": \"http://127.0.0.1:4455/.ory/kratos/public/self-service/browser/flows/verification/email/complete?request=9c3e945c-096a-42ec-8617-caecda9e9263\",\n    \"method\": \"POST\",\n    \"fields\": [\n      {\n        \"name\": \"csrf_token\",\n        \"type\": \"hidden\",\n        \"required\": true,\n        \"value\": \"fMusJj65BxNtrog/DYryN4sZmuLA85WkbAh4yP9pT1lAQTIAPTVGJTmmLL66Y0HEbIpKEU5gTr5qJoRXHsBoSw==\"\n      },\n      {\n        \"name\": \"to_verify\",\n        \"type\": \"email\",\n        \"required\": true\n      }\n    ]\n  },\n  \"via\": \"email\",\n  \"success\": false\n}\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"client-side-browser-applications\"\n    }}>{`Client-Side Browser Applications`}</h3>\n    <p>{`Because Client-Side Browser Applications do not have access to ORY Kratos' Admin\nAPI, they must use the ORY Kratos Public API instead. The flow for a Client-Side\nBrowser Application is almost the exact same as the one for Server-Side\nApplications, with the small difference that\n`}<inlineCode parentName=\"p\">{`https://example.org/.ory/kratos/public/self-service/browser/flows/requests/verification?request=abcde`}</inlineCode>{`\nwould be called via AJAX instead of making a request to\n`}<inlineCode parentName=\"p\">{`https://ory-kratos-admin.example-org.vpc/self-service/browser/flows/requests/verification?request=abcde`}</inlineCode>{`.`}</p>\n    <blockquote>\n      <p parentName=\"blockquote\">{`To prevent brute force, guessing, session injection, and other attacks, it is\nrequired that cookies are working for this endpoint. The cookie set in the\ninitial HTTP request made to\n`}<inlineCode parentName=\"p\">{`https://example.org/.ory/kratos/public/self-service/browser/flows/verification/:via`}</inlineCode>{`\nMUST be set and available when calling this endpoint!`}</p>\n      <p parentName=\"blockquote\">{`When making AJAX requests from JavaScript, make sure to set\n`}<inlineCode parentName=\"p\">{`{ withCredentials: true }`}</inlineCode>{` (name and layout may vary between libraries).`}</p>\n    </blockquote>\n    <h2 {...{\n      \"id\": \"email-verification-for-api-clients\"\n    }}>{`Email Verification for API Clients`}</h2>\n    <p>{`Will be addressed in a future release.`}</p>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;\n  "]}]}
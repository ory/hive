{"remainingRequest":"/Users/foobar/go/src/github.com/ory/kratos/docs/node_modules/babel-loader/lib/index.js??ref--7-1!/Users/foobar/go/src/github.com/ory/kratos/docs/node_modules/@docusaurus/mdx-loader/src/index.js??ref--7-2!/Users/foobar/go/src/github.com/ory/kratos/docs/node_modules/@docusaurus/plugin-content-docs/lib/markdown/index.js??ref--7-3!/Users/foobar/go/src/github.com/ory/kratos/docs/docs/reference/configuration.md","dependencies":[{"path":"/Users/foobar/go/src/github.com/ory/kratos/docs/docs/reference/configuration.md","mtime":1589385453669},{"path":"/Users/foobar/go/src/github.com/ory/kratos/docs/.docusaurus/docusaurus-plugin-content-docs/site-docs-reference-configuration-md-306.json","mtime":1588244932442},{"path":"/Users/foobar/go/src/github.com/ory/kratos/docs/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/foobar/go/src/github.com/ory/kratos/docs/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/foobar/go/src/github.com/ory/kratos/docs/node_modules/@docusaurus/mdx-loader/src/index.js","mtime":499162500000},{"path":"/Users/foobar/go/src/github.com/ory/kratos/docs/node_modules/@docusaurus/plugin-content-docs/lib/markdown/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/Users/foobar/go/src/github.com/ory/kratos/docs/docs/reference/configuration.md"],"names":["React","mdx","frontMatter","id","title","metadata","rightToc","makeShortcode","name","MDXDefaultShortcode","props","console","warn","layoutProps","MDXLayout","MDXContent","components","isMDXComponent"],"mappings":"sHACE,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,GAAT,KAAoB,eAApB,CAEA,MAAO,MAAMC,CAAAA,WAAW,CAAG,CAC5BC,EAAE,CAAE,eADwB,CAE5BC,KAAK,CAAE,eAFqB,CAApB,CAIT,MAAO,MAAMC,CAAAA,QAAQ,CAAG,CACtB,KAAM,yBADgB,CAEtB,QAAS,eAFa,CAGtB,cAAe,8FAHO,CAItB,SAAU,uCAJY,CAKtB,YAAa,2CALS,CAMtB,UAAW,gFANW,CAOtB,UAAW,MAPW,CAQtB,gBAAiB,QARK,CAStB,gBAAiB,UATK,CAUtB,UAAW,MAVW,CAWtB,WAAY,CACV,QAAS,mBADC,CAEV,YAAa,+CAFH,CAXU,CAetB,OAAQ,CACN,QAAS,4BADH,CAEN,YAAa,oDAFP,CAfc,CAAjB,CAoBL,cAEF,MAAO,MAAMC,CAAAA,QAAQ,CAAG,EAAjB,CACP,KAAMC,CAAAA,aAAa,CAAGC,IAAI,EAAI,QAASC,CAAAA,mBAAT,CAA6BC,KAA7B,CAAoC,CAChEC,OAAO,CAACC,IAAR,CAAa,aAAeJ,IAAf,CAAsB,yEAAnC,EACA,MAAO,WAASE,KAAT,CAAP,CACD,CAHD,CAKA,KAAMG,CAAAA,WAAW,CAAG,CAClBP,QADkB,CAApB,CAGA,KAAMQ,CAAAA,SAAS,CAAG,SAAlB,CACA,cAAe,SAASC,CAAAA,UAAT,CAAoB,CACjCC,UADiC,CAEjC,GAAGN,KAF8B,CAApB,CAGZ,CACD,MAAO,KAAC,SAAD,aAAeG,WAAf,CAAgCH,KAAhC,EAAuC,UAAU,CAAEM,UAAnD,CAA+D,OAAO,CAAC,WAAvE,GAOL,aAAK,UAAL,CAAe,kBAAY,UAAU,CAAC,GAAvB,EAA6B,oBAA7B,CAAf,CAA+E;wDAA/E,CAPK,CASL,aAAK;CAAL,CACF,kBAAY,UAAU,CAAC,GAAvB,EAA6B,wBAA7B,CADE,CACkE,MADlE,CACwE,kBAAY,UAAU,CAAC,GAAvB,EAA6B,8BAA7B,CADxE,CACkJ;CADlJ,CAEF,kBAAY,UAAU,CAAC,GAAvB,EAA6B,qCAA7B,CAFE,CAE+E,GAF/E,CATK,CAYL,aAAK;;kDAAL,CAZK,CAeL,aAAK;;CAAL,CAEF,kBAAG,UAAU,CAAC,GAAd,EAAsB,CAChB,OAAQ,+CADQ,CAAtB,EAES,0BAFT,CAFE,CAIuC;SAJvC,CAfK,CAqBL,eAAK,qBAAM,UAAU,CAAC,KAAjB,EAA2B,CAC5B,YAAa,eADerBK,CAAP,CAsgCD,CAED,CACAD,UAAU,CAACE,cAAX,CAA4B,IAA5B","sourcesContent":["\n  import React from 'react';\n  import { mdx } from '@mdx-js/react';\n\n  export const frontMatter = {\n\tid: 'configuration',\n\ttitle: 'Configuration'\n};\nexport const metadata = {\n  \"id\": \"reference/configuration\",\n  \"title\": \"Configuration\",\n  \"description\": \"<!-- THIS FILE IS BEING AUTO-GENERATED. DO NOT MODIFY IT AS ALL CHANGES WILL BE OVERWRITTEN.\",\n  \"source\": \"@site/docs/reference/configuration.md\",\n  \"permalink\": \"/kratos/docs/next/reference/configuration\",\n  \"editUrl\": \"https://github.com/ory/kratos/edit/master/docs/docs/reference/configuration.md\",\n  \"version\": \"next\",\n  \"lastUpdatedBy\": \"Author\",\n  \"lastUpdatedAt\": 1539502055,\n  \"sidebar\": \"docs\",\n  \"previous\": {\n    \"title\": \"High Availability\",\n    \"permalink\": \"/kratos/docs/next/guides/high-availability-ha\"\n  },\n  \"next\": {\n    \"title\": \"JSON Schema and JSON Paths\",\n    \"permalink\": \"/kratos/docs/next/reference/json-schema-json-paths\"\n  }\n};\n  /* @jsx mdx */\n\nexport const rightToc = [];\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  rightToc\n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    {\n      /* THIS FILE IS BEING AUTO-GENERATED. DO NOT MODIFY IT AS ALL CHANGES WILL BE OVERWRITTEN.\n      OPEN AN ISSUE IF YOU WOULD LIKE TO MAKE ADJUSTMENTS HERE AND MAINTAINERS WILL HELP YOU LOCATE THE RIGHT\n      FILE */\n    }\n    <p>{`If file `}<inlineCode parentName=\"p\">{`$HOME/.kratos.yaml`}</inlineCode>{` exists, it will be used as a configuration file\nwhich supports all configuration settings listed below.`}</p>\n    <p>{`You can load the config file from another source using the\n`}<inlineCode parentName=\"p\">{`-c path/to/config.yaml`}</inlineCode>{` or `}<inlineCode parentName=\"p\">{`--config path/to/config.yaml`}</inlineCode>{` flag:\n`}<inlineCode parentName=\"p\">{`kratos --config path/to/config.yaml`}</inlineCode>{`.`}</p>\n    <p>{`Config files can be formatted as JSON, YAML and TOML. Some configuration values\nsupport reloading without server restart. All configuration values can be set\nusing environment variables, as documented below.`}</p>\n    <p>{`To find out more about edge cases like setting string array values through\nenvironmental variables head to the\n`}<a parentName=\"p\" {...{\n        \"href\": \"https://www.ory.sh/docs/ecosystem/configuring\"\n      }}>{`Configuring ORY services`}</a>{`\nsection.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-yaml\"\n      }}>{`## ORY Kratos Configuration\n#\n\n## Data Source Name ##\n#\n# DSN is used to specify the database credentials as a connection URI.\n#\n# Examples:\n# - \"postgres://user:\n#   password@postgresd:5432/database?sslmode=disable&max_conns=20&max_idle_conns=\\\\\n#   4\"\n# - mysql://user:secret@tcp(mysqld:3306)/database?max_conns=20&max_idle_conns=4\n# - cockroach://user@cockroachdb:26257/database?sslmode=disable&max_conns=20&max_idle_conns=4\n# - sqlite:///var/lib/sqlite/db.sqlite?_fk=true&mode=rwc\n#\n# Set this value using environment variables on\n# - Linux/macOS:\n#    $ export DSN=<value>\n# - Windows Command Line (CMD):\n#    > set DSN=<value>\n#\ndsn: mysql://user:secret@tcp(mysqld:3306)/database?max_conns=20&max_idle_conns=4\n\n## identity ##\n#\nidentity:\n  ## traits ##\n  #\n  traits:\n    ## JSON Schema URL for default identity traits ##\n    #\n    # Path to the JSON Schema which describes a default identity's traits.\n    #\n    # Examples:\n    # - file://path/to/identity.traits.schema.json\n    # - httpss://foo.bar.com/path/to/identity.traits.schema.json\n    #\n    # Set this value using environment variables on\n    # - Linux/macOS:\n    #    $ export IDENTITY_TRAITS_DEFAULT_SCHEMA_URL=<value>\n    # - Windows Command Line (CMD):\n    #    > set IDENTITY_TRAITS_DEFAULT_SCHEMA_URL=<value>\n    #\n    default_schema_url: file://path/to/identity.traits.schema.json\n\n    ## Additional JSON Schemas for Identity Traits ##\n    #\n    # Examples:\n    # - - id: customer\n    #     url: https://foo.bar.com/path/to/customer.traits.schema.json\n    #   - id: employee\n    #     url: https://foo.bar.com/path/to/employee.traits.schema.json\n    #   - id: employee-v2\n    #     url: https://foo.bar.com/path/to/employee.v2.traits.schema.json\n    #\n    # Set this value using environment variables on\n    # - Linux/macOS:\n    #    $ export IDENTITY_TRAITS_SCHEMAS=<value>\n    # - Windows Command Line (CMD):\n    #    > set IDENTITY_TRAITS_SCHEMAS=<value>\n    #\n    schemas:\n      - id: customer\n        url: https://foo.bar.com/path/to/customer.traits.schema.json\n      - id: employee\n        url: https://foo.bar.com/path/to/employee.traits.schema.json\n      - id: employee-v2\n        url: https://foo.bar.com/path/to/employee.v2.traits.schema.json\n\n## selfservice ##\n#\nselfservice:\n  ## strategies ##\n  #\n  strategies:\n    ## password ##\n    #\n    password:\n      ## enabled ##\n      #\n      # Set this value using environment variables on\n      # - Linux/macOS:\n      #    $ export SELFSERVICE_STRATEGIES_PASSWORD_ENABLED=<value>\n      # - Windows Command Line (CMD):\n      #    > set SELFSERVICE_STRATEGIES_PASSWORD_ENABLED=<value>\n      #\n      enabled: false\n\n    ## oidc ##\n    #\n    oidc:\n      ## enabled ##\n      #\n      # Set this value using environment variables on\n      # - Linux/macOS:\n      #    $ export SELFSERVICE_STRATEGIES_OIDC_ENABLED=<value>\n      # - Windows Command Line (CMD):\n      #    > set SELFSERVICE_STRATEGIES_OIDC_ENABLED=<value>\n      #\n      enabled: false\n\n      ## config ##\n      #\n      config:\n        ## OpenID Connect and OAuth2 Providers ##\n        #\n        # A list and configuration of OAuth2 and OpenID Connect providers ORY Kratos should integrate with.\n        #\n        # Set this value using environment variables on\n        # - Linux/macOS:\n        #    $ export SELFSERVICE_STRATEGIES_OIDC_CONFIG_PROVIDERS=<value>\n        # - Windows Command Line (CMD):\n        #    > set SELFSERVICE_STRATEGIES_OIDC_CONFIG_PROVIDERS=<value>\n        #\n        providers:\n          - id: google\n            provider: google\n            client_id: eu\n            client_secret: occaecat id sunt amet\n            mapper_url: https://foo.bar.com/path/to/oidc.jsonnet\n            issuer_url: https://accounts.google.com\n            auth_url: https://accounts.google.com/o/oauth2/v2/auth\n            token_url: https://www.googleapis.com/oauth2/v4/token\n            scope:\n              - profile\n              - offline_access\n          - id: google\n            provider: google\n            client_id: mollit deserunt\n            client_secret: eiusmod adipisicing dolor incididunt sed\n            mapper_url: file://path/to/oidc.jsonnet\n            issuer_url: https://accounts.google.com\n            auth_url: https://accounts.google.com/o/oauth2/v2/auth\n            token_url: https://www.googleapis.com/oauth2/v4/token\n            scope:\n              - offline_access\n              - profile\n          - id: google\n            provider: google\n            client_id: aute Ut id\n            client_secret: in eiusmod in enim\n            mapper_url: file://path/to/oidc.jsonnet\n            issuer_url: https://accounts.google.com\n            auth_url: https://accounts.google.com/o/oauth2/v2/auth\n            token_url: https://www.googleapis.com/oauth2/v4/token\n            scope:\n              - profile\n              - offline_access\n              - offline_access\n          - id: google\n            provider: google\n            client_id: aute enim nisi eiusmod laboris\n            client_secret: Duis officia\n            mapper_url: file://path/to/oidc.jsonnet\n            issuer_url: https://accounts.google.com\n            auth_url: https://accounts.google.com/o/oauth2/v2/auth\n            token_url: https://www.googleapis.com/oauth2/v4/token\n            scope:\n              - profile\n              - profile\n              - offline_access\n              - offline_access\n          - id: google\n            provider: google\n            client_id: velit nulla veniam\n            client_secret: nulla amet\n            mapper_url: base64://bG9jYWwgc3ViamVjdCA9I...\n            issuer_url: https://accounts.google.com\n            auth_url: https://accounts.google.com/o/oauth2/v2/auth\n            token_url: https://www.googleapis.com/oauth2/v4/token\n            scope:\n              - profile\n              - offline_access\n\n  ## logout ##\n  #\n  logout:\n    ## Redirect to URL after logout ##\n    #\n    # Examples:\n    # - https://www.myapp.com/home\n    #\n    # Set this value using environment variables on\n    # - Linux/macOS:\n    #    $ export SELFSERVICE_LOGOUT_REDIRECT_TO=<value>\n    # - Windows Command Line (CMD):\n    #    > set SELFSERVICE_LOGOUT_REDIRECT_TO=<value>\n    #\n    redirect_to: https://www.myapp.com/home\n\n  ## settings ##\n  #\n  settings:\n    ## request_lifespan ##\n    #\n    # Default value: 1h\n    #\n    # Examples:\n    # - 1h\n    # - 1m\n    # - 1s\n    #\n    # Set this value using environment variables on\n    # - Linux/macOS:\n    #    $ export SELFSERVICE_SETTINGS_REQUEST_LIFESPAN=<value>\n    # - Windows Command Line (CMD):\n    #    > set SELFSERVICE_SETTINGS_REQUEST_LIFESPAN=<value>\n    #\n    request_lifespan: 1m\n\n    ## privileged_session_max_age ##\n    #\n    # Default value: 1h\n    #\n    # Examples:\n    # - 1h\n    # - 1m\n    # - 1s\n    #\n    # Set this value using environment variables on\n    # - Linux/macOS:\n    #    $ export SELFSERVICE_SETTINGS_PRIVILEGED_SESSION_MAX_AGE=<value>\n    # - Windows Command Line (CMD):\n    #    > set SELFSERVICE_SETTINGS_PRIVILEGED_SESSION_MAX_AGE=<value>\n    #\n    privileged_session_max_age: 1m\n\n    ## after ##\n    #\n    after:\n      ## Default Return To URL ##\n      #\n      # ORY Kratos redirects to this URL per default on completion of self-service flows and other browser interaction. This value may be overridden by a \\`default_return_to\\` in a lower configuration level (\\`foo.bar.default_return_to\\` overrides \\`foo.default_return_to\\` overrides \\`default_return_to\\`) and by the \\`?return_to\\` query in certain cases.\n      #\n      # Examples:\n      # - https://my-app.com/dashboard\n      #\n      # Set this value using environment variables on\n      # - Linux/macOS:\n      #    $ export SELFSERVICE_SETTINGS_AFTER_DEFAULT_RETURN_TO=<value>\n      # - Windows Command Line (CMD):\n      #    > set SELFSERVICE_SETTINGS_AFTER_DEFAULT_RETURN_TO=<value>\n      #\n      default_return_to: https://my-app.com/dashboard\n\n      ## password ##\n      #\n      password:\n        ## Default Return To URL ##\n        #\n        # ORY Kratos redirects to this URL per default on completion of self-service flows and other browser interaction. This value may be overridden by a \\`default_return_to\\` in a lower configuration level (\\`foo.bar.default_return_to\\` overrides \\`foo.default_return_to\\` overrides \\`default_return_to\\`) and by the \\`?return_to\\` query in certain cases.\n        #\n        # Examples:\n        # - https://my-app.com/dashboard\n        #\n        # Set this value using environment variables on\n        # - Linux/macOS:\n        #    $ export SELFSERVICE_SETTINGS_AFTER_PASSWORD_DEFAULT_RETURN_TO=<value>\n        # - Windows Command Line (CMD):\n        #    > set SELFSERVICE_SETTINGS_AFTER_PASSWORD_DEFAULT_RETURN_TO=<value>\n        #\n        default_return_to: https://my-app.com/dashboard\n\n        ## hooks ##\n        #\n        # Set this value using environment variables on\n        # - Linux/macOS:\n        #    $ export SELFSERVICE_SETTINGS_AFTER_PASSWORD_HOOKS=<value>\n        # - Windows Command Line (CMD):\n        #    > set SELFSERVICE_SETTINGS_AFTER_PASSWORD_HOOKS=<value>\n        #\n        hooks:\n          - hook: verify\n\n      ## profile ##\n      #\n      profile:\n        ## Default Return To URL ##\n        #\n        # ORY Kratos redirects to this URL per default on completion of self-service flows and other browser interaction. This value may be overridden by a \\`default_return_to\\` in a lower configuration level (\\`foo.bar.default_return_to\\` overrides \\`foo.default_return_to\\` overrides \\`default_return_to\\`) and by the \\`?return_to\\` query in certain cases.\n        #\n        # Examples:\n        # - https://my-app.com/dashboard\n        #\n        # Set this value using environment variables on\n        # - Linux/macOS:\n        #    $ export SELFSERVICE_SETTINGS_AFTER_PROFILE_DEFAULT_RETURN_TO=<value>\n        # - Windows Command Line (CMD):\n        #    > set SELFSERVICE_SETTINGS_AFTER_PROFILE_DEFAULT_RETURN_TO=<value>\n        #\n        default_return_to: https://my-app.com/dashboard\n\n        ## hooks ##\n        #\n        # Set this value using environment variables on\n        # - Linux/macOS:\n        #    $ export SELFSERVICE_SETTINGS_AFTER_PROFILE_HOOKS=<value>\n        # - Windows Command Line (CMD):\n        #    > set SELFSERVICE_SETTINGS_AFTER_PROFILE_HOOKS=<value>\n        #\n        hooks:\n          - hook: verify\n\n  ## verify ##\n  #\n  verify:\n    ## Self-Service Verification Request Lifespan ##\n    #\n    # Sets how long the verification request (for the UI interaction) is valid.\n    #\n    # Default value: 1h\n    #\n    # Examples:\n    # - 1h\n    # - 1m\n    # - 1s\n    #\n    # Set this value using environment variables on\n    # - Linux/macOS:\n    #    $ export SELFSERVICE_VERIFY_REQUEST_LIFESPAN=<value>\n    # - Windows Command Line (CMD):\n    #    > set SELFSERVICE_VERIFY_REQUEST_LIFESPAN=<value>\n    #\n    request_lifespan: 1h\n\n    ## Self-Service Verification Link Lifespan ##\n    #\n    # Sets how long the verification link (e.g. the one sent via email) is valid for.\n    #\n    # Default value: 24h\n    #\n    # Examples:\n    # - 1h\n    # - 1m\n    # - 1s\n    #\n    # Set this value using environment variables on\n    # - Linux/macOS:\n    #    $ export SELFSERVICE_VERIFY_LINK_LIFESPAN=<value>\n    # - Windows Command Line (CMD):\n    #    > set SELFSERVICE_VERIFY_LINK_LIFESPAN=<value>\n    #\n    link_lifespan: 1h\n\n  ## login ##\n  #\n  login:\n    ## request_lifespan ##\n    #\n    # Default value: 1h\n    #\n    # Examples:\n    # - 1h\n    # - 1m\n    # - 1s\n    #\n    # Set this value using environment variables on\n    # - Linux/macOS:\n    #    $ export SELFSERVICE_LOGIN_REQUEST_LIFESPAN=<value>\n    # - Windows Command Line (CMD):\n    #    > set SELFSERVICE_LOGIN_REQUEST_LIFESPAN=<value>\n    #\n    request_lifespan: 1s\n\n    ## before ##\n    #\n    before:\n      ## hooks ##\n      #\n      # Set this value using environment variables on\n      # - Linux/macOS:\n      #    $ export SELFSERVICE_LOGIN_BEFORE_HOOKS=<value>\n      # - Windows Command Line (CMD):\n      #    > set SELFSERVICE_LOGIN_BEFORE_HOOKS=<value>\n      #\n      hooks:\n        - hook: redirect\n          config:\n            default_redirect_url: https://vNrGQOShybZtvpdWsLKLFHg.dwqzRKNoO2P9Mj.4a6Ih\n            allow_user_defined_redirect: false\n        - hook: redirect\n          config:\n            default_redirect_url: http://QeLSk.hwvad.ef1boy0pIqywpw+OWson9rtHv\n            allow_user_defined_redirect: true\n        - hook: redirect\n          config:\n            default_redirect_url: https://Rf.bfpnuIqeV\n            allow_user_defined_redirect: true\n        - hook: redirect\n          config:\n            default_redirect_url: http://kroFFCAAzYCtiLFRyxWV.xkY9LTCRQU6D-ljDQ\n            allow_user_defined_redirect: false\n        - hook: redirect\n          config:\n            default_redirect_url: http://AleaKRoeEveDcNA.bsvsmbez3gDCt7GrrzPEB3uFYLFW+Yoh0MUl4oO16HJQJH.eRmhQEWOJFYdzU\n            allow_user_defined_redirect: true\n\n    ## after ##\n    #\n    after:\n      ## Default Return To URL ##\n      #\n      # ORY Kratos redirects to this URL per default on completion of self-service flows and other browser interaction. This value may be overridden by a \\`default_return_to\\` in a lower configuration level (\\`foo.bar.default_return_to\\` overrides \\`foo.default_return_to\\` overrides \\`default_return_to\\`) and by the \\`?return_to\\` query in certain cases.\n      #\n      # Examples:\n      # - https://my-app.com/dashboard\n      #\n      # Set this value using environment variables on\n      # - Linux/macOS:\n      #    $ export SELFSERVICE_LOGIN_AFTER_DEFAULT_RETURN_TO=<value>\n      # - Windows Command Line (CMD):\n      #    > set SELFSERVICE_LOGIN_AFTER_DEFAULT_RETURN_TO=<value>\n      #\n      default_return_to: https://my-app.com/dashboard\n\n      ## password ##\n      #\n      password:\n        ## Default Return To URL ##\n        #\n        # ORY Kratos redirects to this URL per default on completion of self-service flows and other browser interaction. This value may be overridden by a \\`default_return_to\\` in a lower configuration level (\\`foo.bar.default_return_to\\` overrides \\`foo.default_return_to\\` overrides \\`default_return_to\\`) and by the \\`?return_to\\` query in certain cases.\n        #\n        # Examples:\n        # - https://my-app.com/dashboard\n        #\n        # Set this value using environment variables on\n        # - Linux/macOS:\n        #    $ export SELFSERVICE_LOGIN_AFTER_PASSWORD_DEFAULT_RETURN_TO=<value>\n        # - Windows Command Line (CMD):\n        #    > set SELFSERVICE_LOGIN_AFTER_PASSWORD_DEFAULT_RETURN_TO=<value>\n        #\n        default_return_to: https://my-app.com/dashboard\n\n        ## hooks ##\n        #\n        # Set this value using environment variables on\n        # - Linux/macOS:\n        #    $ export SELFSERVICE_LOGIN_AFTER_PASSWORD_HOOKS=<value>\n        # - Windows Command Line (CMD):\n        #    > set SELFSERVICE_LOGIN_AFTER_PASSWORD_HOOKS=<value>\n        #\n        hooks:\n          - hook: revoke_active_sessions\n\n      ## oidc ##\n      #\n      oidc:\n        ## Default Return To URL ##\n        #\n        # ORY Kratos redirects to this URL per default on completion of self-service flows and other browser interaction. This value may be overridden by a \\`default_return_to\\` in a lower configuration level (\\`foo.bar.default_return_to\\` overrides \\`foo.default_return_to\\` overrides \\`default_return_to\\`) and by the \\`?return_to\\` query in certain cases.\n        #\n        # Examples:\n        # - https://my-app.com/dashboard\n        #\n        # Set this value using environment variables on\n        # - Linux/macOS:\n        #    $ export SELFSERVICE_LOGIN_AFTER_OIDC_DEFAULT_RETURN_TO=<value>\n        # - Windows Command Line (CMD):\n        #    > set SELFSERVICE_LOGIN_AFTER_OIDC_DEFAULT_RETURN_TO=<value>\n        #\n        default_return_to: https://my-app.com/dashboard\n\n        ## hooks ##\n        #\n        # Set this value using environment variables on\n        # - Linux/macOS:\n        #    $ export SELFSERVICE_LOGIN_AFTER_OIDC_HOOKS=<value>\n        # - Windows Command Line (CMD):\n        #    > set SELFSERVICE_LOGIN_AFTER_OIDC_HOOKS=<value>\n        #\n        hooks:\n          - hook: revoke_active_sessions\n\n  ## registration ##\n  #\n  registration:\n    ## request_lifespan ##\n    #\n    # Default value: 1h\n    #\n    # Examples:\n    # - 1h\n    # - 1m\n    # - 1s\n    #\n    # Set this value using environment variables on\n    # - Linux/macOS:\n    #    $ export SELFSERVICE_REGISTRATION_REQUEST_LIFESPAN=<value>\n    # - Windows Command Line (CMD):\n    #    > set SELFSERVICE_REGISTRATION_REQUEST_LIFESPAN=<value>\n    #\n    request_lifespan: 1h\n\n    ## before ##\n    #\n    before:\n      ## hooks ##\n      #\n      # Set this value using environment variables on\n      # - Linux/macOS:\n      #    $ export SELFSERVICE_REGISTRATION_BEFORE_HOOKS=<value>\n      # - Windows Command Line (CMD):\n      #    > set SELFSERVICE_REGISTRATION_BEFORE_HOOKS=<value>\n      #\n      hooks:\n        - hook: redirect\n          config:\n            default_redirect_url: http://vWrJmhcnjewBJOiTcDVdv.ibcfIQDI8+NH5jbHm47vieykPCVbRzT03ykkXgbv+zOUWXMwHeVbxMuK\n            allow_user_defined_redirect: true\n        - hook: redirect\n          config:\n            default_redirect_url: https://HbZYxiZFuXwEIydUJUXWnDYEGTDw.xiwJyhiYxfTBX\n            allow_user_defined_redirect: true\n\n    ## after ##\n    #\n    after:\n      ## Default Return To URL ##\n      #\n      # ORY Kratos redirects to this URL per default on completion of self-service flows and other browser interaction. This value may be overridden by a \\`default_return_to\\` in a lower configuration level (\\`foo.bar.default_return_to\\` overrides \\`foo.default_return_to\\` overrides \\`default_return_to\\`) and by the \\`?return_to\\` query in certain cases.\n      #\n      # Examples:\n      # - https://my-app.com/dashboard\n      #\n      # Set this value using environment variables on\n      # - Linux/macOS:\n      #    $ export SELFSERVICE_REGISTRATION_AFTER_DEFAULT_RETURN_TO=<value>\n      # - Windows Command Line (CMD):\n      #    > set SELFSERVICE_REGISTRATION_AFTER_DEFAULT_RETURN_TO=<value>\n      #\n      default_return_to: https://my-app.com/dashboard\n\n      ## password ##\n      #\n      password:\n        ## Default Return To URL ##\n        #\n        # ORY Kratos redirects to this URL per default on completion of self-service flows and other browser interaction. This value may be overridden by a \\`default_return_to\\` in a lower configuration level (\\`foo.bar.default_return_to\\` overrides \\`foo.default_return_to\\` overrides \\`default_return_to\\`) and by the \\`?return_to\\` query in certain cases.\n        #\n        # Examples:\n        # - https://my-app.com/dashboard\n        #\n        # Set this value using environment variables on\n        # - Linux/macOS:\n        #    $ export SELFSERVICE_REGISTRATION_AFTER_PASSWORD_DEFAULT_RETURN_TO=<value>\n        # - Windows Command Line (CMD):\n        #    > set SELFSERVICE_REGISTRATION_AFTER_PASSWORD_DEFAULT_RETURN_TO=<value>\n        #\n        default_return_to: https://my-app.com/dashboard\n\n        ## hooks ##\n        #\n        # Set this value using environment variables on\n        # - Linux/macOS:\n        #    $ export SELFSERVICE_REGISTRATION_AFTER_PASSWORD_HOOKS=<value>\n        # - Windows Command Line (CMD):\n        #    > set SELFSERVICE_REGISTRATION_AFTER_PASSWORD_HOOKS=<value>\n        #\n        hooks:\n          - hook: redirect\n            config:\n              default_redirect_url: https://JBdIwgXYnmPafakyYVGMP.qkku4rb58yJVgtBxR5iX2dneE-.PqTcBPezn,BP7,3IOXQmj50PPRGCkxkj4oZMUMK2zPJLu\n              allow_user_defined_redirect: false\n\n      ## oidc ##\n      #\n      oidc:\n        ## Default Return To URL ##\n        #\n        # ORY Kratos redirects to this URL per default on completion of self-service flows and other browser interaction. This value may be overridden by a \\`default_return_to\\` in a lower configuration level (\\`foo.bar.default_return_to\\` overrides \\`foo.default_return_to\\` overrides \\`default_return_to\\`) and by the \\`?return_to\\` query in certain cases.\n        #\n        # Examples:\n        # - https://my-app.com/dashboard\n        #\n        # Set this value using environment variables on\n        # - Linux/macOS:\n        #    $ export SELFSERVICE_REGISTRATION_AFTER_OIDC_DEFAULT_RETURN_TO=<value>\n        # - Windows Command Line (CMD):\n        #    > set SELFSERVICE_REGISTRATION_AFTER_OIDC_DEFAULT_RETURN_TO=<value>\n        #\n        default_return_to: https://my-app.com/dashboard\n\n        ## hooks ##\n        #\n        # Set this value using environment variables on\n        # - Linux/macOS:\n        #    $ export SELFSERVICE_REGISTRATION_AFTER_OIDC_HOOKS=<value>\n        # - Windows Command Line (CMD):\n        #    > set SELFSERVICE_REGISTRATION_AFTER_OIDC_HOOKS=<value>\n        #\n        hooks:\n          - hook: redirect\n            config:\n              default_redirect_url: https://dVmrmZBlsrCRcaJglSkTNkcUnMKMkesRX.jpsphJbVjax1\n              allow_user_defined_redirect: false\n          - hook: verify\n          - hook: redirect\n            config:\n              default_redirect_url: http://DXaGZcA.sshR-KePsoNNqL2g9S4i6rm6faIHWlF.pympAe5i6AX1ix8gQt\n              allow_user_defined_redirect: true\n          - hook: redirect\n            config:\n              default_redirect_url: https://Kmhkg.caeqm6jhaZ5EofC7Ohaq2neAgm,Hc5tE7Oy5lbBKgZLa.wY\n              allow_user_defined_redirect: true\n          - hook: session\n\n## Courier configuration ##\n#\n# The courier is responsible for sending and delivering messages over email, sms, and other means.\n#\ncourier:\n  ## SMTP Configuration ##\n  #\n  # Configures outgoing emails using the SMTP protocol.\n  #\n  smtp:\n    ## SMTP connection string ##\n    #\n    # This URI will be used to connect to the SMTP server. Use the query parameter to allow (\\`?skip_ssl_verify=true\\`) or disallow (\\`?skip_ssl_verify=false\\`) self-signed TLS certificates. Please keep in mind that any host other than localhost / 127.0.0.1 must use smtp over TLS (smtps) or the connection will not be possible.\n    #\n    # Examples:\n    # - smtps://foo:bar@my-mailserver:1234/?skip_ssl_verify=false\n    #\n    # Set this value using environment variables on\n    # - Linux/macOS:\n    #    $ export COURIER_SMTP_CONNECTION_URI=<value>\n    # - Windows Command Line (CMD):\n    #    > set COURIER_SMTP_CONNECTION_URI=<value>\n    #\n    connection_uri: smtps://foo:bar@my-mailserver:1234/?skip_ssl_verify=false\n\n    ## SMTP Sender Address ##\n    #\n    # The recipient of an email will see this as the sender address.\n    #\n    # Default value: no-reply@ory.kratos.sh\n    #\n    # Set this value using environment variables on\n    # - Linux/macOS:\n    #    $ export COURIER_SMTP_FROM_ADDRESS=<value>\n    # - Windows Command Line (CMD):\n    #    > set COURIER_SMTP_FROM_ADDRESS=<value>\n    #\n    from_address: pDGKVqqVSV-p2w@FBLoezyegcObiN.uu\n\n  ## Override message templates ##\n  #\n  # You can override certain or all message templates by pointing this key to the path where the templates are located.\n  #\n  # Examples:\n  # - /conf/courier-templates\n  #\n  # Set this value using environment variables on\n  # - Linux/macOS:\n  #    $ export COURIER_TEMPLATE_OVERRIDE_PATH=<value>\n  # - Windows Command Line (CMD):\n  #    > set COURIER_TEMPLATE_OVERRIDE_PATH=<value>\n  #\n  template_override_path: /conf/courier-templates\n\n## serve ##\n#\nserve:\n  ## admin ##\n  #\n  admin:\n    ## host ##\n    #\n    # Default value: 0.0.0.0\n    #\n    # Set this value using environment variables on\n    # - Linux/macOS:\n    #    $ export SERVE_ADMIN_HOST=<value>\n    # - Windows Command Line (CMD):\n    #    > set SERVE_ADMIN_HOST=<value>\n    #\n    host: enim eiusmod nostrud dolor officia\n\n    ## port ##\n    #\n    # Default value: 4434\n    #\n    # Examples:\n    # - 4434\n    #\n    # Set this value using environment variables on\n    # - Linux/macOS:\n    #    $ export SERVE_ADMIN_PORT=<value>\n    # - Windows Command Line (CMD):\n    #    > set SERVE_ADMIN_PORT=<value>\n    #\n    port: 4434\n\n  ## public ##\n  #\n  public:\n    ## host ##\n    #\n    # Default value: 0.0.0.0\n    #\n    # Set this value using environment variables on\n    # - Linux/macOS:\n    #    $ export SERVE_PUBLIC_HOST=<value>\n    # - Windows Command Line (CMD):\n    #    > set SERVE_PUBLIC_HOST=<value>\n    #\n    host: et do consequat qui\n\n    ## port ##\n    #\n    # Default value: 4433\n    #\n    # Examples:\n    # - 4433\n    #\n    # Set this value using environment variables on\n    # - Linux/macOS:\n    #    $ export SERVE_PUBLIC_PORT=<value>\n    # - Windows Command Line (CMD):\n    #    > set SERVE_PUBLIC_PORT=<value>\n    #\n    port: 4433\n\n## urls ##\n#\nurls:\n  ## self ##\n  #\n  self:\n    ## public ##\n    #\n    # Examples:\n    # - https://my-app.com/.ory/kratos/public\n    #\n    # Set this value using environment variables on\n    # - Linux/macOS:\n    #    $ export URLS_SELF_PUBLIC=<value>\n    # - Windows Command Line (CMD):\n    #    > set URLS_SELF_PUBLIC=<value>\n    #\n    public: https://my-app.com/.ory/kratos/public\n\n    ## admin ##\n    #\n    # Examples:\n    # - https://kratos.private-network:4434/\n    #\n    # Set this value using environment variables on\n    # - Linux/macOS:\n    #    $ export URLS_SELF_ADMIN=<value>\n    # - Windows Command Line (CMD):\n    #    > set URLS_SELF_ADMIN=<value>\n    #\n    admin: https://kratos.private-network:4434/\n\n  ## Multi-Factor UI URL ##\n  #\n  # URL where the Multi-Factor UI is hosted. Check the [reference implementation](https://github.com/ory/kratos-selfservice-ui-node).\n  #\n  # Default value: https://www.ory.sh/kratos/docs/fallback/mfa\n  #\n  # Examples:\n  # - https://my-app.com/login/mfa\n  #\n  # Set this value using environment variables on\n  # - Linux/macOS:\n  #    $ export URLS_MFA_UI=<value>\n  # - Windows Command Line (CMD):\n  #    > set URLS_MFA_UI=<value>\n  #\n  mfa_ui: https://www.ory.sh/kratos/docs/fallback/mfa\n\n  ## Login UI URL ##\n  #\n  # URL where the Login UI is hosted. Check the [reference implementation](https://github.com/ory/kratos-selfservice-ui-node).\n  #\n  # Default value: https://www.ory.sh/kratos/docs/fallback/login\n  #\n  # Examples:\n  # - https://my-app.com/login\n  #\n  # Set this value using environment variables on\n  # - Linux/macOS:\n  #    $ export URLS_LOGIN_UI=<value>\n  # - Windows Command Line (CMD):\n  #    > set URLS_LOGIN_UI=<value>\n  #\n  login_ui: https://www.ory.sh/kratos/docs/fallback/login\n\n  ## Settings UI URL ##\n  #\n  # URL where the Settings UI is hosted. Check the [reference implementation](https://github.com/ory/kratos-selfservice-ui-node).\n  #\n  # Default value: https://www.ory.sh/kratos/docs/fallback/settings\n  #\n  # Examples:\n  # - https://my-app.com/user/settings\n  #\n  # Set this value using environment variables on\n  # - Linux/macOS:\n  #    $ export URLS_SETTINGS_UI=<value>\n  # - Windows Command Line (CMD):\n  #    > set URLS_SETTINGS_UI=<value>\n  #\n  settings_ui: https://www.ory.sh/kratos/docs/fallback/settings\n\n  ## Default Return To URL ##\n  #\n  # ORY Kratos redirects to this URL per default on completion of self-service flows and other browser interaction. This value may be overridden by a \\`default_return_to\\` in a lower configuration level (\\`foo.bar.default_return_to\\` overrides \\`foo.default_return_to\\` overrides \\`default_return_to\\`) and by the \\`?return_to\\` query in certain cases.\n  #\n  # Examples:\n  # - https://my-app.com/dashboard\n  #\n  # Set this value using environment variables on\n  # - Linux/macOS:\n  #    $ export URLS_DEFAULT_RETURN_TO=<value>\n  # - Windows Command Line (CMD):\n  #    > set URLS_DEFAULT_RETURN_TO=<value>\n  #\n  default_return_to: https://my-app.com/dashboard\n\n  ## Registration UI URL ##\n  #\n  # URL where the Registration UI is hosted. Check the [reference implementation](https://github.com/ory/kratos-selfservice-ui-node).\n  #\n  # Default value: https://www.ory.sh/kratos/docs/fallback/registration\n  #\n  # Examples:\n  # - https://my-app.com/signup\n  #\n  # Set this value using environment variables on\n  # - Linux/macOS:\n  #    $ export URLS_REGISTRATION_UI=<value>\n  # - Windows Command Line (CMD):\n  #    > set URLS_REGISTRATION_UI=<value>\n  #\n  registration_ui: https://my-app.com/signup\n\n  ## ORY Kratos Error UI URL ##\n  #\n  # URL where the ORY Kratos Error UI is hosted. Check the [reference implementation](https://github.com/ory/kratos-selfservice-ui-node).\n  #\n  # Default value: https://www.ory.sh/kratos/docs/fallback/error\n  #\n  # Examples:\n  # - https://my-app.com/kratos-error\n  #\n  # Set this value using environment variables on\n  # - Linux/macOS:\n  #    $ export URLS_ERROR_UI=<value>\n  # - Windows Command Line (CMD):\n  #    > set URLS_ERROR_UI=<value>\n  #\n  error_ui: https://my-app.com/kratos-error\n\n  ## Verify UI URL ##\n  #\n  # URL where the ORY Verify UI is hosted. This is the page where users activate and / or verify their email or telephone number. Check the [reference implementation](https://github.com/ory/kratos-selfservice-ui-node).\n  #\n  # Default value: https://www.ory.sh/kratos/docs/fallback/verify\n  #\n  # Examples:\n  # - https://my-app.com/verify\n  #\n  # Set this value using environment variables on\n  # - Linux/macOS:\n  #    $ export URLS_VERIFY_UI=<value>\n  # - Windows Command Line (CMD):\n  #    > set URLS_VERIFY_UI=<value>\n  #\n  verify_ui: https://my-app.com/verify\n\n  ## Whitelisted Return To URLs ##\n  #\n  # List of URLs that are allowed to be redirected to. A redirection request is made by appending \\`?return_to=...\\` to Login, Registration, and other self-service flows.\n  #\n  # Examples:\n  # - https://app.my-app.com/dashboard\n  # - https://www.my-app.com/\n  #\n  # Set this value using environment variables on\n  # - Linux/macOS:\n  #    $ export URLS_WHITELISTED_RETURN_TO_URLS=<value>\n  # - Windows Command Line (CMD):\n  #    > set URLS_WHITELISTED_RETURN_TO_URLS=<value>\n  #\n  whitelisted_return_to_urls: https://www.my-app.com/\n\n## log ##\n#\nlog:\n  ## level ##\n  #\n  # Set this value using environment variables on\n  # - Linux/macOS:\n  #    $ export LOG_LEVEL=<value>\n  # - Windows Command Line (CMD):\n  #    > set LOG_LEVEL=<value>\n  #\n  level: error\n\n  ## format ##\n  #\n  # Set this value using environment variables on\n  # - Linux/macOS:\n  #    $ export LOG_FORMAT=<value>\n  # - Windows Command Line (CMD):\n  #    > set LOG_FORMAT=<value>\n  #\n  format: json\n\n## secrets ##\n#\nsecrets:\n  ## session ##\n  #\n  # Set this value using environment variables on\n  # - Linux/macOS:\n  #    $ export SECRETS_SESSION=<value>\n  # - Windows Command Line (CMD):\n  #    > set SECRETS_SESSION=<value>\n  #\n  session:\n    - non ex Duisadsit anim sunt\n    - Excepteur mollit Duis pariatur consequat\n    - et consecteturcommodo voluptate in\n    - voluptate ea sunt elit in\n    - commodonisi eiusmod ut Excepteur\n\n## hashers ##\n#\nhashers:\n  ## argon2 ##\n  #\n  argon2:\n    ## memory ##\n    #\n    # Set this value using environment variables on\n    # - Linux/macOS:\n    #    $ export HASHERS_ARGON2_MEMORY=<value>\n    # - Windows Command Line (CMD):\n    #    > set HASHERS_ARGON2_MEMORY=<value>\n    #\n    memory: 57778550\n\n    ## iterations ##\n    #\n    # Set this value using environment variables on\n    # - Linux/macOS:\n    #    $ export HASHERS_ARGON2_ITERATIONS=<value>\n    # - Windows Command Line (CMD):\n    #    > set HASHERS_ARGON2_ITERATIONS=<value>\n    #\n    iterations: 35873485\n\n    ## parallelism ##\n    #\n    # Set this value using environment variables on\n    # - Linux/macOS:\n    #    $ export HASHERS_ARGON2_PARALLELISM=<value>\n    # - Windows Command Line (CMD):\n    #    > set HASHERS_ARGON2_PARALLELISM=<value>\n    #\n    parallelism: 22416448\n\n    ## salt_length ##\n    #\n    # Set this value using environment variables on\n    # - Linux/macOS:\n    #    $ export HASHERS_ARGON2_SALT_LENGTH=<value>\n    # - Windows Command Line (CMD):\n    #    > set HASHERS_ARGON2_SALT_LENGTH=<value>\n    #\n    salt_length: 20363085\n\n    ## key_length ##\n    #\n    # Set this value using environment variables on\n    # - Linux/macOS:\n    #    $ export HASHERS_ARGON2_KEY_LENGTH=<value>\n    # - Windows Command Line (CMD):\n    #    > set HASHERS_ARGON2_KEY_LENGTH=<value>\n    #\n    key_length: 52558806\n\n## security ##\n#\nsecurity:\n  ## session ##\n  #\n  session:\n    ## cookie ##\n    #\n    cookie:\n      ## same_site ##\n      #\n      # Default value: Lax\n      #\n      # Set this value using environment variables on\n      # - Linux/macOS:\n      #    $ export SECURITY_SESSION_COOKIE_SAME_SITE=<value>\n      # - Windows Command Line (CMD):\n      #    > set SECURITY_SESSION_COOKIE_SAME_SITE=<value>\n      #\n      same_site: Lax\n`}</code></pre>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;\n  "]}]}
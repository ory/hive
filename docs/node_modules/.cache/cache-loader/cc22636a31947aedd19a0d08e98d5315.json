{"remainingRequest":"/Users/foobar/go/src/github.com/ory/kratos/docs/node_modules/babel-loader/lib/index.js??ref--7-1!/Users/foobar/go/src/github.com/ory/kratos/docs/node_modules/@docusaurus/mdx-loader/src/index.js??ref--7-2!/Users/foobar/go/src/github.com/ory/kratos/docs/node_modules/@docusaurus/plugin-content-docs/lib/markdown/index.js??ref--7-3!/Users/foobar/go/src/github.com/ory/kratos/docs/docs/guides/sign-in-with-github-google-facebook-linkedin.mdx","dependencies":[{"path":"/Users/foobar/go/src/github.com/ory/kratos/docs/docs/guides/sign-in-with-github-google-facebook-linkedin.mdx","mtime":1589542148779},{"path":"/Users/foobar/go/src/github.com/ory/kratos/docs/.docusaurus/docusaurus-plugin-content-docs/site-docs-guides-sign-in-with-github-google-facebook-linkedin-mdx-199.json","mtime":1589528280647},{"path":"/Users/foobar/go/src/github.com/ory/kratos/docs/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/foobar/go/src/github.com/ory/kratos/docs/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/foobar/go/src/github.com/ory/kratos/docs/node_modules/@docusaurus/mdx-loader/src/index.js","mtime":499162500000},{"path":"/Users/foobar/go/src/github.com/ory/kratos/docs/node_modules/@docusaurus/plugin-content-docs/lib/markdown/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/Users/foobar/go/src/github.com/ory/kratos/docs/docs/guides/sign-in-with-github-google-facebook-linkedin.mdx"],"names":["React","mdx","frontMatter","id","title","metadata","rightToc","value","children","makeShortcode","name","MDXDefaultShortcode","props","console","warn","layoutProps","MDXLayout","MDXContent","components","isMDXComponent"],"mappings":"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","sourcesContent":["\n  import React from 'react';\n  import { mdx } from '@mdx-js/react';\n\n  export const frontMatter = {\n\tid: 'sign-in-with-github-google-facebook-linkedin',\n\ttitle: 'Sign in with GitHub, Google, Facebook, LinkedIn, ...'\n};\nexport const metadata = {\n  \"id\": \"guides/sign-in-with-github-google-facebook-linkedin\",\n  \"title\": \"Sign in with GitHub, Google, Facebook, LinkedIn, ...\",\n  \"description\": \"In this document we will take a look at setting up \\\"Sign in with GitHub\\\" using\",\n  \"source\": \"@site/docs/guides/sign-in-with-github-google-facebook-linkedin.mdx\",\n  \"permalink\": \"/kratos/docs/next/guides/sign-in-with-github-google-facebook-linkedin\",\n  \"editUrl\": \"https://github.com/ory/kratos/edit/master/docs/docs/guides/sign-in-with-github-google-facebook-linkedin.mdx\",\n  \"version\": \"next\",\n  \"lastUpdatedBy\": \"Author\",\n  \"lastUpdatedAt\": 1539502055,\n  \"sidebar\": \"docs\",\n  \"previous\": {\n    \"title\": \"Hooks\",\n    \"permalink\": \"/kratos/docs/next/self-service/hooks/index\"\n  },\n  \"next\": {\n    \"title\": \"Zero Trust with IAP Proxy\",\n    \"permalink\": \"/kratos/docs/next/guides/zero-trust-iap-proxy-identity-access-proxy\"\n  }\n};\n  /* @jsx mdx */\n\nexport const rightToc = [{\n  value: 'GitHub',\n  id: 'github',\n  children: []\n}, {\n  value: 'Google, LinkedIn, Facebook',\n  id: 'google-linkedin-facebook',\n  children: []\n}];\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  rightToc\n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <p>{`In this document we will take a look at setting up \"Sign in with GitHub\" using\nORY Kratos.`}</p>\n    <p>{`Run the `}<a parentName=\"p\" {...{\n        \"href\": \"/kratos/docs/next/quickstart\"\n      }}>{`Quickstart`}</a>{` with Docker Compose:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-shell\",\n        \"metastring\": \"script\",\n        \"script\": true\n      }}>{`# This assumes that you have ORY Kratos checked out locally and\n# that your current directory (\"pwd\") is the folder where ORY Kratos\n# is.\n\n$ make quickstart\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"github\"\n    }}>{`GitHub`}</h2>\n    <p>{`To set up \"Sign in with GitHub\" you must create a\n`}<a parentName=\"p\" {...{\n        \"href\": \"https://developer.github.com/apps/building-oauth-apps/creating-an-oauth-app/\"\n      }}>{`GitHub OAuth2 Client`}</a>{`.`}</p>\n    <p>{`Set the \"Authorization callback URL\" to:`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`http://127.0.0.1:4455/.ory/kratos/public/self-service/browser/flows/strategies/oidc/callback/github\n`}</code></pre>\n    <p>{`The pattern of this URL is:`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`http(s)://<domain-of-ory-kratos>:<public-port>/self-service/browser/flows/strategies/oidc/callback/<provider-id>\n`}</code></pre>\n    <p>{`The provider ID must point to the provider's ID set in the ORY Kratos\nconfiguration file (explained in paragraphs).`}</p>\n    <div {...{\n      \"className\": \"admonition admonition-note alert alert--secondary\"\n    }}><div parentName=\"div\" {...{\n        \"className\": \"admonition-heading\"\n      }}><h5 parentName=\"div\"><span parentName=\"h5\" {...{\n            \"className\": \"admonition-icon\"\n          }}><svg parentName=\"span\" {...{\n              \"xmlns\": \"http://www.w3.org/2000/svg\",\n              \"width\": \"14\",\n              \"height\": \"16\",\n              \"viewBox\": \"0 0 14 16\"\n            }}><path parentName=\"svg\" {...{\n                \"fillRule\": \"evenodd\",\n                \"d\": \"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z\"\n              }}></path></svg></span>{`note`}</h5></div><div parentName=\"div\" {...{\n        \"className\": \"admonition-content\"\n      }}><p parentName=\"div\">{`GitHub does not implement OpenID Connect. Therefore, ORY Kratos makes a request\nto\n`}<a parentName=\"p\" {...{\n            \"href\": \"https://developer.github.com/v3/users/#get-the-authenticated-user\"\n          }}>{`GitHub's User API`}</a>{`\nand adds that data to `}<inlineCode parentName=\"p\">{`std.extVar('claims')`}</inlineCode>{`. Check out what data is available\nat\n`}<a parentName=\"p\" {...{\n            \"href\": \"https://developer.github.com/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/\"\n          }}>{`GitHub's Scope Docs`}</a>{`.\nNot all GitHub fields are supported however. Check the list of supported fields\n`}<a parentName=\"p\" {...{\n            \"href\": \"https://github.com/ory/kratos/blob/v0.2.1-alpha.1/selfservice/strategy/oidc/provider_github.go#L72-L98\"\n          }}>{`in the source code`}</a>{`.`}</p></div></div>\n    <p>{`As explained in\n`}<a parentName=\"p\" {...{\n        \"href\": \"/kratos/docs/next/concepts/credentials/openid-connect-oidc-oauth2\"\n      }}>{`OpenID Connect and OAuth2 Credentails`}</a>{`,\nyou must also create a Jsonnet code snippet for the provider. Save the code in\n`}<inlineCode parentName=\"p\">{`<kratos-directory>/contrib/quickstart/kratos/email-password/oidc.github.jsonnet`}</inlineCode>{`.\nThe following schema takes `}<inlineCode parentName=\"p\">{`email_primary`}</inlineCode>{` and maps it to `}<inlineCode parentName=\"p\">{`traits.email`}</inlineCode>{`:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-json\",\n        \"metastring\": \"title=\\\"contrib/quickstart/kratos/email-password/oidc.github.jsonnet\\\"\",\n        \"title\": \"\\\"contrib/quickstart/kratos/email-password/oidc.github.jsonnet\\\"\"\n      }}>{`local claims = {\n  email_verified: false\n} + std.extVar('claims');\n\n{\n  identity: {\n    traits: {\n      // Allowing unverified email addresses enables account\n      // enumeration attacks, especially if the value is used for\n      // e.g. verification or as a password login identifier.\n      //\n      // Therefore we only return the email if it (a) exists and (b) is marked verified\n      // by GitHub.\n      [if \"email_primary\" in claims && claims.email_verified then \"email\" else null]: claims.email_primary,\n    },\n  },\n}\n`}</code></pre>\n    <p>{`Now, enable the GitHub provider in the ORY Kratos config located at\n`}<inlineCode parentName=\"p\">{`<kratos-directory>/contrib/quickstart/kratos/email-password/.kratos.yml`}</inlineCode>{`.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-yaml\",\n        \"metastring\": \"title=\\\"contrib/quickstart/kratos/email-password/.kratos.yml\\\"\",\n        \"title\": \"\\\"contrib/quickstart/kratos/email-password/.kratos.yml\\\"\"\n      }}>{`# $ kratos -c path/to/my/kratos/config.yml serve\nselfservice:\n  strategies:\n    oidc:\n      enabled: true\n      config:\n        providers:\n          - id: github # this is \\`<provider-id>\\` in the Authorization callback URL. DO NOT CHANGE IT ONCE SET!\n            provider: github\n            client_id: .... # Replace this with the OAuth2 Client ID provided by GitHub\n            client_secret: .... # Replace this with the OAuth2 Client Secret provided by GitHub\n            mapper_url: file:///etc/config/kratos/oidc.github.jsonnet\n            scope:\n              - user:email\n`}</code></pre>\n    <p>{`Next, open the login endpoint of the SecureApp and you should see the GitHub\nLogin option!`}</p>\n    <h2 {...{\n      \"id\": \"google-linkedin-facebook\"\n    }}>{`Google, LinkedIn, Facebook`}</h2>\n    <p>{`Connecting with other Social Sign In providers will be very similar to the\nGitHub flow. If you've managed to do it, write it down and make a PR against\nthis document! :)`}</p>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;\n  "]}]}
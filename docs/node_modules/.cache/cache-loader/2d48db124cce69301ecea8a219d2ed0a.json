{"remainingRequest":"/Users/foobar/go/src/github.com/ory/kratos/docs/node_modules/babel-loader/lib/index.js??ref--7-1!/Users/foobar/go/src/github.com/ory/kratos/docs/node_modules/@docusaurus/mdx-loader/src/index.js??ref--7-2!/Users/foobar/go/src/github.com/ory/kratos/docs/node_modules/@docusaurus/plugin-content-docs/lib/markdown/index.js??ref--7-3!/Users/foobar/go/src/github.com/ory/kratos/docs/versioned_docs/version-v0.1/sdk/api.md","dependencies":[{"path":"/Users/foobar/go/src/github.com/ory/kratos/docs/versioned_docs/version-v0.1/sdk/api.md","mtime":1586512083241},{"path":"/Users/foobar/go/src/github.com/ory/kratos/docs/.docusaurus/docusaurus-plugin-content-docs/site-versioned-docs-version-v-0-1-sdk-api-md-a39.json","mtime":1586597735472},{"path":"/Users/foobar/go/src/github.com/ory/kratos/docs/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/foobar/go/src/github.com/ory/kratos/docs/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/foobar/go/src/github.com/ory/kratos/docs/node_modules/@docusaurus/mdx-loader/src/index.js","mtime":499162500000},{"path":"/Users/foobar/go/src/github.com/ory/kratos/docs/node_modules/@docusaurus/plugin-content-docs/lib/markdown/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:import _extends from"/Users/foobar/go/src/github.com/ory/kratos/docs/node_modules/@babel/runtime/helpers/esm/extends";import React from'react';import{mdx}from'@mdx-js/react';export const frontMatter={title:'REST API',id:'api'};export const metadata={"id":"version-v0.1/sdk/api","title":"REST API","description":"Welcome to the ORY Kratos HTTP API documentation!","source":"@site/versioned_docs/version-v0.1/sdk/api.md","permalink":"/kratos/docs/sdk/api","editUrl":"https://github.com/ory/kratos/edit/master/docs/versioned_docs/version-v0.1/sdk/api.md","version":"v0.1","lastUpdatedBy":"hackerman","lastUpdatedAt":1586177162};/* @jsx mdx */export const rightToc=[{value:'health',id:'health',children:[{value:'Check alive status',id:'check-alive-status',children:[]},{value:'Check readiness status',id:'check-readiness-status',children:[]}]},{value:'Administrative Endpoints',id:'administrative-endpoints',children:[{value:'List all identities in the system',id:'list-all-identities-in-the-system',children:[]},{value:'Create an identity',id:'create-an-identity',children:[]},{value:'Get an identity',id:'get-an-identity',children:[]},{value:'Update an identity',id:'update-an-identity',children:[]},{value:'Delete an identity',id:'delete-an-identity',children:[]}]},{value:'Public Endpoints',id:'public-endpoints',children:[{value:'Initialize browser-based login user flow',id:'initialize-browser-based-login-user-flow',children:[]},{value:'Initialize Browser-Based Logout User Flow',id:'initialize-browser-based-logout-user-flow',children:[]},{value:'Initialize browser-based profile management flow',id:'initialize-browser-based-profile-management-flow',children:[]},{value:'Complete the browser-based profile management flows',id:'complete-the-browser-based-profile-management-flows',children:[]},{value:'Initialize browser-based registration user flow',id:'initialize-browser-based-registration-user-flow',children:[]},{value:'Initialize browser-based verification flow',id:'initialize-browser-based-verification-flow',children:[]},{value:'Complete the browser-based verification flows',id:'complete-the-browser-based-verification-flows',children:[]},{value:'Check who the current HTTP session belongs to',id:'check-who-the-current-http-session-belongs-to',children:[]}]},{value:'common',id:'common',children:[{value:'Get the request context of browser-based login user flows',id:'get-the-request-context-of-browser-based-login-user-flows',children:[]},{value:'Get the request context of browser-based profile management flows',id:'get-the-request-context-of-browser-based-profile-management-flows',children:[]},{value:'Get the request context of browser-based registration user flows',id:'get-the-request-context-of-browser-based-registration-user-flows',children:[]},{value:'Get the request context of browser-based verification flows',id:'get-the-request-context-of-browser-based-verification-flows',children:[]},{value:'Get user-facing self-service errors',id:'get-user-facing-self-service-errors',children:[]}]},{value:'version',id:'version',children:[{value:'Get service version',id:'get-service-version',children:[]}]},{value:'Schemas',id:'schemas',children:[]}];const makeShortcode=name=>function MDXDefaultShortcode(props){console.warn("Component "+name+" was not imported, exported, or provided by MDXProvider as global scope");return mdx("div",props);};const layoutProps={rightToc};const MDXLayout="wrapper";export default function MDXContent({components,...props}){return mdx(MDXLayout,_extends({},layoutProps,props,{components:components,mdxType:"MDXLayout"}),mdx("p",null,`Welcome to the ORY Kratos HTTP API documentation!`),mdx("blockquote",null,mdx("p",{parentName:"blockquote"},`You are viewing REST API documentation. This documentation is auto-generated
from a swagger specification which itself is generated from annotations in the
source code of the project. It is possible that this documentation includes
bugs and that code samples are incomplete or wrong.`),mdx("p",{parentName:"blockquote"},`If you find issues in the respective documentation, please do not edit the
Markdown files directly (as they are generated) but raise an issue on the
project's GitHub presence instead. This documentation will improve over time
with your help! If you have ideas how to improve this part of the
documentation, feel free to share them in a
`,mdx("a",_extends({parentName:"p"},{"href":"https://github.com/ory/docs/issues/new"}),`GitHub issue`),` any time.`)),mdx("a",{id:"ory-kratos-health"}),mdx("h2",{"id":"health"},`health`),mdx("a",{id:"opIdisInstanceAlive"}),mdx("h3",{"id":"check-alive-status"},`Check alive status`),mdx("pre",null,mdx("code",_extends({parentName:"pre"},{}),`GET /health/alive HTTP/1.1
Accept: application/json

`)),mdx("p",null,`This endpoint returns a 200 status code when the HTTP server is up running. This
status does currently not include checks whether the database connection is
working.`),mdx("p",null,`If the service supports TLS Edge Termination, this endpoint does not require the
`,mdx("inlineCode",{parentName:"p"},`X-Forwarded-Proto`),` header to be set.`),mdx("p",null,`Be aware that if you are running multiple nodes of this service, the health
status will never refer to the cluster state, only to a single instance.`),mdx("h4",{"id":"responses"},`Responses`),mdx("a",{id:"check-alive-status-responses"}),mdx("h5",{"id":"overview"},`Overview`),mdx("table",null,mdx("thead",{parentName:"table"},mdx("tr",{parentName:"thead"},mdx("th",_extends({parentName:"tr"},{"align":null}),`Status`),mdx("th",_extends({parentName:"tr"},{"align":null}),`Meaning`),mdx("th",_extends({parentName:"tr"},{"align":null}),`Description`),mdx("th",_extends({parentName:"tr"},{"align":null}),`Schema`))),mdx("tbody",{parentName:"table"},mdx("tr",{parentName:"tbody"},mdx("td",_extends({parentName:"tr"},{"align":null}),`200`),mdx("td",_extends({parentName:"tr"},{"align":null}),mdx("a",_extends({parentName:"td"},{"href":"https://tools.ietf.org/html/rfc7231#section-6.3.1"}),`OK`)),mdx("td",_extends({parentName:"tr"},{"align":null}),`healthStatus`),mdx("td",_extends({parentName:"tr"},{"align":null}),mdx("a",_extends({parentName:"td"},{"href":"#schemahealthstatus"}),`healthStatus`))),mdx("tr",{parentName:"tbody"},mdx("td",_extends({parentName:"tr"},{"align":null}),`500`),mdx("td",_extends({parentName:"tr"},{"align":null}),mdx("a",_extends({parentName:"td"},{"href":"https://tools.ietf.org/html/rfc7231#section-6.6.1"}),`Internal Server Error`)),mdx("td",_extends({parentName:"tr"},{"align":null}),`genericError`),mdx("td",_extends({parentName:"tr"},{"align":null}),mdx("a",_extends({parentName:"td"},{"href":"#schemagenericerror"}),`genericError`))))),mdx("h5",{"id":"examples"},`Examples`),mdx("h6",{"id":"200-response"},`200 response`),mdx("pre",null,mdx("code",_extends({parentName:"pre"},{"className":"language-json"}),`{
  "status": "string"
}
`)),mdx("aside",{class:"success"},"This operation does not require authentication"),mdx("h4",{"id":"code-samples"},`Code samples`),mdx("div",{class:"tabs",id:"tab-isInstanceAlive"},mdx("nav",{class:"tabs-nav"},mdx("ul",{class:"nav nav-tabs au-link-list au-link-list--inline"},mdx("li",{class:"nav-item"},mdx("a",{class:"nav-link active",role:"tab",href:"#tab-isInstanceAlive-shell"},"Shell")),mdx("li",{class:"nav-item"},mdx("a",{class:"nav-link",role:"tab",href:"#tab-isInstanceAlive-go"},"Go")),mdx("li",{class:"nav-item"},mdx("a",{class:"nav-link",role:"tab",href:"#tab-isInstanceAlive-node"},"Node.js")),mdx("li",{class:"nav-item"},mdx("a",{class:"nav-link",role:"tab",href:"#tab-isInstanceAlive-java"},"Java")),mdx("li",{class:"nav-item"},mdx("a",{class:"nav-link",role:"tab",href:"#tab-isInstanceAlive-python"},"Python")),mdx("li",{class:"nav-item"},mdx("a",{class:"nav-link",role:"tab",href:"#tab-isInstanceAlive-ruby"},"Ruby")))),mdx("div",{class:"tab-content"},mdx("div",{class:"tab-pane active",role:"tabpanel",id:"tab-isInstanceAlive-shell"},mdx("pre",null,mdx("code",_extends({parentName:"pre"},{"className":"language-shell"}),`curl -X GET /health/alive \\
  -H 'Accept: application/json'
`))),mdx("div",{class:"tab-pane",role:"tabpanel",id:"tab-isInstanceAlive-go"},mdx("pre",null,mdx("code",_extends({parentName:"pre"},{"className":"language-go"}),`package main

import (
    "bytes"
    "net/http"
)

func main() {
    headers := map[string][]string{
        "Accept": []string{"application/json"},
    }

    var body []byte
    // body = ...

    req, err := http.NewRequest("GET", "/health/alive", bytes.NewBuffer(body))
    req.Header = headers

    client := &http.Client{}
    resp, err := client.Do(req)
    // ...
}
`))),mdx("div",{class:"tab-pane",role:"tabpanel",id:"tab-isInstanceAlive-node"},mdx("pre",null,mdx("code",_extends({parentName:"pre"},{"className":"language-nodejs"}),`const fetch = require('node-fetch');

const headers = {
  'Accept': 'application/json'
}

fetch('/health/alive', {
  method: 'GET',
  headers
})
.then(r => r.json())
.then((body) => {
    console.log(body)
})
`))),mdx("div",{class:"tab-pane",role:"tabpanel",id:"tab-isInstanceAlive-java"},mdx("pre",null,mdx("code",_extends({parentName:"pre"},{"className":"language-java"}),`// This sample needs improvement.
URL obj = new URL("/health/alive");

HttpURLConnection con = (HttpURLConnection) obj.openConnection();
con.setRequestMethod("GET");

int responseCode = con.getResponseCode();

BufferedReader in = new BufferedReader(
    new InputStreamReader(con.getInputStream())
);

String inputLine;
StringBuffer response = new StringBuffer();
while ((inputLine = in.readLine()) != null) {
    response.append(inputLine);
}
in.close();

System.out.println(response.toString());
`))),mdx("div",{class:"tab-pane",role:"tabpanel",id:"tab-isInstanceAlive-python"},mdx("pre",null,mdx("code",_extends({parentName:"pre"},{"className":"language-python"}),`import requests

headers = {
  'Accept': 'application/json'
}

r = requests.get(
  '/health/alive',
  params={},
  headers = headers)

print r.json()
`))),mdx("div",{class:"tab-pane",role:"tabpanel",id:"tab-isInstanceAlive-ruby"},mdx("pre",null,mdx("code",_extends({parentName:"pre"},{"className":"language-ruby"}),`require 'rest-client'
require 'json'

headers = {
  'Accept' => 'application/json'
}

result = RestClient.get '/health/alive',
  params: {}, headers: headers

p JSON.parse(result)
`))))),mdx("a",{id:"opIdisInstanceReady"}),mdx("h3",{"id":"check-readiness-status"},`Check readiness status`),mdx("pre",null,mdx("code",_extends({parentName:"pre"},{}),`GET /health/ready HTTP/1.1
Accept: application/json

`)),mdx("p",null,`This endpoint returns a 200 status code when the HTTP server is up running and
the environment dependencies (e.g. the database) are responsive as well.`),mdx("p",null,`If the service supports TLS Edge Termination, this endpoint does not require the
`,mdx("inlineCode",{parentName:"p"},`X-Forwarded-Proto`),` header to be set.`),mdx("p",null,`Be aware that if you are running multiple nodes of this service, the health
status will never refer to the cluster state, only to a single instance.`),mdx("h4",{"id":"responses-1"},`Responses`),mdx("a",{id:"check-readiness-status-responses"}),mdx("h5",{"id":"overview-1"},`Overview`),mdx("table",null,mdx("thead",{parentName:"table"},mdx("tr",{parentName:"thead"},mdx("th",_extends({parentName:"tr"},{"align":null}),`Status`),mdx("th",_extends({parentName:"tr"},{"align":null}),`Meaning`),mdx("th",_extends({parentName:"tr"},{"align":null}),`Description`),mdx("th",_extends({parentName:"tr"},{"align":null}),`Schema`))),mdx("tbody",{parentName:"table"},mdx("tr",{parentName:"tbody"},mdx("td",_extends({parentName:"tr"},{"align":null}),`200`),mdx("td",_extends({parentName:"tr"},{"align":null}),mdx("a",_extends({parentName:"td"},{"href":"https://tools.ietf.org/html/rfc7231#section-6.3.1"}),`OK`)),mdx("td",_extends({parentName:"tr"},{"align":null}),`healthStatus`),mdx("td",_extends({parentName:"tr"},{"align":null}),mdx("a",_extends({parentName:"td"},{"href":"#schemahealthstatus"}),`healthStatus`))),mdx("tr",{parentName:"tbody"},mdx("td",_extends({parentName:"tr"},{"align":null}),`503`),mdx("td",_extends({parentName:"tr"},{"align":null}),mdx("a",_extends({parentName:"td"},{"href":"https://tools.ietf.org/html/rfc7231#section-6.6.4"}),`Service Unavailable`)),mdx("td",_extends({parentName:"tr"},{"align":null}),`healthNotReadyStatus`),mdx("td",_extends({parentName:"tr"},{"align":null}),mdx("a",_extends({parentName:"td"},{"href":"#schemahealthnotreadystatus"}),`healthNotReadyStatus`))))),mdx("h5",{"id":"examples-1"},`Examples`),mdx("h6",{"id":"200-response-1"},`200 response`),mdx("pre",null,mdx("code",_extends({parentName:"pre"},{"className":"language-json"}),`{
  "status": "string"
}
`)),mdx("aside",{class:"success"},"This operation does not require authentication"),mdx("h4",{"id":"code-samples-1"},`Code samples`),mdx("div",{class:"tabs",id:"tab-isInstanceReady"},mdx("nav",{class:"tabs-nav"},mdx("ul",{class:"nav nav-tabs au-link-list au-link-list--inline"},mdx("li",{class:"nav-item"},mdx("a",{class:"nav-link active",role:"tab",href:"#tab-isInstanceReady-shell"},"Shell")),mdx("li",{class:"nav-item"},mdx("a",{class:"nav-link",role:"tab",href:"#tab-isInstanceReady-go"},"Go")),mdx("li",{class:"nav-item"},mdx("a",{class:"nav-link",role:"tab",href:"#tab-isInstanceReady-node"},"Node.js")),mdx("li",{class:"nav-item"},mdx("a",{class:"nav-link",role:"tab",href:"#tab-isInstanceReady-java"},"Java")),mdx("li",{class:"nav-item"},mdx("a",{class:"nav-link",role:"tab",href:"#tab-isInstanceReady-python"},"Python")),mdx("li",{class:"nav-item"},mdx("a",{class:"nav-link",role:"tab",href:"#tab-isInstanceReady-ruby"},"Ruby")))),mdx("div",{class:"tab-content"},mdx("div",{class:"tab-pane active",role:"tabpanel",id:"tab-isInstanceReady-shell"},mdx("pre",null,mdx("code",_extends({parentName:"pre"},{"className":"language-shell"}),`curl -X GET /health/ready \\
  -H 'Accept: application/json'
`))),mdx("div",{class:"tab-pane",role:"tabpanel",id:"tab-isInstanceReady-go"},mdx("pre",null,mdx("code",_extends({parentName:"pre"},{"className":"language-go"}),`package main

import (
    "bytes"
    "net/http"
)

func main() {
    headers := map[string][]string{
        "Accept": []string{"application/json"},
    }

    var body []byte
    // body = ...

    req, err := http.NewRequest("GET", "/health/ready", bytes.NewBuffer(body))
    req.Header = headers

    client := &http.Client{}
    resp, err := client.Do(req)
    // ...
}
`))),mdx("div",{class:"tab-pane",role:"tabpanel",id:"tab-isInstanceReady-node"},mdx("pre",null,mdx("code",_extends({parentName:"pre"},{"className":"language-nodejs"}),`const fetch = require('node-fetch');

const headers = {
  'Accept': 'application/json'
}

fetch('/health/ready', {
  method: 'GET',
  headers
})
.then(r => r.json())
.then((body) => {
    console.log(body)
})
`))),mdx("div",{class:"tab-pane",role:"tabpanel",id:"tab-isInstanceReady-java"},mdx("pre",null,mdx("code",_extends({parentName:"pre"},{"className":"language-java"}),`// This sample needs improvement.
URL obj = new URL("/health/ready");

HttpURLConnection con = (HttpURLConnection) obj.openConnection();
con.setRequestMethod("GET");

int responseCode = con.getResponseCode();

BufferedReader in = new BufferedReader(
    new InputStreamReader(con.getInputStream())
);

String inputLine;
StringBuffer response = new StringBuffer();
while ((inputLine = in.readLine()) != null) {
    response.append(inputLine);
}
in.close();

System.out.println(response.toString());
`))),mdx("div",{class:"tab-pane",role:"tabpanel",id:"tab-isInstanceReady-python"},mdx("pre",null,mdx("code",_extends({parentName:"pre"},{"className":"language-python"}),`import requests

headers = {
  'Accept': 'application/json'
}

r = requests.get(
  '/health/ready',
  params={},
  headers = headers)

print r.json()
`))),mdx("div",{class:"tab-pane",role:"tabpanel",id:"tab-isInstanceReady-ruby"},mdx("pre",null,mdx("code",_extends({parentName:"pre"},{"className":"language-ruby"}),`require 'rest-client'
require 'json'

headers = {
  'Accept' => 'application/json'
}

result = RestClient.get '/health/ready',
  params: {}, headers: headers

p JSON.parse(result)
`))))),mdx("a",{id:"ory-kratos-administrative-endpoints"}),mdx("h2",{"id":"administrative-endpoints"},`Administrative Endpoints`),mdx("a",{id:"opIdlistIdentities"}),mdx("h3",{"id":"list-all-identities-in-the-system"},`List all identities in the system`),mdx("pre",null,mdx("code",_extends({parentName:"pre"},{}),`GET /identities HTTP/1.1
Accept: application/json

`)),mdx("p",null,`This endpoint returns a login request's context with, for example, error details
and other information.`),mdx("p",null,`Learn how identities work in
`,mdx("a",_extends({parentName:"p"},{"href":"https://www.ory.sh/docs/next/kratos/concepts/identity-user-model"}),`ORY Kratos' User And Identity Model Documentation`),`.`),mdx("h4",{"id":"responses-2"},`Responses`),mdx("a",{id:"list-all-identities-in-the-system-responses"}),mdx("h5",{"id":"overview-2"},`Overview`),mdx("table",null,mdx("thead",{parentName:"table"},mdx("tr",{parentName:"thead"},mdx("th",_extends({parentName:"tr"},{"align":null}),`Status`),mdx("th",_extends({parentName:"tr"},{"align":null}),`Meaning`),mdx("th",_extends({parentName:"tr"},{"align":null}),`Description`),mdx("th",_extends({parentName:"tr"},{"align":null}),`Schema`))),mdx("tbody",{parentName:"table"},mdx("tr",{parentName:"tbody"},mdx("td",_extends({parentName:"tr"},{"align":null}),`200`),mdx("td",_extends({parentName:"tr"},{"align":null}),mdx("a",_extends({parentName:"td"},{"href":"https://tools.ietf.org/html/rfc7231#section-6.3.1"}),`OK`)),mdx("td",_extends({parentName:"tr"},{"align":null}),`A list of identities.`),mdx("td",_extends({parentName:"tr"},{"align":null}))))),mdx("p",null,`nolint:deadcode,unused|Inline|
|500|`,mdx("a",_extends({parentName:"p"},{"href":"https://tools.ietf.org/html/rfc7231#section-6.6.1"}),`Internal Server Error`),`|genericError|`,mdx("a",_extends({parentName:"p"},{"href":"#schemagenericerror"}),`genericError`),`|`),mdx("a",{id:"list-all-identities-in-the-system-responseschema"}),mdx("h5",{"id":"response-schema"},`Response Schema`),mdx("p",null,`Status Code `,mdx("strong",{parentName:"p"},`200`)),mdx("table",null,mdx("thead",{parentName:"table"},mdx("tr",{parentName:"thead"},mdx("th",_extends({parentName:"tr"},{"align":null}),`Name`),mdx("th",_extends({parentName:"tr"},{"align":null}),`Type`),mdx("th",_extends({parentName:"tr"},{"align":null}),`Required`),mdx("th",_extends({parentName:"tr"},{"align":null}),`Restrictions`),mdx("th",_extends({parentName:"tr"},{"align":null}),`Description`))),mdx("tbody",{parentName:"table"},mdx("tr",{parentName:"tbody"},mdx("td",_extends({parentName:"tr"},{"align":null}),mdx("em",{parentName:"td"},`anonymous`)),mdx("td",_extends({parentName:"tr"},{"align":null}),`[`,mdx("a",_extends({parentName:"td"},{"href":"#schemaidentity"}),`Identity`),`]`),mdx("td",_extends({parentName:"tr"},{"align":null}),`false`),mdx("td",_extends({parentName:"tr"},{"align":null}),`none`),mdx("td",_extends({parentName:"tr"},{"align":null}),`none`)),mdx("tr",{parentName:"tbody"},mdx("td",_extends({parentName:"tr"},{"align":null}),`» addresses`),mdx("td",_extends({parentName:"tr"},{"align":null}),`[`,mdx("a",_extends({parentName:"td"},{"href":"#schemaverifiableaddress"}),`VerifiableAddress`),`]`),mdx("td",_extends({parentName:"tr"},{"align":null}),`false`),mdx("td",_extends({parentName:"tr"},{"align":null}),`none`),mdx("td",_extends({parentName:"tr"},{"align":null}),`none`)),mdx("tr",{parentName:"tbody"},mdx("td",_extends({parentName:"tr"},{"align":null}),`»» expires_at`),mdx("td",_extends({parentName:"tr"},{"align":null}),`string(date-time)`),mdx("td",_extends({parentName:"tr"},{"align":null}),`true`),mdx("td",_extends({parentName:"tr"},{"align":null}),`none`),mdx("td",_extends({parentName:"tr"},{"align":null}),`none`)),mdx("tr",{parentName:"tbody"},mdx("td",_extends({parentName:"tr"},{"align":null}),`»» id`),mdx("td",_extends({parentName:"tr"},{"align":null}),mdx("a",_extends({parentName:"td"},{"href":"#schemauuid"}),`UUID`),`(uuid4)`),mdx("td",_extends({parentName:"tr"},{"align":null}),`true`),mdx("td",_extends({parentName:"tr"},{"align":null}),`none`),mdx("td",_extends({parentName:"tr"},{"align":null}),`none`)),mdx("tr",{parentName:"tbody"},mdx("td",_extends({parentName:"tr"},{"align":null}),`»» value`),mdx("td",_extends({parentName:"tr"},{"align":null}),`string`),mdx("td",_extends({parentName:"tr"},{"align":null}),`true`),mdx("td",_extends({parentName:"tr"},{"align":null}),`none`),mdx("td",_extends({parentName:"tr"},{"align":null}),`none`)),mdx("tr",{parentName:"tbody"},mdx("td",_extends({parentName:"tr"},{"align":null}),`»» verified`),mdx("td",_extends({parentName:"tr"},{"align":null}),`boolean`),mdx("td",_extends({parentName:"tr"},{"align":null}),`true`),mdx("td",_extends({parentName:"tr"},{"align":null}),`none`),mdx("td",_extends({parentName:"tr"},{"align":null}),`none`)),mdx("tr",{parentName:"tbody"},mdx("td",_extends({parentName:"tr"},{"align":null}),`»» verified_at`),mdx("td",_extends({parentName:"tr"},{"align":null}),`string(date-time)`),mdx("td",_extends({parentName:"tr"},{"align":null}),`true`),mdx("td",_extends({parentName:"tr"},{"align":null}),`none`),mdx("td",_extends({parentName:"tr"},{"align":null}),`none`)),mdx("tr",{parentName:"tbody"},mdx("td",_extends({parentName:"tr"},{"align":null}),`»» via`),mdx("td",_extends({parentName:"tr"},{"align":null}),mdx("a",_extends({parentName:"td"},{"href":"#schemaverifiableaddresstype"}),`VerifiableAddressType`)),mdx("td",_extends({parentName:"tr"},{"align":null}),`true`),mdx("td",_extends({parentName:"tr"},{"align":null}),`none`),mdx("td",_extends({parentName:"tr"},{"align":null}),`none`)),mdx("tr",{parentName:"tbody"},mdx("td",_extends({parentName:"tr"},{"align":null}),`» id`),mdx("td",_extends({parentName:"tr"},{"align":null}),mdx("a",_extends({parentName:"td"},{"href":"#schemauuid"}),`UUID`),`(uuid4)`),mdx("td",_extends({parentName:"tr"},{"align":null}),`true`),mdx("td",_extends({parentName:"tr"},{"align":null}),`none`),mdx("td",_extends({parentName:"tr"},{"align":null}),`none`)),mdx("tr",{parentName:"tbody"},mdx("td",_extends({parentName:"tr"},{"align":null}),`» traits`),mdx("td",_extends({parentName:"tr"},{"align":null}),mdx("a",_extends({parentName:"td"},{"href":"#schematraits"}),`Traits`)),mdx("td",_extends({parentName:"tr"},{"align":null}),`true`),mdx("td",_extends({parentName:"tr"},{"align":null}),`none`),mdx("td",_extends({parentName:"tr"},{"align":null}),`none`)),mdx("tr",{parentName:"tbody"},mdx("td",_extends({parentName:"tr"},{"align":null}),`» traits_schema_id`),mdx("td",_extends({parentName:"tr"},{"align":null}),`string`),mdx("td",_extends({parentName:"tr"},{"align":null}),`true`),mdx("td",_extends({parentName:"tr"},{"align":null}),`none`),mdx("td",_extends({parentName:"tr"},{"align":null}),`TraitsSchemaID is the ID of the JSON Schema to be used for validating the identity's traits.`)),mdx("tr",{parentName:"tbody"},mdx("td",_extends({parentName:"tr"},{"align":null}),`» traits_schema_url`),mdx("td",_extends({parentName:"tr"},{"align":null}),`string`),mdx("td",_extends({parentName:"tr"},{"align":null}),`false`),mdx("td",_extends({parentName:"tr"},{"align":null}),`none`),mdx("td",_extends({parentName:"tr"},{"align":null}),`TraitsSchemaURL is the URL of the endpoint where the identity's traits schema can be fetched from. format: url`)))),mdx("h5",{"id":"examples-2"},`Examples`),mdx("h6",{"id":"200-response-2"},`200 response`),mdx("pre",null,mdx("code",_extends({parentName:"pre"},{"className":"language-json"}),`[
  {
    "addresses": [
      {
        "expires_at": "2020-03-25T17:39:55Z",
        "id": "string",
        "value": "string",
        "verified": true,
        "verified_at": "2020-03-25T17:39:55Z",
        "via": "string"
      }
    ],
    "id": "string",
    "traits": {},
    "traits_schema_id": "string",
    "traits_schema_url": "string"
  }
]
`)),mdx("aside",{class:"success"},"This operation does not require authentication"),mdx("h4",{"id":"code-samples-2"},`Code samples`),mdx("div",{class:"tabs",id:"tab-listIdentities"},mdx("nav",{class:"tabs-nav"},mdx("ul",{class:"nav nav-tabs au-link-list au-link-list--inline"},mdx("li",{class:"nav-item"},mdx("a",{class:"nav-link active",role:"tab",href:"#tab-listIdentities-shell"},"Shell")),mdx("li",{class:"nav-item"},mdx("a",{class:"nav-link",role:"tab",href:"#tab-listIdentities-go"},"Go")),mdx("li",{class:"nav-item"},mdx("a",{class:"nav-link",role:"tab",href:"#tab-listIdentities-node"},"Node.js")),mdx("li",{class:"nav-item"},mdx("a",{class:"nav-link",role:"tab",href:"#tab-listIdentities-java"},"Java")),mdx("li",{class:"nav-item"},mdx("a",{class:"nav-link",role:"tab",href:"#tab-listIdentities-python"},"Python")),mdx("li",{class:"nav-item"},mdx("a",{class:"nav-link",role:"tab",href:"#tab-listIdentities-ruby"},"Ruby")))),mdx("div",{class:"tab-content"},mdx("div",{class:"tab-pane active",role:"tabpanel",id:"tab-listIdentities-shell"},mdx("pre",null,mdx("code",_extends({parentName:"pre"},{"className":"language-shell"}),`curl -X GET /identities \\
  -H 'Accept: application/json'
`))),mdx("div",{class:"tab-pane",role:"tabpanel",id:"tab-listIdentities-go"},mdx("pre",null,mdx("code",_extends({parentName:"pre"},{"className":"language-go"}),`package main

import (
    "bytes"
    "net/http"
)

func main() {
    headers := map[string][]string{
        "Accept": []string{"application/json"},
    }

    var body []byte
    // body = ...

    req, err := http.NewRequest("GET", "/identities", bytes.NewBuffer(body))
    req.Header = headers

    client := &http.Client{}
    resp, err := client.Do(req)
    // ...
}
`))),mdx("div",{class:"tab-pane",role:"tabpanel",id:"tab-listIdentities-node"},mdx("pre",null,mdx("code",_extends({parentName:"pre"},{"className":"language-nodejs"}),`const fetch = require('node-fetch');

const headers = {
  'Accept': 'application/json'
}

fetch('/identities', {
  method: 'GET',
  headers
})
.then(r => r.json())
.then((body) => {
    console.log(body)
})
`))),mdx("div",{class:"tab-pane",role:"tabpanel",id:"tab-listIdentities-java"},mdx("pre",null,mdx("code",_extends({parentName:"pre"},{"className":"language-java"}),`// This sample needs improvement.
URL obj = new URL("/identities");

HttpURLConnection con = (HttpURLConnection) obj.openConnection();
con.setRequestMethod("GET");

int responseCode = con.getResponseCode();

BufferedReader in = new BufferedReader(
    new InputStreamReader(con.getInputStream())
);

String inputLine;
StringBuffer response = new StringBuffer();
while ((inputLine = in.readLine()) != null) {
    response.append(inputLine);
}
in.close();

System.out.println(response.toString());
`))),mdx("div",{class:"tab-pane",role:"tabpanel",id:"tab-listIdentities-python"},mdx("pre",null,mdx("code",_extends({parentName:"pre"},{"className":"language-python"}),`import requests

headers = {
  'Accept': 'application/json'
}

r = requests.get(
  '/identities',
  params={},
  headers = headers)

print r.json()
`))),mdx("div",{class:"tab-pane",role:"tabpanel",id:"tab-listIdentities-ruby"},mdx("pre",null,mdx("code",_extends({parentName:"pre"},{"className":"language-ruby"}),`require 'rest-client'
require 'json'

headers = {
  'Accept' => 'application/json'
}

result = RestClient.get '/identities',
  params: {}, headers: headers

p JSON.parse(result)
`))))),mdx("a",{id:"opIdcreateIdentity"}),mdx("h3",{"id":"create-an-identity"},`Create an identity`),mdx("pre",null,mdx("code",_extends({parentName:"pre"},{}),`POST /identities HTTP/1.1
Content-Type: application/json
Accept: application/json

`)),mdx("p",null,`This endpoint creates an identity. It is NOT possible to set an identity's
credentials (password, ...) using this method! A way to achieve that will be
introduced in the future.`),mdx("p",null,`Learn how identities work in
`,mdx("a",_extends({parentName:"p"},{"href":"https://www.ory.sh/docs/next/kratos/concepts/identity-user-model"}),`ORY Kratos' User And Identity Model Documentation`),`.`),mdx("h4",{"id":"request-body"},`Request body`),mdx("pre",null,mdx("code",_extends({parentName:"pre"},{"className":"language-json"}),`{
  "addresses": [
    {
      "expires_at": "2020-03-25T17:39:55Z",
      "id": "string",
      "value": "string",
      "verified": true,
      "verified_at": "2020-03-25T17:39:55Z",
      "via": "string"
    }
  ],
  "id": "string",
  "traits": {},
  "traits_schema_id": "string",
  "traits_schema_url": "string"
}
`)),mdx("a",{id:"create-an-identity-parameters"}),mdx("h5",{"id":"parameters"},`Parameters`),mdx("table",null,mdx("thead",{parentName:"table"},mdx("tr",{parentName:"thead"},mdx("th",_extends({parentName:"tr"},{"align":null}),`Parameter`),mdx("th",_extends({parentName:"tr"},{"align":null}),`In`),mdx("th",_extends({parentName:"tr"},{"align":null}),`Type`),mdx("th",_extends({parentName:"tr"},{"align":null}),`Required`),mdx("th",_extends({parentName:"tr"},{"align":null}),`Description`))),mdx("tbody",{parentName:"table"},mdx("tr",{parentName:"tbody"},mdx("td",_extends({parentName:"tr"},{"align":null}),`body`),mdx("td",_extends({parentName:"tr"},{"align":null}),`body`),mdx("td",_extends({parentName:"tr"},{"align":null}),mdx("a",_extends({parentName:"td"},{"href":"#schemaidentity"}),`Identity`)),mdx("td",_extends({parentName:"tr"},{"align":null}),`true`),mdx("td",_extends({parentName:"tr"},{"align":null}),`none`)))),mdx("h4",{"id":"responses-3"},`Responses`),mdx("a",{id:"create-an-identity-responses"}),mdx("h5",{"id":"overview-3"},`Overview`),mdx("table",null,mdx("thead",{parentName:"table"},mdx("tr",{parentName:"thead"},mdx("th",_extends({parentName:"tr"},{"align":null}),`Status`),mdx("th",_extends({parentName:"tr"},{"align":null}),`Meaning`),mdx("th",_extends({parentName:"tr"},{"align":null}),`Description`),mdx("th",_extends({parentName:"tr"},{"align":null}),`Schema`))),mdx("tbody",{parentName:"table"},mdx("tr",{parentName:"tbody"},mdx("td",_extends({parentName:"tr"},{"align":null}),`201`),mdx("td",_extends({parentName:"tr"},{"align":null}),mdx("a",_extends({parentName:"td"},{"href":"https://tools.ietf.org/html/rfc7231#section-6.3.2"}),`Created`)),mdx("td",_extends({parentName:"tr"},{"align":null}),`A single identity.`),mdx("td",_extends({parentName:"tr"},{"align":null}))))),mdx("p",null,`nolint:deadcode,unused|`,mdx("a",_extends({parentName:"p"},{"href":"#schemaidentity"}),`Identity`),`|
|400|`,mdx("a",_extends({parentName:"p"},{"href":"https://tools.ietf.org/html/rfc7231#section-6.5.1"}),`Bad Request`),`|genericError|`,mdx("a",_extends({parentName:"p"},{"href":"#schemagenericerror"}),`genericError`),`|
|500|`,mdx("a",_extends({parentName:"p"},{"href":"https://tools.ietf.org/html/rfc7231#section-6.6.1"}),`Internal Server Error`),`|genericError|`,mdx("a",_extends({parentName:"p"},{"href":"#schemagenericerror"}),`genericError`),`|`),mdx("h5",{"id":"examples-3"},`Examples`),mdx("h6",{"id":"201-response"},`201 response`),mdx("pre",null,mdx("code",_extends({parentName:"pre"},{"className":"language-json"}),`{
  "addresses": [
    {
      "expires_at": "2020-03-25T17:39:55Z",
      "id": "string",
      "value": "string",
      "verified": true,
      "verified_at": "2020-03-25T17:39:55Z",
      "via": "string"
    }
  ],
  "id": "string",
  "traits": {},
  "traits_schema_id": "string",
  "traits_schema_url": "string"
}
`)),mdx("aside",{class:"success"},"This operation does not require authentication"),mdx("h4",{"id":"code-samples-3"},`Code samples`),mdx("div",{class:"tabs",id:"tab-createIdentity"},mdx("nav",{class:"tabs-nav"},mdx("ul",{class:"nav nav-tabs au-link-list au-link-list--inline"},mdx("li",{class:"nav-item"},mdx("a",{class:"nav-link active",role:"tab",href:"#tab-createIdentity-shell"},"Shell")),mdx("li",{class:"nav-item"},mdx("a",{class:"nav-link",role:"tab",href:"#tab-createIdentity-go"},"Go")),mdx("li",{class:"nav-item"},mdx("a",{class:"nav-link",role:"tab",href:"#tab-createIdentity-node"},"Node.js")),mdx("li",{class:"nav-item"},mdx("a",{class:"nav-link",role:"tab",href:"#tab-createIdentity-java"},"Java")),mdx("li",{class:"nav-item"},mdx("a",{class:"nav-link",role:"tab",href:"#tab-createIdentity-python"},"Python")),mdx("li",{class:"nav-item"},mdx("a",{class:"nav-link",role:"tab",href:"#tab-createIdentity-ruby"},"Ruby")))),mdx("div",{class:"tab-content"},mdx("div",{class:"tab-pane active",role:"tabpanel",id:"tab-createIdentity-shell"},mdx("pre",null,mdx("code",_extends({parentName:"pre"},{"className":"language-shell"}),`curl -X POST /identities \\
  -H 'Content-Type: application/json' \\  -H 'Accept: application/json'
`))),mdx("div",{class:"tab-pane",role:"tabpanel",id:"tab-createIdentity-go"},mdx("pre",null,mdx("code",_extends({parentName:"pre"},{"className":"language-go"}),`package main

import (
    "bytes"
    "net/http"
)

func main() {
    headers := map[string][]string{
        "Content-Type": []string{"application/json"},
        "Accept": []string{"application/json"},
    }

    var body []byte
    // body = ...

    req, err := http.NewRequest("POST", "/identities", bytes.NewBuffer(body))
    req.Header = headers

    client := &http.Client{}
    resp, err := client.Do(req)
    // ...
}
`))),mdx("div",{class:"tab-pane",role:"tabpanel",id:"tab-createIdentity-node"},mdx("pre",null,mdx("code",_extends({parentName:"pre"},{"className":"language-nodejs"}),`const fetch = require('node-fetch');
const input = '{
  "addresses": [
    {
      "expires_at": "2020-03-25T17:39:55Z",
      "id": "string",
      "value": "string",
      "verified": true,
      "verified_at": "2020-03-25T17:39:55Z",
      "via": "string"
    }
  ],
  "id": "string",
  "traits": {},
  "traits_schema_id": "string",
  "traits_schema_url": "string"
}';
const headers = {
  'Content-Type': 'application/json',  'Accept': 'application/json'
}

fetch('/identities', {
  method: 'POST',
  body: input,
  headers
})
.then(r => r.json())
.then((body) => {
    console.log(body)
})
`))),mdx("div",{class:"tab-pane",role:"tabpanel",id:"tab-createIdentity-java"},mdx("pre",null,mdx("code",_extends({parentName:"pre"},{"className":"language-java"}),`// This sample needs improvement.
URL obj = new URL("/identities");

HttpURLConnection con = (HttpURLConnection) obj.openConnection();
con.setRequestMethod("POST");

int responseCode = con.getResponseCode();

BufferedReader in = new BufferedReader(
    new InputStreamReader(con.getInputStream())
);

String inputLine;
StringBuffer response = new StringBuffer();
while ((inputLine = in.readLine()) != null) {
    response.append(inputLine);
}
in.close();

System.out.println(response.toString());
`))),mdx("div",{class:"tab-pane",role:"tabpanel",id:"tab-createIdentity-python"},mdx("pre",null,mdx("code",_extends({parentName:"pre"},{"className":"language-python"}),`import requests

headers = {
  'Content-Type': 'application/json',
  'Accept': 'application/json'
}

r = requests.post(
  '/identities',
  params={},
  headers = headers)

print r.json()
`))),mdx("div",{class:"tab-pane",role:"tabpanel",id:"tab-createIdentity-ruby"},mdx("pre",null,mdx("code",_extends({parentName:"pre"},{"className":"language-ruby"}),`require 'rest-client'
require 'json'

headers = {
  'Content-Type' => 'application/json',
  'Accept' => 'application/json'
}

result = RestClient.post '/identities',
  params: {}, headers: headers

p JSON.parse(result)
`))))),mdx("a",{id:"opIdgetIdentity"}),mdx("h3",{"id":"get-an-identity"},`Get an identity`),mdx("pre",null,mdx("code",_extends({parentName:"pre"},{}),`GET /identities/{id} HTTP/1.1
Accept: application/json

`)),mdx("p",null,`Learn how identities work in
`,mdx("a",_extends({parentName:"p"},{"href":"https://www.ory.sh/docs/next/kratos/concepts/identity-user-model"}),`ORY Kratos' User And Identity Model Documentation`),`.`),mdx("a",{id:"get-an-identity-parameters"}),mdx("h5",{"id":"parameters-1"},`Parameters`),mdx("table",null,mdx("thead",{parentName:"table"},mdx("tr",{parentName:"thead"},mdx("th",_extends({parentName:"tr"},{"align":null}),`Parameter`),mdx("th",_extends({parentName:"tr"},{"align":null}),`In`),mdx("th",_extends({parentName:"tr"},{"align":null}),`Type`),mdx("th",_extends({parentName:"tr"},{"align":null}),`Required`),mdx("th",_extends({parentName:"tr"},{"align":null}),`Description`))),mdx("tbody",{parentName:"table"},mdx("tr",{parentName:"tbody"},mdx("td",_extends({parentName:"tr"},{"align":null}),`id`),mdx("td",_extends({parentName:"tr"},{"align":null}),`path`),mdx("td",_extends({parentName:"tr"},{"align":null}),`string`),mdx("td",_extends({parentName:"tr"},{"align":null}),`true`),mdx("td",_extends({parentName:"tr"},{"align":null}),`ID must be set to the ID of identity you want to get`)))),mdx("h4",{"id":"responses-4"},`Responses`),mdx("a",{id:"get-an-identity-responses"}),mdx("h5",{"id":"overview-4"},`Overview`),mdx("table",null,mdx("thead",{parentName:"table"},mdx("tr",{parentName:"thead"},mdx("th",_extends({parentName:"tr"},{"align":null}),`Status`),mdx("th",_extends({parentName:"tr"},{"align":null}),`Meaning`),mdx("th",_extends({parentName:"tr"},{"align":null}),`Description`),mdx("th",_extends({parentName:"tr"},{"align":null}),`Schema`))),mdx("tbody",{parentName:"table"},mdx("tr",{parentName:"tbody"},mdx("td",_extends({parentName:"tr"},{"align":null}),`200`),mdx("td",_extends({parentName:"tr"},{"align":null}),mdx("a",_extends({parentName:"td"},{"href":"https://tools.ietf.org/html/rfc7231#section-6.3.1"}),`OK`)),mdx("td",_extends({parentName:"tr"},{"align":null}),`A single identity.`),mdx("td",_extends({parentName:"tr"},{"align":null}))))),mdx("p",null,`nolint:deadcode,unused|`,mdx("a",_extends({parentName:"p"},{"href":"#schemaidentity"}),`Identity`),`|
|400|`,mdx("a",_extends({parentName:"p"},{"href":"https://tools.ietf.org/html/rfc7231#section-6.5.1"}),`Bad Request`),`|genericError|`,mdx("a",_extends({parentName:"p"},{"href":"#schemagenericerror"}),`genericError`),`|
|500|`,mdx("a",_extends({parentName:"p"},{"href":"https://tools.ietf.org/html/rfc7231#section-6.6.1"}),`Internal Server Error`),`|genericError|`,mdx("a",_extends({parentName:"p"},{"href":"#schemagenericerror"}),`genericError`),`|`),mdx("h5",{"id":"examples-4"},`Examples`),mdx("h6",{"id":"200-response-3"},`200 response`),mdx("pre",null,mdx("code",_extends({parentName:"pre"},{"className":"language-json"}),`{
  "addresses": [
    {
      "expires_at": "2020-03-25T17:39:55Z",
      "id": "string",
      "value": "string",
      "verified": true,
      "verified_at": "2020-03-25T17:39:55Z",
      "via": "string"
    }
  ],
  "id": "string",
  "traits": {},
  "traits_schema_id": "string",
  "traits_schema_url": "string"
}
`)),mdx("aside",{class:"success"},"This operation does not require authentication"),mdx("h4",{"id":"code-samples-4"},`Code samples`),mdx("div",{class:"tabs",id:"tab-getIdentity"},mdx("nav",{class:"tabs-nav"},mdx("ul",{class:"nav nav-tabs au-link-list au-link-list--inline"},mdx("li",{class:"nav-item"},mdx("a",{class:"nav-link active",role:"tab",href:"#tab-getIdentity-shell"},"Shell")),mdx("li",{class:"nav-item"},mdx("a",{class:"nav-link",role:"tab",href:"#tab-getIdentity-go"},"Go")),mdx("li",{class:"nav-item"},mdx("a",{class:"nav-link",role:"tab",href:"#tab-getIdentity-node"},"Node.js")),mdx("li",{class:"nav-item"},mdx("a",{class:"nav-link",role:"tab",href:"#tab-getIdentity-java"},"Java")),mdx("li",{class:"nav-item"},mdx("a",{class:"nav-link",role:"tab",href:"#tab-getIdentity-python"},"Python")),mdx("li",{class:"nav-item"},mdx("a",{class:"nav-link",role:"tab",href:"#tab-getIdentity-ruby"},"Ruby")))),mdx("div",{class:"tab-content"},mdx("div",{class:"tab-pane active",role:"tabpanel",id:"tab-getIdentity-shell"},mdx("pre",null,mdx("code",_extends({parentName:"pre"},{"className":"language-shell"}),`curl -X GET /identities/{id} \\
  -H 'Accept: application/json'
`))),mdx("div",{class:"tab-pane",role:"tabpanel",id:"tab-getIdentity-go"},mdx("pre",null,mdx("code",_extends({parentName:"pre"},{"className":"language-go"}),`package main

import (
    "bytes"
    "net/http"
)

func main() {
    headers := map[string][]string{
        "Accept": []string{"application/json"},
    }

    var body []byte
    // body = ...

    req, err := http.NewRequest("GET", "/identities/{id}", bytes.NewBuffer(body))
    req.Header = headers

    client := &http.Client{}
    resp, err := client.Do(req)
    // ...
}
`))),mdx("div",{class:"tab-pane",role:"tabpanel",id:"tab-getIdentity-node"},mdx("pre",null,mdx("code",_extends({parentName:"pre"},{"className":"language-nodejs"}),`const fetch = require('node-fetch');

const headers = {
  'Accept': 'application/json'
}

fetch('/identities/{id}', {
  method: 'GET',
  headers
})
.then(r => r.json())
.then((body) => {
    console.log(body)
})
`))),mdx("div",{class:"tab-pane",role:"tabpanel",id:"tab-getIdentity-java"},mdx("pre",null,mdx("code",_extends({parentName:"pre"},{"className":"language-java"}),`// This sample needs improvement.
URL obj = new URL("/identities/{id}");

HttpURLConnection con = (HttpURLConnection) obj.openConnection();
con.setRequestMethod("GET");

int responseCode = con.getResponseCode();

BufferedReader in = new BufferedReader(
    new InputStreamReader(con.getInputStream())
);

String inputLine;
StringBuffer response = new StringBuffer();
while ((inputLine = in.readLine()) != null) {
    response.append(inputLine);
}
in.close();

System.out.println(response.toString());
`))),mdx("div",{class:"tab-pane",role:"tabpanel",id:"tab-getIdentity-python"},mdx("pre",null,mdx("code",_extends({parentName:"pre"},{"className":"language-python"}),`import requests

headers = {
  'Accept': 'application/json'
}

r = requests.get(
  '/identities/{id}',
  params={},
  headers = headers)

print r.json()
`))),mdx("div",{class:"tab-pane",role:"tabpanel",id:"tab-getIdentity-ruby"},mdx("pre",null,mdx("code",_extends({parentName:"pre"},{"className":"language-ruby"}),`require 'rest-client'
require 'json'

headers = {
  'Accept' => 'application/json'
}

result = RestClient.get '/identities/{id}',
  params: {}, headers: headers

p JSON.parse(result)
`))))),mdx("a",{id:"opIdupdateIdentity"}),mdx("h3",{"id":"update-an-identity"},`Update an identity`),mdx("pre",null,mdx("code",_extends({parentName:"pre"},{}),`PUT /identities/{id} HTTP/1.1
Content-Type: application/json
Accept: application/json

`)),mdx("p",null,`This endpoint updates an identity. It is NOT possible to set an identity's
credentials (password, ...) using this method! A way to achieve that will be
introduced in the future.`),mdx("p",null,`The full identity payload (except credentials) is expected. This endpoint does
not support patching.`),mdx("p",null,`Learn how identities work in
`,mdx("a",_extends({parentName:"p"},{"href":"https://www.ory.sh/docs/next/kratos/concepts/identity-user-model"}),`ORY Kratos' User And Identity Model Documentation`),`.`),mdx("h4",{"id":"request-body-1"},`Request body`),mdx("pre",null,mdx("code",_extends({parentName:"pre"},{"className":"language-json"}),`{
  "addresses": [
    {
      "expires_at": "2020-03-25T17:39:55Z",
      "id": "string",
      "value": "string",
      "verified": true,
      "verified_at": "2020-03-25T17:39:55Z",
      "via": "string"
    }
  ],
  "id": "string",
  "traits": {},
  "traits_schema_id": "string",
  "traits_schema_url": "string"
}
`)),mdx("a",{id:"update-an-identity-parameters"}),mdx("h5",{"id":"parameters-2"},`Parameters`),mdx("table",null,mdx("thead",{parentName:"table"},mdx("tr",{parentName:"thead"},mdx("th",_extends({parentName:"tr"},{"align":null}),`Parameter`),mdx("th",_extends({parentName:"tr"},{"align":null}),`In`),mdx("th",_extends({parentName:"tr"},{"align":null}),`Type`),mdx("th",_extends({parentName:"tr"},{"align":null}),`Required`),mdx("th",_extends({parentName:"tr"},{"align":null}),`Description`))),mdx("tbody",{parentName:"table"},mdx("tr",{parentName:"tbody"},mdx("td",_extends({parentName:"tr"},{"align":null}),`id`),mdx("td",_extends({parentName:"tr"},{"align":null}),`path`),mdx("td",_extends({parentName:"tr"},{"align":null}),`string`),mdx("td",_extends({parentName:"tr"},{"align":null}),`true`),mdx("td",_extends({parentName:"tr"},{"align":null}),`ID must be set to the ID of identity you want to update`)),mdx("tr",{parentName:"tbody"},mdx("td",_extends({parentName:"tr"},{"align":null}),`body`),mdx("td",_extends({parentName:"tr"},{"align":null}),`body`),mdx("td",_extends({parentName:"tr"},{"align":null}),mdx("a",_extends({parentName:"td"},{"href":"#schemaidentity"}),`Identity`)),mdx("td",_extends({parentName:"tr"},{"align":null}),`true`),mdx("td",_extends({parentName:"tr"},{"align":null}),`none`)))),mdx("h4",{"id":"responses-5"},`Responses`),mdx("a",{id:"update-an-identity-responses"}),mdx("h5",{"id":"overview-5"},`Overview`),mdx("table",null,mdx("thead",{parentName:"table"},mdx("tr",{parentName:"thead"},mdx("th",_extends({parentName:"tr"},{"align":null}),`Status`),mdx("th",_extends({parentName:"tr"},{"align":null}),`Meaning`),mdx("th",_extends({parentName:"tr"},{"align":null}),`Description`),mdx("th",_extends({parentName:"tr"},{"align":null}),`Schema`))),mdx("tbody",{parentName:"table"},mdx("tr",{parentName:"tbody"},mdx("td",_extends({parentName:"tr"},{"align":null}),`200`),mdx("td",_extends({parentName:"tr"},{"align":null}),mdx("a",_extends({parentName:"td"},{"href":"https://tools.ietf.org/html/rfc7231#section-6.3.1"}),`OK`)),mdx("td",_extends({parentName:"tr"},{"align":null}),`A single identity.`),mdx("td",_extends({parentName:"tr"},{"align":null}))))),mdx("p",null,`nolint:deadcode,unused|`,mdx("a",_extends({parentName:"p"},{"href":"#schemaidentity"}),`Identity`),`|
|400|`,mdx("a",_extends({parentName:"p"},{"href":"https://tools.ietf.org/html/rfc7231#section-6.5.1"}),`Bad Request`),`|genericError|`,mdx("a",_extends({parentName:"p"},{"href":"#schemagenericerror"}),`genericError`),`|
|404|`,mdx("a",_extends({parentName:"p"},{"href":"https://tools.ietf.org/html/rfc7231#section-6.5.4"}),`Not Found`),`|genericError|`,mdx("a",_extends({parentName:"p"},{"href":"#schemagenericerror"}),`genericError`),`|
|500|`,mdx("a",_extends({parentName:"p"},{"href":"https://tools.ietf.org/html/rfc7231#section-6.6.1"}),`Internal Server Error`),`|genericError|`,mdx("a",_extends({parentName:"p"},{"href":"#schemagenericerror"}),`genericError`),`|`),mdx("h5",{"id":"examples-5"},`Examples`),mdx("h6",{"id":"200-response-4"},`200 response`),mdx("pre",null,mdx("code",_extends({parentName:"pre"},{"className":"language-json"}),`{
  "addresses": [
    {
      "expires_at": "2020-03-25T17:39:55Z",
      "id": "string",
      "value": "string",
      "verified": true,
      "verified_at": "2020-03-25T17:39:55Z",
      "via": "string"
    }
  ],
  "id": "string",
  "traits": {},
  "traits_schema_id": "string",
  "traits_schema_url": "string"
}
`)),mdx("aside",{class:"success"},"This operation does not require authentication"),mdx("h4",{"id":"code-samples-5"},`Code samples`),mdx("div",{class:"tabs",id:"tab-updateIdentity"},mdx("nav",{class:"tabs-nav"},mdx("ul",{class:"nav nav-tabs au-link-list au-link-list--inline"},mdx("li",{class:"nav-item"},mdx("a",{class:"nav-link active",role:"tab",href:"#tab-updateIdentity-shell"},"Shell")),mdx("li",{class:"nav-item"},mdx("a",{class:"nav-link",role:"tab",href:"#tab-updateIdentity-go"},"Go")),mdx("li",{class:"nav-item"},mdx("a",{class:"nav-link",role:"tab",href:"#tab-updateIdentity-node"},"Node.js")),mdx("li",{class:"nav-item"},mdx("a",{class:"nav-link",role:"tab",href:"#tab-updateIdentity-java"},"Java")),mdx("li",{class:"nav-item"},mdx("a",{class:"nav-link",role:"tab",href:"#tab-updateIdentity-python"},"Python")),mdx("li",{class:"nav-item"},mdx("a",{class:"nav-link",role:"tab",href:"#tab-updateIdentity-ruby"},"Ruby")))),mdx("div",{class:"tab-content"},mdx("div",{class:"tab-pane active",role:"tabpanel",id:"tab-updateIdentity-shell"},mdx("pre",null,mdx("code",_extends({parentName:"pre"},{"className":"language-shell"}),`curl -X PUT /identities/{id} \\
  -H 'Content-Type: application/json' \\  -H 'Accept: application/json'
`))),mdx("div",{class:"tab-pane",role:"tabpanel",id:"tab-updateIdentity-go"},mdx("pre",null,mdx("code",_extends({parentName:"pre"},{"className":"language-go"}),`package main

import (
    "bytes"
    "net/http"
)

func main() {
    headers := map[string][]string{
        "Content-Type": []string{"application/json"},
        "Accept": []string{"application/json"},
    }

    var body []byte
    // body = ...

    req, err := http.NewRequest("PUT", "/identities/{id}", bytes.NewBuffer(body))
    req.Header = headers

    client := &http.Client{}
    resp, err := client.Do(req)
    // ...
}
`))),mdx("div",{class:"tab-pane",role:"tabpanel",id:"tab-updateIdentity-node"},mdx("pre",null,mdx("code",_extends({parentName:"pre"},{"className":"language-nodejs"}),`const fetch = require('node-fetch');
const input = '{
  "addresses": [
    {
      "expires_at": "2020-03-25T17:39:55Z",
      "id": "string",
      "value": "string",
      "verified": true,
      "verified_at": "2020-03-25T17:39:55Z",
      "via": "string"
    }
  ],
  "id": "string",
  "traits": {},
  "traits_schema_id": "string",
  "traits_schema_url": "string"
}';
const headers = {
  'Content-Type': 'application/json',  'Accept': 'application/json'
}

fetch('/identities/{id}', {
  method: 'PUT',
  body: input,
  headers
})
.then(r => r.json())
.then((body) => {
    console.log(body)
})
`))),mdx("div",{class:"tab-pane",role:"tabpanel",id:"tab-updateIdentity-java"},mdx("pre",null,mdx("code",_extends({parentName:"pre"},{"className":"language-java"}),`// This sample needs improvement.
URL obj = new URL("/identities/{id}");

HttpURLConnection con = (HttpURLConnection) obj.openConnection();
con.setRequestMethod("PUT");

int responseCode = con.getResponseCode();

BufferedReader in = new BufferedReader(
    new InputStreamReader(con.getInputStream())
);

String inputLine;
StringBuffer response = new StringBuffer();
while ((inputLine = in.readLine()) != null) {
    response.append(inputLine);
}
in.close();

System.out.println(response.toString());
`))),mdx("div",{class:"tab-pane",role:"tabpanel",id:"tab-updateIdentity-python"},mdx("pre",null,mdx("code",_extends({parentName:"pre"},{"className":"language-python"}),`import requests

headers = {
  'Content-Type': 'application/json',
  'Accept': 'application/json'
}

r = requests.put(
  '/identities/{id}',
  params={},
  headers = headers)

print r.json()
`))),mdx("div",{class:"tab-pane",role:"tabpanel",id:"tab-updateIdentity-ruby"},mdx("pre",null,mdx("code",_extends({parentName:"pre"},{"className":"language-ruby"}),`require 'rest-client'
require 'json'

headers = {
  'Content-Type' => 'application/json',
  'Accept' => 'application/json'
}

result = RestClient.put '/identities/{id}',
  params: {}, headers: headers

p JSON.parse(result)
`))))),mdx("a",{id:"opIddeleteIdentity"}),mdx("h3",{"id":"delete-an-identity"},`Delete an identity`),mdx("pre",null,mdx("code",_extends({parentName:"pre"},{}),`DELETE /identities/{id} HTTP/1.1
Accept: application/json

`)),mdx("p",null,`This endpoint deletes an identity. This can not be undone.`),mdx("p",null,`Learn how identities work in
`,mdx("a",_extends({parentName:"p"},{"href":"https://www.ory.sh/docs/next/kratos/concepts/identity-user-model"}),`ORY Kratos' User And Identity Model Documentation`),`.`),mdx("a",{id:"delete-an-identity-parameters"}),mdx("h5",{"id":"parameters-3"},`Parameters`),mdx("table",null,mdx("thead",{parentName:"table"},mdx("tr",{parentName:"thead"},mdx("th",_extends({parentName:"tr"},{"align":null}),`Parameter`),mdx("th",_extends({parentName:"tr"},{"align":null}),`In`),mdx("th",_extends({parentName:"tr"},{"align":null}),`Type`),mdx("th",_extends({parentName:"tr"},{"align":null}),`Required`),mdx("th",_extends({parentName:"tr"},{"align":null}),`Description`))),mdx("tbody",{parentName:"table"},mdx("tr",{parentName:"tbody"},mdx("td",_extends({parentName:"tr"},{"align":null}),`id`),mdx("td",_extends({parentName:"tr"},{"align":null}),`path`),mdx("td",_extends({parentName:"tr"},{"align":null}),`string`),mdx("td",_extends({parentName:"tr"},{"align":null}),`true`),mdx("td",_extends({parentName:"tr"},{"align":null}),`ID is the identity's ID.`)))),mdx("h4",{"id":"responses-6"},`Responses`),mdx("a",{id:"delete-an-identity-responses"}),mdx("h5",{"id":"overview-6"},`Overview`),mdx("table",null,mdx("thead",{parentName:"table"},mdx("tr",{parentName:"thead"},mdx("th",_extends({parentName:"tr"},{"align":null}),`Status`),mdx("th",_extends({parentName:"tr"},{"align":null}),`Meaning`),mdx("th",_extends({parentName:"tr"},{"align":null}),`Description`),mdx("th",_extends({parentName:"tr"},{"align":null}),`Schema`))),mdx("tbody",{parentName:"table"},mdx("tr",{parentName:"tbody"},mdx("td",_extends({parentName:"tr"},{"align":null}),`204`),mdx("td",_extends({parentName:"tr"},{"align":null}),mdx("a",_extends({parentName:"td"},{"href":"https://tools.ietf.org/html/rfc7231#section-6.3.5"}),`No Content`)),mdx("td",_extends({parentName:"tr"},{"align":null}),`Empty responses are sent when, for example, resources are deleted. The HTTP status code for empty responses is`),mdx("td",_extends({parentName:"tr"},{"align":null}))),mdx("tr",{parentName:"tbody"},mdx("td",_extends({parentName:"tr"},{"align":null}),`typically 201.`),mdx("td",_extends({parentName:"tr"},{"align":null}),`None`),mdx("td",_extends({parentName:"tr"},{"align":null})),mdx("td",_extends({parentName:"tr"},{"align":null}))),mdx("tr",{parentName:"tbody"},mdx("td",_extends({parentName:"tr"},{"align":null}),`404`),mdx("td",_extends({parentName:"tr"},{"align":null}),mdx("a",_extends({parentName:"td"},{"href":"https://tools.ietf.org/html/rfc7231#section-6.5.4"}),`Not Found`)),mdx("td",_extends({parentName:"tr"},{"align":null}),`genericError`),mdx("td",_extends({parentName:"tr"},{"align":null}),mdx("a",_extends({parentName:"td"},{"href":"#schemagenericerror"}),`genericError`))),mdx("tr",{parentName:"tbody"},mdx("td",_extends({parentName:"tr"},{"align":null}),`500`),mdx("td",_extends({parentName:"tr"},{"align":null}),mdx("a",_extends({parentName:"td"},{"href":"https://tools.ietf.org/html/rfc7231#section-6.6.1"}),`Internal Server Error`)),mdx("td",_extends({parentName:"tr"},{"align":null}),`genericError`),mdx("td",_extends({parentName:"tr"},{"align":null}),mdx("a",_extends({parentName:"td"},{"href":"#schemagenericerror"}),`genericError`))))),mdx("h5",{"id":"examples-6"},`Examples`),mdx("h6",{"id":"404-response"},`404 response`),mdx("pre",null,mdx("code",_extends({parentName:"pre"},{"className":"language-json"}),`{
  "error": {
    "code": 404,
    "debug": "The database adapter was unable to find the element",
    "details": [
      {
        "property1": {},
        "property2": {}
      }
    ],
    "message": "string",
    "reason": "string",
    "request": "string",
    "status": "string"
  }
}
`)),mdx("aside",{class:"success"},"This operation does not require authentication"),mdx("h4",{"id":"code-samples-6"},`Code samples`),mdx("div",{class:"tabs",id:"tab-deleteIdentity"},mdx("nav",{class:"tabs-nav"},mdx("ul",{class:"nav nav-tabs au-link-list au-link-list--inline"},mdx("li",{class:"nav-item"},mdx("a",{class:"nav-link active",role:"tab",href:"#tab-deleteIdentity-shell"},"Shell")),mdx("li",{class:"nav-item"},mdx("a",{class:"nav-link",role:"tab",href:"#tab-deleteIdentity-go"},"Go")),mdx("li",{class:"nav-item"},mdx("a",{class:"nav-link",role:"tab",href:"#tab-deleteIdentity-node"},"Node.js")),mdx("li",{class:"nav-item"},mdx("a",{class:"nav-link",role:"tab",href:"#tab-deleteIdentity-java"},"Java")),mdx("li",{class:"nav-item"},mdx("a",{class:"nav-link",role:"tab",href:"#tab-deleteIdentity-python"},"Python")),mdx("li",{class:"nav-item"},mdx("a",{class:"nav-link",role:"tab",href:"#tab-deleteIdentity-ruby"},"Ruby")))),mdx("div",{class:"tab-content"},mdx("div",{class:"tab-pane active",role:"tabpanel",id:"tab-deleteIdentity-shell"},mdx("pre",null,mdx("code",_extends({parentName:"pre"},{"className":"language-shell"}),`curl -X DELETE /identities/{id} \\
  -H 'Accept: application/json'
`))),mdx("div",{class:"tab-pane",role:"tabpanel",id:"tab-deleteIdentity-go"},mdx("pre",null,mdx("code",_extends({parentName:"pre"},{"className":"language-go"}),`package main

import (
    "bytes"
    "net/http"
)

func main() {
    headers := map[string][]string{
        "Accept": []string{"application/json"},
    }

    var body []byte
    // body = ...

    req, err := http.NewRequest("DELETE", "/identities/{id}", bytes.NewBuffer(body))
    req.Header = headers

    client := &http.Client{}
    resp, err := client.Do(req)
    // ...
}
`))),mdx("div",{class:"tab-pane",role:"tabpanel",id:"tab-deleteIdentity-node"},mdx("pre",null,mdx("code",_extends({parentName:"pre"},{"className":"language-nodejs"}),`const fetch = require('node-fetch');

const headers = {
  'Accept': 'application/json'
}

fetch('/identities/{id}', {
  method: 'DELETE',
  headers
})
.then(r => r.json())
.then((body) => {
    console.log(body)
})
`))),mdx("div",{class:"tab-pane",role:"tabpanel",id:"tab-deleteIdentity-java"},mdx("pre",null,mdx("code",_extends({parentName:"pre"},{"className":"language-java"}),`// This sample needs improvement.
URL obj = new URL("/identities/{id}");

HttpURLConnection con = (HttpURLConnection) obj.openConnection();
con.setRequestMethod("DELETE");

int responseCode = con.getResponseCode();

BufferedReader in = new BufferedReader(
    new InputStreamReader(con.getInputStream())
);

String inputLine;
StringBuffer response = new StringBuffer();
while ((inputLine = in.readLine()) != null) {
    response.append(inputLine);
}
in.close();

System.out.println(response.toString());
`))),mdx("div",{class:"tab-pane",role:"tabpanel",id:"tab-deleteIdentity-python"},mdx("pre",null,mdx("code",_extends({parentName:"pre"},{"className":"language-python"}),`import requests

headers = {
  'Accept': 'application/json'
}

r = requests.delete(
  '/identities/{id}',
  params={},
  headers = headers)

print r.json()
`))),mdx("div",{class:"tab-pane",role:"tabpanel",id:"tab-deleteIdentity-ruby"},mdx("pre",null,mdx("code",_extends({parentName:"pre"},{"className":"language-ruby"}),`require 'rest-client'
require 'json'

headers = {
  'Accept' => 'application/json'
}

result = RestClient.delete '/identities/{id}',
  params: {}, headers: headers

p JSON.parse(result)
`))))),mdx("a",{id:"ory-kratos-public-endpoints"}),mdx("h2",{"id":"public-endpoints"},`Public Endpoints`),mdx("a",{id:"opIdinitializeSelfServiceBrowserLoginFlow"}),mdx("h3",{"id":"initialize-browser-based-login-user-flow"},`Initialize browser-based login user flow`),mdx("pre",null,mdx("code",_extends({parentName:"pre"},{}),`GET /self-service/browser/flows/login HTTP/1.1
Accept: application/json

`)),mdx("p",null,`This endpoint initializes a browser-based user login flow. Once initialized, the
browser will be redirected to `,mdx("inlineCode",{parentName:"p"},`urls.login_ui`),` with the request ID set as a query
parameter. If a valid user session exists already, the browser will be
redirected to `,mdx("inlineCode",{parentName:"p"},`urls.default_redirect_url`),`.`),mdx("blockquote",null,mdx("p",{parentName:"blockquote"},`This endpoint is NOT INTENDED for API clients and only works with browsers
(Chrome, Firefox, ...).`)),mdx("p",null,`More information can be found at
`,mdx("a",_extends({parentName:"p"},{"href":"https://www.ory.sh/docs/next/kratos/self-service/flows/user-login-user-registration"}),`ORY Kratos User Login and User Registration Documentation`),`.`),mdx("h4",{"id":"responses-7"},`Responses`),mdx("a",{id:"initialize-browser-based-login-user-flow-responses"}),mdx("h5",{"id":"overview-7"},`Overview`),mdx("table",null,mdx("thead",{parentName:"table"},mdx("tr",{parentName:"thead"},mdx("th",_extends({parentName:"tr"},{"align":null}),`Status`),mdx("th",_extends({parentName:"tr"},{"align":null}),`Meaning`),mdx("th",_extends({parentName:"tr"},{"align":null}),`Description`),mdx("th",_extends({parentName:"tr"},{"align":null}),`Schema`))),mdx("tbody",{parentName:"table"},mdx("tr",{parentName:"tbody"},mdx("td",_extends({parentName:"tr"},{"align":null}),`302`),mdx("td",_extends({parentName:"tr"},{"align":null}),mdx("a",_extends({parentName:"td"},{"href":"https://tools.ietf.org/html/rfc7231#section-6.4.3"}),`Found`)),mdx("td",_extends({parentName:"tr"},{"align":null}),`Empty responses are sent when, for example, resources are deleted. The HTTP status code for empty responses is`),mdx("td",_extends({parentName:"tr"},{"align":null}))),mdx("tr",{parentName:"tbody"},mdx("td",_extends({parentName:"tr"},{"align":null}),`typically 201.`),mdx("td",_extends({parentName:"tr"},{"align":null}),`None`),mdx("td",_extends({parentName:"tr"},{"align":null})),mdx("td",_extends({parentName:"tr"},{"align":null}))),mdx("tr",{parentName:"tbody"},mdx("td",_extends({parentName:"tr"},{"align":null}),`500`),mdx("td",_extends({parentName:"tr"},{"align":null}),mdx("a",_extends({parentName:"td"},{"href":"https://tools.ietf.org/html/rfc7231#section-6.6.1"}),`Internal Server Error`)),mdx("td",_extends({parentName:"tr"},{"align":null}),`genericError`),mdx("td",_extends({parentName:"tr"},{"align":null}),mdx("a",_extends({parentName:"td"},{"href":"#schemagenericerror"}),`genericError`))))),mdx("h5",{"id":"examples-7"},`Examples`),mdx("h6",{"id":"500-response"},`500 response`),mdx("pre",null,mdx("code",_extends({parentName:"pre"},{"className":"language-json"}),`{
  "error": {
    "code": 404,
    "debug": "The database adapter was unable to find the element",
    "details": [
      {
        "property1": {},
        "property2": {}
      }
    ],
    "message": "string",
    "reason": "string",
    "request": "string",
    "status": "string"
  }
}
`)),mdx("aside",{class:"success"},"This operation does not require authentication"),mdx("h4",{"id":"code-samples-7"},`Code samples`),mdx("div",{class:"tabs",id:"tab-initializeSelfServiceBrowserLoginFlow"},mdx("nav",{class:"tabs-nav"},mdx("ul",{class:"nav nav-tabs au-link-list au-link-list--inline"},mdx("li",{class:"nav-item"},mdx("a",{class:"nav-link active",role:"tab",href:"#tab-initializeSelfServiceBrowserLoginFlow-shell"},"Shell")),mdx("li",{class:"nav-item"},mdx("a",{class:"nav-link",role:"tab",href:"#tab-initializeSelfServiceBrowserLoginFlow-go"},"Go")),mdx("li",{class:"nav-item"},mdx("a",{class:"nav-link",role:"tab",href:"#tab-initializeSelfServiceBrowserLoginFlow-node"},"Node.js")),mdx("li",{class:"nav-item"},mdx("a",{class:"nav-link",role:"tab",href:"#tab-initializeSelfServiceBrowserLoginFlow-java"},"Java")),mdx("li",{class:"nav-item"},mdx("a",{class:"nav-link",role:"tab",href:"#tab-initializeSelfServiceBrowserLoginFlow-python"},"Python")),mdx("li",{class:"nav-item"},mdx("a",{class:"nav-link",role:"tab",href:"#tab-initializeSelfServiceBrowserLoginFlow-ruby"},"Ruby")))),mdx("div",{class:"tab-content"},mdx("div",{class:"tab-pane active",role:"tabpanel",id:"tab-initializeSelfServiceBrowserLoginFlow-shell"},mdx("pre",null,mdx("code",_extends({parentName:"pre"},{"className":"language-shell"}),`curl -X GET /self-service/browser/flows/login \\
  -H 'Accept: application/json'
`))),mdx("div",{class:"tab-pane",role:"tabpanel",id:"tab-initializeSelfServiceBrowserLoginFlow-go"},mdx("pre",null,mdx("code",_extends({parentName:"pre"},{"className":"language-go"}),`package main

import (
    "bytes"
    "net/http"
)

func main() {
    headers := map[string][]string{
        "Accept": []string{"application/json"},
    }

    var body []byte
    // body = ...

    req, err := http.NewRequest("GET", "/self-service/browser/flows/login", bytes.NewBuffer(body))
    req.Header = headers

    client := &http.Client{}
    resp, err := client.Do(req)
    // ...
}
`))),mdx("div",{class:"tab-pane",role:"tabpanel",id:"tab-initializeSelfServiceBrowserLoginFlow-node"},mdx("pre",null,mdx("code",_extends({parentName:"pre"},{"className":"language-nodejs"}),`const fetch = require('node-fetch');

const headers = {
  'Accept': 'application/json'
}

fetch('/self-service/browser/flows/login', {
  method: 'GET',
  headers
})
.then(r => r.json())
.then((body) => {
    console.log(body)
})
`))),mdx("div",{class:"tab-pane",role:"tabpanel",id:"tab-initializeSelfServiceBrowserLoginFlow-java"},mdx("pre",null,mdx("code",_extends({parentName:"pre"},{"className":"language-java"}),`// This sample needs improvement.
URL obj = new URL("/self-service/browser/flows/login");

HttpURLConnection con = (HttpURLConnection) obj.openConnection();
con.setRequestMethod("GET");

int responseCode = con.getResponseCode();

BufferedReader in = new BufferedReader(
    new InputStreamReader(con.getInputStream())
);

String inputLine;
StringBuffer response = new StringBuffer();
while ((inputLine = in.readLine()) != null) {
    response.append(inputLine);
}
in.close();

System.out.println(response.toString());
`))),mdx("div",{class:"tab-pane",role:"tabpanel",id:"tab-initializeSelfServiceBrowserLoginFlow-python"},mdx("pre",null,mdx("code",_extends({parentName:"pre"},{"className":"language-python"}),`import requests

headers = {
  'Accept': 'application/json'
}

r = requests.get(
  '/self-service/browser/flows/login',
  params={},
  headers = headers)

print r.json()
`))),mdx("div",{class:"tab-pane",role:"tabpanel",id:"tab-initializeSelfServiceBrowserLoginFlow-ruby"},mdx("pre",null,mdx("code",_extends({parentName:"pre"},{"className":"language-ruby"}),`require 'rest-client'
require 'json'

headers = {
  'Accept' => 'application/json'
}

result = RestClient.get '/self-service/browser/flows/login',
  params: {}, headers: headers

p JSON.parse(result)
`))))),mdx("a",{id:"opIdinitializeSelfServiceBrowserLogoutFlow"}),mdx("h3",{"id":"initialize-browser-based-logout-user-flow"},`Initialize Browser-Based Logout User Flow`),mdx("pre",null,mdx("code",_extends({parentName:"pre"},{}),`GET /self-service/browser/flows/logout HTTP/1.1
Accept: application/json

`)),mdx("p",null,`This endpoint initializes a logout flow.`),mdx("blockquote",null,mdx("p",{parentName:"blockquote"},`This endpoint is NOT INTENDED for API clients and only works with browsers
(Chrome, Firefox, ...).`)),mdx("p",null,`On successful logout, the browser will be redirected (HTTP 302 Found) to
`,mdx("inlineCode",{parentName:"p"},`urls.default_return_to`),`.`),mdx("p",null,`More information can be found at
`,mdx("a",_extends({parentName:"p"},{"href":"https://www.ory.sh/docs/next/kratos/self-service/flows/user-logout"}),`ORY Kratos User Logout Documentation`),`.`),mdx("h4",{"id":"responses-8"},`Responses`),mdx("a",{id:"initialize-browser-based-logout-user-flow-responses"}),mdx("h5",{"id":"overview-8"},`Overview`),mdx("table",null,mdx("thead",{parentName:"table"},mdx("tr",{parentName:"thead"},mdx("th",_extends({parentName:"tr"},{"align":null}),`Status`),mdx("th",_extends({parentName:"tr"},{"align":null}),`Meaning`),mdx("th",_extends({parentName:"tr"},{"align":null}),`Description`),mdx("th",_extends({parentName:"tr"},{"align":null}),`Schema`))),mdx("tbody",{parentName:"table"},mdx("tr",{parentName:"tbody"},mdx("td",_extends({parentName:"tr"},{"align":null}),`302`),mdx("td",_extends({parentName:"tr"},{"align":null}),mdx("a",_extends({parentName:"td"},{"href":"https://tools.ietf.org/html/rfc7231#section-6.4.3"}),`Found`)),mdx("td",_extends({parentName:"tr"},{"align":null}),`Empty responses are sent when, for example, resources are deleted. The HTTP status code for empty responses is`),mdx("td",_extends({parentName:"tr"},{"align":null}))),mdx("tr",{parentName:"tbody"},mdx("td",_extends({parentName:"tr"},{"align":null}),`typically 201.`),mdx("td",_extends({parentName:"tr"},{"align":null}),`None`),mdx("td",_extends({parentName:"tr"},{"align":null})),mdx("td",_extends({parentName:"tr"},{"align":null}))),mdx("tr",{parentName:"tbody"},mdx("td",_extends({parentName:"tr"},{"align":null}),`500`),mdx("td",_extends({parentName:"tr"},{"align":null}),mdx("a",_extends({parentName:"td"},{"href":"https://tools.ietf.org/html/rfc7231#section-6.6.1"}),`Internal Server Error`)),mdx("td",_extends({parentName:"tr"},{"align":null}),`genericError`),mdx("td",_extends({parentName:"tr"},{"align":null}),mdx("a",_extends({parentName:"td"},{"href":"#schemagenericerror"}),`genericError`))))),mdx("h5",{"id":"examples-8"},`Examples`),mdx("h6",{"id":"500-response-1"},`500 response`),mdx("pre",null,mdx("code",_extends({parentName:"pre"},{"className":"language-json"}),`{
  "error": {
    "code": 404,
    "debug": "The database adapter was unable to find the element",
    "details": [
      {
        "property1": {},
        "property2": {}
      }
    ],
    "message": "string",
    "reason": "string",
    "request": "string",
    "status": "string"
  }
}
`)),mdx("aside",{class:"success"},"This operation does not require authentication"),mdx("h4",{"id":"code-samples-8"},`Code samples`),mdx("div",{class:"tabs",id:"tab-initializeSelfServiceBrowserLogoutFlow"},mdx("nav",{class:"tabs-nav"},mdx("ul",{class:"nav nav-tabs au-link-list au-link-list--inline"},mdx("li",{class:"nav-item"},mdx("a",{class:"nav-link active",role:"tab",href:"#tab-initializeSelfServiceBrowserLogoutFlow-shell"},"Shell")),mdx("li",{class:"nav-item"},mdx("a",{class:"nav-link",role:"tab",href:"#tab-initializeSelfServiceBrowserLogoutFlow-go"},"Go")),mdx("li",{class:"nav-item"},mdx("a",{class:"nav-link",role:"tab",href:"#tab-initializeSelfServiceBrowserLogoutFlow-node"},"Node.js")),mdx("li",{class:"nav-item"},mdx("a",{class:"nav-link",role:"tab",href:"#tab-initializeSelfServiceBrowserLogoutFlow-java"},"Java")),mdx("li",{class:"nav-item"},mdx("a",{class:"nav-link",role:"tab",href:"#tab-initializeSelfServiceBrowserLogoutFlow-python"},"Python")),mdx("li",{class:"nav-item"},mdx("a",{class:"nav-link",role:"tab",href:"#tab-initializeSelfServiceBrowserLogoutFlow-ruby"},"Ruby")))),mdx("div",{class:"tab-content"},mdx("div",{class:"tab-pane active",role:"tabpanel",id:"tab-initializeSelfServiceBrowserLogoutFlow-shell"},mdx("pre",null,mdx("code",_extends({parentName:"pre"},{"className":"language-shell"}),`curl -X GET /self-service/browser/flows/logout \\
  -H 'Accept: application/json'
`))),mdx("div",{class:"tab-pane",role:"tabpanel",id:"tab-initializeSelfServiceBrowserLogoutFlow-go"},mdx("pre",null,mdx("code",_extends({parentName:"pre"},{"className":"language-go"}),`package main

import (
    "bytes"
    "net/http"
)

func main() {
    headers := map[string][]string{
        "Accept": []string{"application/json"},
    }

    var body []byte
    // body = ...

    req, err := http.NewRequest("GET", "/self-service/browser/flows/logout", bytes.NewBuffer(body))
    req.Header = headers

    client := &http.Client{}
    resp, err := client.Do(req)
    // ...
}
`))),mdx("div",{class:"tab-pane",role:"tabpanel",id:"tab-initializeSelfServiceBrowserLogoutFlow-node"},mdx("pre",null,mdx("code",_extends({parentName:"pre"},{"className":"language-nodejs"}),`const fetch = require('node-fetch');

const headers = {
  'Accept': 'application/json'
}

fetch('/self-service/browser/flows/logout', {
  method: 'GET',
  headers
})
.then(r => r.json())
.then((body) => {
    console.log(body)
})
`))),mdx("div",{class:"tab-pane",role:"tabpanel",id:"tab-initializeSelfServiceBrowserLogoutFlow-java"},mdx("pre",null,mdx("code",_extends({parentName:"pre"},{"className":"language-java"}),`// This sample needs improvement.
URL obj = new URL("/self-service/browser/flows/logout");

HttpURLConnection con = (HttpURLConnection) obj.openConnection();
con.setRequestMethod("GET");

int responseCode = con.getResponseCode();

BufferedReader in = new BufferedReader(
    new InputStreamReader(con.getInputStream())
);

String inputLine;
StringBuffer response = new StringBuffer();
while ((inputLine = in.readLine()) != null) {
    response.append(inputLine);
}
in.close();

System.out.println(response.toString());
`))),mdx("div",{class:"tab-pane",role:"tabpanel",id:"tab-initializeSelfServiceBrowserLogoutFlow-python"},mdx("pre",null,mdx("code",_extends({parentName:"pre"},{"className":"language-python"}),`import requests

headers = {
  'Accept': 'application/json'
}

r = requests.get(
  '/self-service/browser/flows/logout',
  params={},
  headers = headers)

print r.json()
`))),mdx("div",{class:"tab-pane",role:"tabpanel",id:"tab-initializeSelfServiceBrowserLogoutFlow-ruby"},mdx("pre",null,mdx("code",_extends({parentName:"pre"},{"className":"language-ruby"}),`require 'rest-client'
require 'json'

headers = {
  'Accept' => 'application/json'
}

result = RestClient.get '/self-service/browser/flows/logout',
  params: {}, headers: headers

p JSON.parse(result)
`))))),mdx("a",{id:"opIdinitializeSelfServiceProfileManagementFlow"}),mdx("h3",{"id":"initialize-browser-based-profile-management-flow"},`Initialize browser-based profile management flow`),mdx("pre",null,mdx("code",_extends({parentName:"pre"},{}),`GET /self-service/browser/flows/profile HTTP/1.1
Accept: application/json

`)),mdx("p",null,`This endpoint initializes a browser-based profile management flow. Once
initialized, the browser will be redirected to `,mdx("inlineCode",{parentName:"p"},`urls.profile_ui`),` with the
request ID set as a query parameter. If no valid user session exists, a login
flow will be initialized.`),mdx("blockquote",null,mdx("p",{parentName:"blockquote"},`This endpoint is NOT INTENDED for API clients and only works with browsers
(Chrome, Firefox, ...).`)),mdx("p",null,`More information can be found at
`,mdx("a",_extends({parentName:"p"},{"href":"https://www.ory.sh/docs/next/kratos/self-service/flows/user-profile-management"}),`ORY Kratos Profile Management Documentation`),`.`),mdx("h4",{"id":"responses-9"},`Responses`),mdx("a",{id:"initialize-browser-based-profile-management-flow-responses"}),mdx("h5",{"id":"overview-9"},`Overview`),mdx("table",null,mdx("thead",{parentName:"table"},mdx("tr",{parentName:"thead"},mdx("th",_extends({parentName:"tr"},{"align":null}),`Status`),mdx("th",_extends({parentName:"tr"},{"align":null}),`Meaning`),mdx("th",_extends({parentName:"tr"},{"align":null}),`Description`),mdx("th",_extends({parentName:"tr"},{"align":null}),`Schema`))),mdx("tbody",{parentName:"table"},mdx("tr",{parentName:"tbody"},mdx("td",_extends({parentName:"tr"},{"align":null}),`302`),mdx("td",_extends({parentName:"tr"},{"align":null}),mdx("a",_extends({parentName:"td"},{"href":"https://tools.ietf.org/html/rfc7231#section-6.4.3"}),`Found`)),mdx("td",_extends({parentName:"tr"},{"align":null}),`Empty responses are sent when, for example, resources are deleted. The HTTP status code for empty responses is`),mdx("td",_extends({parentName:"tr"},{"align":null}))),mdx("tr",{parentName:"tbody"},mdx("td",_extends({parentName:"tr"},{"align":null}),`typically 201.`),mdx("td",_extends({parentName:"tr"},{"align":null}),`None`),mdx("td",_extends({parentName:"tr"},{"align":null})),mdx("td",_extends({parentName:"tr"},{"align":null}))),mdx("tr",{parentName:"tbody"},mdx("td",_extends({parentName:"tr"},{"align":null}),`500`),mdx("td",_extends({parentName:"tr"},{"align":null}),mdx("a",_extends({parentName:"td"},{"href":"https://tools.ietf.org/html/rfc7231#section-6.6.1"}),`Internal Server Error`)),mdx("td",_extends({parentName:"tr"},{"align":null}),`genericError`),mdx("td",_extends({parentName:"tr"},{"align":null}),mdx("a",_extends({parentName:"td"},{"href":"#schemagenericerror"}),`genericError`))))),mdx("h5",{"id":"examples-9"},`Examples`),mdx("h6",{"id":"500-response-2"},`500 response`),mdx("pre",null,mdx("code",_extends({parentName:"pre"},{"className":"language-json"}),`{
  "error": {
    "code": 404,
    "debug": "The database adapter was unable to find the element",
    "details": [
      {
        "property1": {},
        "property2": {}
      }
    ],
    "message": "string",
    "reason": "string",
    "request": "string",
    "status": "string"
  }
}
`)),mdx("aside",{class:"success"},"This operation does not require authentication"),mdx("h4",{"id":"code-samples-9"},`Code samples`),mdx("div",{class:"tabs",id:"tab-initializeSelfServiceProfileManagementFlow"},mdx("nav",{class:"tabs-nav"},mdx("ul",{class:"nav nav-tabs au-link-list au-link-list--inline"},mdx("li",{class:"nav-item"},mdx("a",{class:"nav-link active",role:"tab",href:"#tab-initializeSelfServiceProfileManagementFlow-shell"},"Shell")),mdx("li",{class:"nav-item"},mdx("a",{class:"nav-link",role:"tab",href:"#tab-initializeSelfServiceProfileManagementFlow-go"},"Go")),mdx("li",{class:"nav-item"},mdx("a",{class:"nav-link",role:"tab",href:"#tab-initializeSelfServiceProfileManagementFlow-node"},"Node.js")),mdx("li",{class:"nav-item"},mdx("a",{class:"nav-link",role:"tab",href:"#tab-initializeSelfServiceProfileManagementFlow-java"},"Java")),mdx("li",{class:"nav-item"},mdx("a",{class:"nav-link",role:"tab",href:"#tab-initializeSelfServiceProfileManagementFlow-python"},"Python")),mdx("li",{class:"nav-item"},mdx("a",{class:"nav-link",role:"tab",href:"#tab-initializeSelfServiceProfileManagementFlow-ruby"},"Ruby")))),mdx("div",{class:"tab-content"},mdx("div",{class:"tab-pane active",role:"tabpanel",id:"tab-initializeSelfServiceProfileManagementFlow-shell"},mdx("pre",null,mdx("code",_extends({parentName:"pre"},{"className":"language-shell"}),`curl -X GET /self-service/browser/flows/profile \\
  -H 'Accept: application/json'
`))),mdx("div",{class:"tab-pane",role:"tabpanel",id:"tab-initializeSelfServiceProfileManagementFlow-go"},mdx("pre",null,mdx("code",_extends({parentName:"pre"},{"className":"language-go"}),`package main

import (
    "bytes"
    "net/http"
)

func main() {
    headers := map[string][]string{
        "Accept": []string{"application/json"},
    }

    var body []byte
    // body = ...

    req, err := http.NewRequest("GET", "/self-service/browser/flows/profile", bytes.NewBuffer(body))
    req.Header = headers

    client := &http.Client{}
    resp, err := client.Do(req)
    // ...
}
`))),mdx("div",{class:"tab-pane",role:"tabpanel",id:"tab-initializeSelfServiceProfileManagementFlow-node"},mdx("pre",null,mdx("code",_extends({parentName:"pre"},{"className":"language-nodejs"}),`const fetch = require('node-fetch');

const headers = {
  'Accept': 'application/json'
}

fetch('/self-service/browser/flows/profile', {
  method: 'GET',
  headers
})
.then(r => r.json())
.then((body) => {
    console.log(body)
})
`))),mdx("div",{class:"tab-pane",role:"tabpanel",id:"tab-initializeSelfServiceProfileManagementFlow-java"},mdx("pre",null,mdx("code",_extends({parentName:"pre"},{"className":"language-java"}),`// This sample needs improvement.
URL obj = new URL("/self-service/browser/flows/profile");

HttpURLConnection con = (HttpURLConnection) obj.openConnection();
con.setRequestMethod("GET");

int responseCode = con.getResponseCode();

BufferedReader in = new BufferedReader(
    new InputStreamReader(con.getInputStream())
);

String inputLine;
StringBuffer response = new StringBuffer();
while ((inputLine = in.readLine()) != null) {
    response.append(inputLine);
}
in.close();

System.out.println(response.toString());
`))),mdx("div",{class:"tab-pane",role:"tabpanel",id:"tab-initializeSelfServiceProfileManagementFlow-python"},mdx("pre",null,mdx("code",_extends({parentName:"pre"},{"className":"language-python"}),`import requests

headers = {
  'Accept': 'application/json'
}

r = requests.get(
  '/self-service/browser/flows/profile',
  params={},
  headers = headers)

print r.json()
`))),mdx("div",{class:"tab-pane",role:"tabpanel",id:"tab-initializeSelfServiceProfileManagementFlow-ruby"},mdx("pre",null,mdx("code",_extends({parentName:"pre"},{"className":"language-ruby"}),`require 'rest-client'
require 'json'

headers = {
  'Accept' => 'application/json'
}

result = RestClient.get '/self-service/browser/flows/profile',
  params: {}, headers: headers

p JSON.parse(result)
`))))),mdx("a",{id:"opIdcompleteSelfServiceBrowserVerificationFlow"}),mdx("h3",{"id":"complete-the-browser-based-profile-management-flows"},`Complete the browser-based profile management flows`),mdx("pre",null,mdx("code",_extends({parentName:"pre"},{}),`POST /self-service/browser/flows/verification/{via}/complete?request=string HTTP/1.1
Accept: application/json

`)),mdx("p",null,`This endpoint completes a browser-based profile management flow. This is usually
achieved by POSTing data to this endpoint.`),mdx("p",null,`If the provided profile data is valid against the Identity's Traits JSON Schema,
the data will be updated and the browser redirected to `,mdx("inlineCode",{parentName:"p"},`url.profile_ui`),` for
further steps.`),mdx("blockquote",null,mdx("p",{parentName:"blockquote"},`This endpoint is NOT INTENDED for API clients and only works with browsers
(Chrome, Firefox, ...) and HTML Forms.`)),mdx("p",null,`More information can be found at
`,mdx("a",_extends({parentName:"p"},{"href":"https://www.ory.sh/docs/kratos/selfservice/flows/verify-email-account-activation"}),`ORY Kratos Email and Phone Verification Documentation`),`.`),mdx("a",{id:"complete-the-browser-based-profile-management-flows-parameters"}),mdx("h5",{"id":"parameters-4"},`Parameters`),mdx("table",null,mdx("thead",{parentName:"table"},mdx("tr",{parentName:"thead"},mdx("th",_extends({parentName:"tr"},{"align":null}),`Parameter`),mdx("th",_extends({parentName:"tr"},{"align":null}),`In`),mdx("th",_extends({parentName:"tr"},{"align":null}),`Type`),mdx("th",_extends({parentName:"tr"},{"align":null}),`Required`),mdx("th",_extends({parentName:"tr"},{"align":null}),`Description`))),mdx("tbody",{parentName:"table"},mdx("tr",{parentName:"tbody"},mdx("td",_extends({parentName:"tr"},{"align":null}),`request`),mdx("td",_extends({parentName:"tr"},{"align":null}),`query`),mdx("td",_extends({parentName:"tr"},{"align":null}),`string`),mdx("td",_extends({parentName:"tr"},{"align":null}),`true`),mdx("td",_extends({parentName:"tr"},{"align":null}),`Request is the Request ID`)),mdx("tr",{parentName:"tbody"},mdx("td",_extends({parentName:"tr"},{"align":null}),`via`),mdx("td",_extends({parentName:"tr"},{"align":null}),`path`),mdx("td",_extends({parentName:"tr"},{"align":null}),`string`),mdx("td",_extends({parentName:"tr"},{"align":null}),`true`),mdx("td",_extends({parentName:"tr"},{"align":null}),`What to verify`)))),mdx("h5",{"id":"detailed-descriptions"},`Detailed descriptions`),mdx("p",null,mdx("strong",{parentName:"p"},`request`),`: Request is the Request ID`),mdx("p",null,`The value for this parameter comes from `,mdx("inlineCode",{parentName:"p"},`request`),` URL Query parameter sent to
your application (e.g. `,mdx("inlineCode",{parentName:"p"},`/verify?request=abcde`),`).`),mdx("p",null,mdx("strong",{parentName:"p"},`via`),`: What to verify`),mdx("p",null,`Currently only "email" is supported.`),mdx("h4",{"id":"responses-10"},`Responses`),mdx("a",{id:"complete-the-browser-based-profile-management-flows-responses"}),mdx("h5",{"id":"overview-10"},`Overview`),mdx("table",null,mdx("thead",{parentName:"table"},mdx("tr",{parentName:"thead"},mdx("th",_extends({parentName:"tr"},{"align":null}),`Status`),mdx("th",_extends({parentName:"tr"},{"align":null}),`Meaning`),mdx("th",_extends({parentName:"tr"},{"align":null}),`Description`),mdx("th",_extends({parentName:"tr"},{"align":null}),`Schema`))),mdx("tbody",{parentName:"table"},mdx("tr",{parentName:"tbody"},mdx("td",_extends({parentName:"tr"},{"align":null}),`302`),mdx("td",_extends({parentName:"tr"},{"align":null}),mdx("a",_extends({parentName:"td"},{"href":"https://tools.ietf.org/html/rfc7231#section-6.4.3"}),`Found`)),mdx("td",_extends({parentName:"tr"},{"align":null}),`Empty responses are sent when, for example, resources are deleted. The HTTP status code for empty responses is`),mdx("td",_extends({parentName:"tr"},{"align":null}))),mdx("tr",{parentName:"tbody"},mdx("td",_extends({parentName:"tr"},{"align":null}),`typically 201.`),mdx("td",_extends({parentName:"tr"},{"align":null}),`None`),mdx("td",_extends({parentName:"tr"},{"align":null})),mdx("td",_extends({parentName:"tr"},{"align":null}))),mdx("tr",{parentName:"tbody"},mdx("td",_extends({parentName:"tr"},{"align":null}),`500`),mdx("td",_extends({parentName:"tr"},{"align":null}),mdx("a",_extends({parentName:"td"},{"href":"https://tools.ietf.org/html/rfc7231#section-6.6.1"}),`Internal Server Error`)),mdx("td",_extends({parentName:"tr"},{"align":null}),`genericError`),mdx("td",_extends({parentName:"tr"},{"align":null}),mdx("a",_extends({parentName:"td"},{"href":"#schemagenericerror"}),`genericError`))))),mdx("h5",{"id":"examples-10"},`Examples`),mdx("h6",{"id":"500-response-3"},`500 response`),mdx("pre",null,mdx("code",_extends({parentName:"pre"},{"className":"language-json"}),`{
  "error": {
    "code": 404,
    "debug": "The database adapter was unable to find the element",
    "details": [
      {
        "property1": {},
        "property2": {}
      }
    ],
    "message": "string",
    "reason": "string",
    "request": "string",
    "status": "string"
  }
}
`)),mdx("aside",{class:"success"},"This operation does not require authentication"),mdx("h4",{"id":"code-samples-10"},`Code samples`),mdx("div",{class:"tabs",id:"tab-completeSelfServiceBrowserVerificationFlow"},mdx("nav",{class:"tabs-nav"},mdx("ul",{class:"nav nav-tabs au-link-list au-link-list--inline"},mdx("li",{class:"nav-item"},mdx("a",{class:"nav-link active",role:"tab",href:"#tab-completeSelfServiceBrowserVerificationFlow-shell"},"Shell")),mdx("li",{class:"nav-item"},mdx("a",{class:"nav-link",role:"tab",href:"#tab-completeSelfServiceBrowserVerificationFlow-go"},"Go")),mdx("li",{class:"nav-item"},mdx("a",{class:"nav-link",role:"tab",href:"#tab-completeSelfServiceBrowserVerificationFlow-node"},"Node.js")),mdx("li",{class:"nav-item"},mdx("a",{class:"nav-link",role:"tab",href:"#tab-completeSelfServiceBrowserVerificationFlow-java"},"Java")),mdx("li",{class:"nav-item"},mdx("a",{class:"nav-link",role:"tab",href:"#tab-completeSelfServiceBrowserVerificationFlow-python"},"Python")),mdx("li",{class:"nav-item"},mdx("a",{class:"nav-link",role:"tab",href:"#tab-completeSelfServiceBrowserVerificationFlow-ruby"},"Ruby")))),mdx("div",{class:"tab-content"},mdx("div",{class:"tab-pane active",role:"tabpanel",id:"tab-completeSelfServiceBrowserVerificationFlow-shell"},mdx("pre",null,mdx("code",_extends({parentName:"pre"},{"className":"language-shell"}),`curl -X POST /self-service/browser/flows/verification/{via}/complete?request=string \\
  -H 'Accept: application/json'
`))),mdx("div",{class:"tab-pane",role:"tabpanel",id:"tab-completeSelfServiceBrowserVerificationFlow-go"},mdx("pre",null,mdx("code",_extends({parentName:"pre"},{"className":"language-go"}),`package main

import (
    "bytes"
    "net/http"
)

func main() {
    headers := map[string][]string{
        "Accept": []string{"application/json"},
    }

    var body []byte
    // body = ...

    req, err := http.NewRequest("POST", "/self-service/browser/flows/verification/{via}/complete", bytes.NewBuffer(body))
    req.Header = headers

    client := &http.Client{}
    resp, err := client.Do(req)
    // ...
}
`))),mdx("div",{class:"tab-pane",role:"tabpanel",id:"tab-completeSelfServiceBrowserVerificationFlow-node"},mdx("pre",null,mdx("code",_extends({parentName:"pre"},{"className":"language-nodejs"}),`const fetch = require('node-fetch');

const headers = {
  'Accept': 'application/json'
}

fetch('/self-service/browser/flows/verification/{via}/complete?request=string', {
  method: 'POST',
  headers
})
.then(r => r.json())
.then((body) => {
    console.log(body)
})
`))),mdx("div",{class:"tab-pane",role:"tabpanel",id:"tab-completeSelfServiceBrowserVerificationFlow-java"},mdx("pre",null,mdx("code",_extends({parentName:"pre"},{"className":"language-java"}),`// This sample needs improvement.
URL obj = new URL("/self-service/browser/flows/verification/{via}/complete?request=string");

HttpURLConnection con = (HttpURLConnection) obj.openConnection();
con.setRequestMethod("POST");

int responseCode = con.getResponseCode();

BufferedReader in = new BufferedReader(
    new InputStreamReader(con.getInputStream())
);

String inputLine;
StringBuffer response = new StringBuffer();
while ((inputLine = in.readLine()) != null) {
    response.append(inputLine);
}
in.close();

System.out.println(response.toString());
`))),mdx("div",{class:"tab-pane",role:"tabpanel",id:"tab-completeSelfServiceBrowserVerificationFlow-python"},mdx("pre",null,mdx("code",_extends({parentName:"pre"},{"className":"language-python"}),`import requests

headers = {
  'Accept': 'application/json'
}

r = requests.post(
  '/self-service/browser/flows/verification/{via}/complete',
  params={
    'request': 'string'},
  headers = headers)

print r.json()
`))),mdx("div",{class:"tab-pane",role:"tabpanel",id:"tab-completeSelfServiceBrowserVerificationFlow-ruby"},mdx("pre",null,mdx("code",_extends({parentName:"pre"},{"className":"language-ruby"}),`require 'rest-client'
require 'json'

headers = {
  'Accept' => 'application/json'
}

result = RestClient.post '/self-service/browser/flows/verification/{via}/complete',
  params: {
    'request' => 'string'}, headers: headers

p JSON.parse(result)
`))))),mdx("a",{id:"opIdinitializeSelfServiceBrowserRegistrationFlow"}),mdx("h3",{"id":"initialize-browser-based-registration-user-flow"},`Initialize browser-based registration user flow`),mdx("pre",null,mdx("code",_extends({parentName:"pre"},{}),`GET /self-service/browser/flows/registration HTTP/1.1
Accept: application/json

`)),mdx("p",null,`This endpoint initializes a browser-based user registration flow. Once
initialized, the browser will be redirected to `,mdx("inlineCode",{parentName:"p"},`urls.registration_ui`),` with the
request ID set as a query parameter. If a valid user session exists already, the
browser will be redirected to `,mdx("inlineCode",{parentName:"p"},`urls.default_redirect_url`),`.`),mdx("blockquote",null,mdx("p",{parentName:"blockquote"},`This endpoint is NOT INTENDED for API clients and only works with browsers
(Chrome, Firefox, ...).`)),mdx("p",null,`More information can be found at
`,mdx("a",_extends({parentName:"p"},{"href":"https://www.ory.sh/docs/next/kratos/self-service/flows/user-login-user-registration"}),`ORY Kratos User Login and User Registration Documentation`),`.`),mdx("h4",{"id":"responses-11"},`Responses`),mdx("a",{id:"initialize-browser-based-registration-user-flow-responses"}),mdx("h5",{"id":"overview-11"},`Overview`),mdx("table",null,mdx("thead",{parentName:"table"},mdx("tr",{parentName:"thead"},mdx("th",_extends({parentName:"tr"},{"align":null}),`Status`),mdx("th",_extends({parentName:"tr"},{"align":null}),`Meaning`),mdx("th",_extends({parentName:"tr"},{"align":null}),`Description`),mdx("th",_extends({parentName:"tr"},{"align":null}),`Schema`))),mdx("tbody",{parentName:"table"},mdx("tr",{parentName:"tbody"},mdx("td",_extends({parentName:"tr"},{"align":null}),`302`),mdx("td",_extends({parentName:"tr"},{"align":null}),mdx("a",_extends({parentName:"td"},{"href":"https://tools.ietf.org/html/rfc7231#section-6.4.3"}),`Found`)),mdx("td",_extends({parentName:"tr"},{"align":null}),`Empty responses are sent when, for example, resources are deleted. The HTTP status code for empty responses is`),mdx("td",_extends({parentName:"tr"},{"align":null}))),mdx("tr",{parentName:"tbody"},mdx("td",_extends({parentName:"tr"},{"align":null}),`typically 201.`),mdx("td",_extends({parentName:"tr"},{"align":null}),`None`),mdx("td",_extends({parentName:"tr"},{"align":null})),mdx("td",_extends({parentName:"tr"},{"align":null}))),mdx("tr",{parentName:"tbody"},mdx("td",_extends({parentName:"tr"},{"align":null}),`500`),mdx("td",_extends({parentName:"tr"},{"align":null}),mdx("a",_extends({parentName:"td"},{"href":"https://tools.ietf.org/html/rfc7231#section-6.6.1"}),`Internal Server Error`)),mdx("td",_extends({parentName:"tr"},{"align":null}),`genericError`),mdx("td",_extends({parentName:"tr"},{"align":null}),mdx("a",_extends({parentName:"td"},{"href":"#schemagenericerror"}),`genericError`))))),mdx("h5",{"id":"examples-11"},`Examples`),mdx("h6",{"id":"500-response-4"},`500 response`),mdx("pre",null,mdx("code",_extends({parentName:"pre"},{"className":"language-json"}),`{
  "error": {
    "code": 404,
    "debug": "The database adapter was unable to find the element",
    "details": [
      {
        "property1": {},
        "property2": {}
      }
    ],
    "message": "string",
    "reason": "string",
    "request": "string",
    "status": "string"
  }
}
`)),mdx("aside",{class:"success"},"This operation does not require authentication"),mdx("h4",{"id":"code-samples-11"},`Code samples`),mdx("div",{class:"tabs",id:"tab-initializeSelfServiceBrowserRegistrationFlow"},mdx("nav",{class:"tabs-nav"},mdx("ul",{class:"nav nav-tabs au-link-list au-link-list--inline"},mdx("li",{class:"nav-item"},mdx("a",{class:"nav-link active",role:"tab",href:"#tab-initializeSelfServiceBrowserRegistrationFlow-shell"},"Shell")),mdx("li",{class:"nav-item"},mdx("a",{class:"nav-link",role:"tab",href:"#tab-initializeSelfServiceBrowserRegistrationFlow-go"},"Go")),mdx("li",{class:"nav-item"},mdx("a",{class:"nav-link",role:"tab",href:"#tab-initializeSelfServiceBrowserRegistrationFlow-node"},"Node.js")),mdx("li",{class:"nav-item"},mdx("a",{class:"nav-link",role:"tab",href:"#tab-initializeSelfServiceBrowserRegistrationFlow-java"},"Java")),mdx("li",{class:"nav-item"},mdx("a",{class:"nav-link",role:"tab",href:"#tab-initializeSelfServiceBrowserRegistrationFlow-python"},"Python")),mdx("li",{class:"nav-item"},mdx("a",{class:"nav-link",role:"tab",href:"#tab-initializeSelfServiceBrowserRegistrationFlow-ruby"},"Ruby")))),mdx("div",{class:"tab-content"},mdx("div",{class:"tab-pane active",role:"tabpanel",id:"tab-initializeSelfServiceBrowserRegistrationFlow-shell"},mdx("pre",null,mdx("code",_extends({parentName:"pre"},{"className":"language-shell"}),`curl -X GET /self-service/browser/flows/registration \\
  -H 'Accept: application/json'
`))),mdx("div",{class:"tab-pane",role:"tabpanel",id:"tab-initializeSelfServiceBrowserRegistrationFlow-go"},mdx("pre",null,mdx("code",_extends({parentName:"pre"},{"className":"language-go"}),`package main

import (
    "bytes"
    "net/http"
)

func main() {
    headers := map[string][]string{
        "Accept": []string{"application/json"},
    }

    var body []byte
    // body = ...

    req, err := http.NewRequest("GET", "/self-service/browser/flows/registration", bytes.NewBuffer(body))
    req.Header = headers

    client := &http.Client{}
    resp, err := client.Do(req)
    // ...
}
`))),mdx("div",{class:"tab-pane",role:"tabpanel",id:"tab-initializeSelfServiceBrowserRegistrationFlow-node"},mdx("pre",null,mdx("code",_extends({parentName:"pre"},{"className":"language-nodejs"}),`const fetch = require('node-fetch');

const headers = {
  'Accept': 'application/json'
}

fetch('/self-service/browser/flows/registration', {
  method: 'GET',
  headers
})
.then(r => r.json())
.then((body) => {
    console.log(body)
})
`))),mdx("div",{class:"tab-pane",role:"tabpanel",id:"tab-initializeSelfServiceBrowserRegistrationFlow-java"},mdx("pre",null,mdx("code",_extends({parentName:"pre"},{"className":"language-java"}),`// This sample needs improvement.
URL obj = new URL("/self-service/browser/flows/registration");

HttpURLConnection con = (HttpURLConnection) obj.openConnection();
con.setRequestMethod("GET");

int responseCode = con.getResponseCode();

BufferedReader in = new BufferedReader(
    new InputStreamReader(con.getInputStream())
);

String inputLine;
StringBuffer response = new StringBuffer();
while ((inputLine = in.readLine()) != null) {
    response.append(inputLine);
}
in.close();

System.out.println(response.toString());
`))),mdx("div",{class:"tab-pane",role:"tabpanel",id:"tab-initializeSelfServiceBrowserRegistrationFlow-python"},mdx("pre",null,mdx("code",_extends({parentName:"pre"},{"className":"language-python"}),`import requests

headers = {
  'Accept': 'application/json'
}

r = requests.get(
  '/self-service/browser/flows/registration',
  params={},
  headers = headers)

print r.json()
`))),mdx("div",{class:"tab-pane",role:"tabpanel",id:"tab-initializeSelfServiceBrowserRegistrationFlow-ruby"},mdx("pre",null,mdx("code",_extends({parentName:"pre"},{"className":"language-ruby"}),`require 'rest-client'
require 'json'

headers = {
  'Accept' => 'application/json'
}

result = RestClient.get '/self-service/browser/flows/registration',
  params: {}, headers: headers

p JSON.parse(result)
`))))),mdx("a",{id:"opIdinitializeSelfServiceBrowserVerificationFlow"}),mdx("h3",{"id":"initialize-browser-based-verification-flow"},`Initialize browser-based verification flow`),mdx("pre",null,mdx("code",_extends({parentName:"pre"},{}),`GET /self-service/browser/flows/verification/init/{via} HTTP/1.1
Accept: application/json

`)),mdx("p",null,`This endpoint initializes a browser-based profile management flow. Once
initialized, the browser will be redirected to `,mdx("inlineCode",{parentName:"p"},`urls.profile_ui`),` with the
request ID set as a query parameter. If no valid user session exists, a login
flow will be initialized.`),mdx("blockquote",null,mdx("p",{parentName:"blockquote"},`This endpoint is NOT INTENDED for API clients and only works with browsers
(Chrome, Firefox, ...).`)),mdx("p",null,`More information can be found at
`,mdx("a",_extends({parentName:"p"},{"href":"https://www.ory.sh/docs/kratos/selfservice/flows/verify-email-account-activation"}),`ORY Kratos Email and Phone Verification Documentation`),`.`),mdx("a",{id:"initialize-browser-based-verification-flow-parameters"}),mdx("h5",{"id":"parameters-5"},`Parameters`),mdx("table",null,mdx("thead",{parentName:"table"},mdx("tr",{parentName:"thead"},mdx("th",_extends({parentName:"tr"},{"align":null}),`Parameter`),mdx("th",_extends({parentName:"tr"},{"align":null}),`In`),mdx("th",_extends({parentName:"tr"},{"align":null}),`Type`),mdx("th",_extends({parentName:"tr"},{"align":null}),`Required`),mdx("th",_extends({parentName:"tr"},{"align":null}),`Description`))),mdx("tbody",{parentName:"table"},mdx("tr",{parentName:"tbody"},mdx("td",_extends({parentName:"tr"},{"align":null}),`via`),mdx("td",_extends({parentName:"tr"},{"align":null}),`path`),mdx("td",_extends({parentName:"tr"},{"align":null}),`string`),mdx("td",_extends({parentName:"tr"},{"align":null}),`true`),mdx("td",_extends({parentName:"tr"},{"align":null}),`What to verify`)))),mdx("h5",{"id":"detailed-descriptions-1"},`Detailed descriptions`),mdx("p",null,mdx("strong",{parentName:"p"},`via`),`: What to verify`),mdx("p",null,`Currently only "email" is supported.`),mdx("h4",{"id":"responses-12"},`Responses`),mdx("a",{id:"initialize-browser-based-verification-flow-responses"}),mdx("h5",{"id":"overview-12"},`Overview`),mdx("table",null,mdx("thead",{parentName:"table"},mdx("tr",{parentName:"thead"},mdx("th",_extends({parentName:"tr"},{"align":null}),`Status`),mdx("th",_extends({parentName:"tr"},{"align":null}),`Meaning`),mdx("th",_extends({parentName:"tr"},{"align":null}),`Description`),mdx("th",_extends({parentName:"tr"},{"align":null}),`Schema`))),mdx("tbody",{parentName:"table"},mdx("tr",{parentName:"tbody"},mdx("td",_extends({parentName:"tr"},{"align":null}),`302`),mdx("td",_extends({parentName:"tr"},{"align":null}),mdx("a",_extends({parentName:"td"},{"href":"https://tools.ietf.org/html/rfc7231#section-6.4.3"}),`Found`)),mdx("td",_extends({parentName:"tr"},{"align":null}),`Empty responses are sent when, for example, resources are deleted. The HTTP status code for empty responses is`),mdx("td",_extends({parentName:"tr"},{"align":null}))),mdx("tr",{parentName:"tbody"},mdx("td",_extends({parentName:"tr"},{"align":null}),`typically 201.`),mdx("td",_extends({parentName:"tr"},{"align":null}),`None`),mdx("td",_extends({parentName:"tr"},{"align":null})),mdx("td",_extends({parentName:"tr"},{"align":null}))),mdx("tr",{parentName:"tbody"},mdx("td",_extends({parentName:"tr"},{"align":null}),`500`),mdx("td",_extends({parentName:"tr"},{"align":null}),mdx("a",_extends({parentName:"td"},{"href":"https://tools.ietf.org/html/rfc7231#section-6.6.1"}),`Internal Server Error`)),mdx("td",_extends({parentName:"tr"},{"align":null}),`genericError`),mdx("td",_extends({parentName:"tr"},{"align":null}),mdx("a",_extends({parentName:"td"},{"href":"#schemagenericerror"}),`genericError`))))),mdx("h5",{"id":"examples-12"},`Examples`),mdx("h6",{"id":"500-response-5"},`500 response`),mdx("pre",null,mdx("code",_extends({parentName:"pre"},{"className":"language-json"}),`{
  "error": {
    "code": 404,
    "debug": "The database adapter was unable to find the element",
    "details": [
      {
        "property1": {},
        "property2": {}
      }
    ],
    "message": "string",
    "reason": "string",
    "request": "string",
    "status": "string"
  }
}
`)),mdx("aside",{class:"success"},"This operation does not require authentication"),mdx("h4",{"id":"code-samples-12"},`Code samples`),mdx("div",{class:"tabs",id:"tab-initializeSelfServiceBrowserVerificationFlow"},mdx("nav",{class:"tabs-nav"},mdx("ul",{class:"nav nav-tabs au-link-list au-link-list--inline"},mdx("li",{class:"nav-item"},mdx("a",{class:"nav-link active",role:"tab",href:"#tab-initializeSelfServiceBrowserVerificationFlow-shell"},"Shell")),mdx("li",{class:"nav-item"},mdx("a",{class:"nav-link",role:"tab",href:"#tab-initializeSelfServiceBrowserVerificationFlow-go"},"Go")),mdx("li",{class:"nav-item"},mdx("a",{class:"nav-link",role:"tab",href:"#tab-initializeSelfServiceBrowserVerificationFlow-node"},"Node.js")),mdx("li",{class:"nav-item"},mdx("a",{class:"nav-link",role:"tab",href:"#tab-initializeSelfServiceBrowserVerificationFlow-java"},"Java")),mdx("li",{class:"nav-item"},mdx("a",{class:"nav-link",role:"tab",href:"#tab-initializeSelfServiceBrowserVerificationFlow-python"},"Python")),mdx("li",{class:"nav-item"},mdx("a",{class:"nav-link",role:"tab",href:"#tab-initializeSelfServiceBrowserVerificationFlow-ruby"},"Ruby")))),mdx("div",{class:"tab-content"},mdx("div",{class:"tab-pane active",role:"tabpanel",id:"tab-initializeSelfServiceBrowserVerificationFlow-shell"},mdx("pre",null,mdx("code",_extends({parentName:"pre"},{"className":"language-shell"}),`curl -X GET /self-service/browser/flows/verification/init/{via} \\
  -H 'Accept: application/json'
`))),mdx("div",{class:"tab-pane",role:"tabpanel",id:"tab-initializeSelfServiceBrowserVerificationFlow-go"},mdx("pre",null,mdx("code",_extends({parentName:"pre"},{"className":"language-go"}),`package main

import (
    "bytes"
    "net/http"
)

func main() {
    headers := map[string][]string{
        "Accept": []string{"application/json"},
    }

    var body []byte
    // body = ...

    req, err := http.NewRequest("GET", "/self-service/browser/flows/verification/init/{via}", bytes.NewBuffer(body))
    req.Header = headers

    client := &http.Client{}
    resp, err := client.Do(req)
    // ...
}
`))),mdx("div",{class:"tab-pane",role:"tabpanel",id:"tab-initializeSelfServiceBrowserVerificationFlow-node"},mdx("pre",null,mdx("code",_extends({parentName:"pre"},{"className":"language-nodejs"}),`const fetch = require('node-fetch');

const headers = {
  'Accept': 'application/json'
}

fetch('/self-service/browser/flows/verification/init/{via}', {
  method: 'GET',
  headers
})
.then(r => r.json())
.then((body) => {
    console.log(body)
})
`))),mdx("div",{class:"tab-pane",role:"tabpanel",id:"tab-initializeSelfServiceBrowserVerificationFlow-java"},mdx("pre",null,mdx("code",_extends({parentName:"pre"},{"className":"language-java"}),`// This sample needs improvement.
URL obj = new URL("/self-service/browser/flows/verification/init/{via}");

HttpURLConnection con = (HttpURLConnection) obj.openConnection();
con.setRequestMethod("GET");

int responseCode = con.getResponseCode();

BufferedReader in = new BufferedReader(
    new InputStreamReader(con.getInputStream())
);

String inputLine;
StringBuffer response = new StringBuffer();
while ((inputLine = in.readLine()) != null) {
    response.append(inputLine);
}
in.close();

System.out.println(response.toString());
`))),mdx("div",{class:"tab-pane",role:"tabpanel",id:"tab-initializeSelfServiceBrowserVerificationFlow-python"},mdx("pre",null,mdx("code",_extends({parentName:"pre"},{"className":"language-python"}),`import requests

headers = {
  'Accept': 'application/json'
}

r = requests.get(
  '/self-service/browser/flows/verification/init/{via}',
  params={},
  headers = headers)

print r.json()
`))),mdx("div",{class:"tab-pane",role:"tabpanel",id:"tab-initializeSelfServiceBrowserVerificationFlow-ruby"},mdx("pre",null,mdx("code",_extends({parentName:"pre"},{"className":"language-ruby"}),`require 'rest-client'
require 'json'

headers = {
  'Accept' => 'application/json'
}

result = RestClient.get '/self-service/browser/flows/verification/init/{via}',
  params: {}, headers: headers

p JSON.parse(result)
`))))),mdx("a",{id:"opIdselfServiceBrowserVerify"}),mdx("h3",{"id":"complete-the-browser-based-verification-flows"},`Complete the browser-based verification flows`),mdx("pre",null,mdx("code",_extends({parentName:"pre"},{}),`GET /self-service/browser/flows/verification/{via}/confirm/{code} HTTP/1.1
Accept: application/json

`)),mdx("p",null,`This endpoint completes a browser-based verification flow.`),mdx("blockquote",null,mdx("p",{parentName:"blockquote"},`This endpoint is NOT INTENDED for API clients and only works with browsers
(Chrome, Firefox, ...) and HTML Forms.`)),mdx("p",null,`More information can be found at
`,mdx("a",_extends({parentName:"p"},{"href":"https://www.ory.sh/docs/kratos/selfservice/flows/verify-email-account-activation"}),`ORY Kratos Email and Phone Verification Documentation`),`.`),mdx("a",{id:"complete-the-browser-based-verification-flows-parameters"}),mdx("h5",{"id":"parameters-6"},`Parameters`),mdx("table",null,mdx("thead",{parentName:"table"},mdx("tr",{parentName:"thead"},mdx("th",_extends({parentName:"tr"},{"align":null}),`Parameter`),mdx("th",_extends({parentName:"tr"},{"align":null}),`In`),mdx("th",_extends({parentName:"tr"},{"align":null}),`Type`),mdx("th",_extends({parentName:"tr"},{"align":null}),`Required`),mdx("th",_extends({parentName:"tr"},{"align":null}),`Description`))),mdx("tbody",{parentName:"table"},mdx("tr",{parentName:"tbody"},mdx("td",_extends({parentName:"tr"},{"align":null}),`code`),mdx("td",_extends({parentName:"tr"},{"align":null}),`path`),mdx("td",_extends({parentName:"tr"},{"align":null}),`string`),mdx("td",_extends({parentName:"tr"},{"align":null}),`true`),mdx("td",_extends({parentName:"tr"},{"align":null}),`none`)),mdx("tr",{parentName:"tbody"},mdx("td",_extends({parentName:"tr"},{"align":null}),`via`),mdx("td",_extends({parentName:"tr"},{"align":null}),`path`),mdx("td",_extends({parentName:"tr"},{"align":null}),`string`),mdx("td",_extends({parentName:"tr"},{"align":null}),`true`),mdx("td",_extends({parentName:"tr"},{"align":null}),`What to verify`)))),mdx("h5",{"id":"detailed-descriptions-2"},`Detailed descriptions`),mdx("p",null,mdx("strong",{parentName:"p"},`via`),`: What to verify`),mdx("p",null,`Currently only "email" is supported.`),mdx("h4",{"id":"responses-13"},`Responses`),mdx("a",{id:"complete-the-browser-based-verification-flows-responses"}),mdx("h5",{"id":"overview-13"},`Overview`),mdx("table",null,mdx("thead",{parentName:"table"},mdx("tr",{parentName:"thead"},mdx("th",_extends({parentName:"tr"},{"align":null}),`Status`),mdx("th",_extends({parentName:"tr"},{"align":null}),`Meaning`),mdx("th",_extends({parentName:"tr"},{"align":null}),`Description`),mdx("th",_extends({parentName:"tr"},{"align":null}),`Schema`))),mdx("tbody",{parentName:"table"},mdx("tr",{parentName:"tbody"},mdx("td",_extends({parentName:"tr"},{"align":null}),`302`),mdx("td",_extends({parentName:"tr"},{"align":null}),mdx("a",_extends({parentName:"td"},{"href":"https://tools.ietf.org/html/rfc7231#section-6.4.3"}),`Found`)),mdx("td",_extends({parentName:"tr"},{"align":null}),`Empty responses are sent when, for example, resources are deleted. The HTTP status code for empty responses is`),mdx("td",_extends({parentName:"tr"},{"align":null}))),mdx("tr",{parentName:"tbody"},mdx("td",_extends({parentName:"tr"},{"align":null}),`typically 201.`),mdx("td",_extends({parentName:"tr"},{"align":null}),`None`),mdx("td",_extends({parentName:"tr"},{"align":null})),mdx("td",_extends({parentName:"tr"},{"align":null}))),mdx("tr",{parentName:"tbody"},mdx("td",_extends({parentName:"tr"},{"align":null}),`500`),mdx("td",_extends({parentName:"tr"},{"align":null}),mdx("a",_extends({parentName:"td"},{"href":"https://tools.ietf.org/html/rfc7231#section-6.6.1"}),`Internal Server Error`)),mdx("td",_extends({parentName:"tr"},{"align":null}),`genericError`),mdx("td",_extends({parentName:"tr"},{"align":null}),mdx("a",_extends({parentName:"td"},{"href":"#schemagenericerror"}),`genericError`))))),mdx("h5",{"id":"examples-13"},`Examples`),mdx("h6",{"id":"500-response-6"},`500 response`),mdx("pre",null,mdx("code",_extends({parentName:"pre"},{"className":"language-json"}),`{
  "error": {
    "code": 404,
    "debug": "The database adapter was unable to find the element",
    "details": [
      {
        "property1": {},
        "property2": {}
      }
    ],
    "message": "string",
    "reason": "string",
    "request": "string",
    "status": "string"
  }
}
`)),mdx("aside",{class:"success"},"This operation does not require authentication"),mdx("h4",{"id":"code-samples-13"},`Code samples`),mdx("div",{class:"tabs",id:"tab-selfServiceBrowserVerify"},mdx("nav",{class:"tabs-nav"},mdx("ul",{class:"nav nav-tabs au-link-list au-link-list--inline"},mdx("li",{class:"nav-item"},mdx("a",{class:"nav-link active",role:"tab",href:"#tab-selfServiceBrowserVerify-shell"},"Shell")),mdx("li",{class:"nav-item"},mdx("a",{class:"nav-link",role:"tab",href:"#tab-selfServiceBrowserVerify-go"},"Go")),mdx("li",{class:"nav-item"},mdx("a",{class:"nav-link",role:"tab",href:"#tab-selfServiceBrowserVerify-node"},"Node.js")),mdx("li",{class:"nav-item"},mdx("a",{class:"nav-link",role:"tab",href:"#tab-selfServiceBrowserVerify-java"},"Java")),mdx("li",{class:"nav-item"},mdx("a",{class:"nav-link",role:"tab",href:"#tab-selfServiceBrowserVerify-python"},"Python")),mdx("li",{class:"nav-item"},mdx("a",{class:"nav-link",role:"tab",href:"#tab-selfServiceBrowserVerify-ruby"},"Ruby")))),mdx("div",{class:"tab-content"},mdx("div",{class:"tab-pane active",role:"tabpanel",id:"tab-selfServiceBrowserVerify-shell"},mdx("pre",null,mdx("code",_extends({parentName:"pre"},{"className":"language-shell"}),`curl -X GET /self-service/browser/flows/verification/{via}/confirm/{code} \\
  -H 'Accept: application/json'
`))),mdx("div",{class:"tab-pane",role:"tabpanel",id:"tab-selfServiceBrowserVerify-go"},mdx("pre",null,mdx("code",_extends({parentName:"pre"},{"className":"language-go"}),`package main

import (
    "bytes"
    "net/http"
)

func main() {
    headers := map[string][]string{
        "Accept": []string{"application/json"},
    }

    var body []byte
    // body = ...

    req, err := http.NewRequest("GET", "/self-service/browser/flows/verification/{via}/confirm/{code}", bytes.NewBuffer(body))
    req.Header = headers

    client := &http.Client{}
    resp, err := client.Do(req)
    // ...
}
`))),mdx("div",{class:"tab-pane",role:"tabpanel",id:"tab-selfServiceBrowserVerify-node"},mdx("pre",null,mdx("code",_extends({parentName:"pre"},{"className":"language-nodejs"}),`const fetch = require('node-fetch');

const headers = {
  'Accept': 'application/json'
}

fetch('/self-service/browser/flows/verification/{via}/confirm/{code}', {
  method: 'GET',
  headers
})
.then(r => r.json())
.then((body) => {
    console.log(body)
})
`))),mdx("div",{class:"tab-pane",role:"tabpanel",id:"tab-selfServiceBrowserVerify-java"},mdx("pre",null,mdx("code",_extends({parentName:"pre"},{"className":"language-java"}),`// This sample needs improvement.
URL obj = new URL("/self-service/browser/flows/verification/{via}/confirm/{code}");

HttpURLConnection con = (HttpURLConnection) obj.openConnection();
con.setRequestMethod("GET");

int responseCode = con.getResponseCode();

BufferedReader in = new BufferedReader(
    new InputStreamReader(con.getInputStream())
);

String inputLine;
StringBuffer response = new StringBuffer();
while ((inputLine = in.readLine()) != null) {
    response.append(inputLine);
}
in.close();

System.out.println(response.toString());
`))),mdx("div",{class:"tab-pane",role:"tabpanel",id:"tab-selfServiceBrowserVerify-python"},mdx("pre",null,mdx("code",_extends({parentName:"pre"},{"className":"language-python"}),`import requests

headers = {
  'Accept': 'application/json'
}

r = requests.get(
  '/self-service/browser/flows/verification/{via}/confirm/{code}',
  params={},
  headers = headers)

print r.json()
`))),mdx("div",{class:"tab-pane",role:"tabpanel",id:"tab-selfServiceBrowserVerify-ruby"},mdx("pre",null,mdx("code",_extends({parentName:"pre"},{"className":"language-ruby"}),`require 'rest-client'
require 'json'

headers = {
  'Accept' => 'application/json'
}

result = RestClient.get '/self-service/browser/flows/verification/{via}/confirm/{code}',
  params: {}, headers: headers

p JSON.parse(result)
`))))),mdx("a",{id:"opIdwhoami"}),mdx("h3",{"id":"check-who-the-current-http-session-belongs-to"},`Check who the current HTTP session belongs to`),mdx("pre",null,mdx("code",_extends({parentName:"pre"},{}),`GET /sessions/whoami HTTP/1.1
Accept: application/json

`)),mdx("p",null,`Uses the HTTP Headers in the GET request to determine (e.g. by using checking
the cookies) who is authenticated. Returns a session object or 401 if the
credentials are invalid or no credentials were sent.`),mdx("p",null,`This endpoint is useful for reverse proxies and API Gateways.`),mdx("h4",{"id":"responses-14"},`Responses`),mdx("a",{id:"check-who-the-current-http-session-belongs-to-responses"}),mdx("h5",{"id":"overview-14"},`Overview`),mdx("table",null,mdx("thead",{parentName:"table"},mdx("tr",{parentName:"thead"},mdx("th",_extends({parentName:"tr"},{"align":null}),`Status`),mdx("th",_extends({parentName:"tr"},{"align":null}),`Meaning`),mdx("th",_extends({parentName:"tr"},{"align":null}),`Description`),mdx("th",_extends({parentName:"tr"},{"align":null}),`Schema`))),mdx("tbody",{parentName:"table"},mdx("tr",{parentName:"tbody"},mdx("td",_extends({parentName:"tr"},{"align":null}),`200`),mdx("td",_extends({parentName:"tr"},{"align":null}),mdx("a",_extends({parentName:"td"},{"href":"https://tools.ietf.org/html/rfc7231#section-6.3.1"}),`OK`)),mdx("td",_extends({parentName:"tr"},{"align":null}),`session`),mdx("td",_extends({parentName:"tr"},{"align":null}),mdx("a",_extends({parentName:"td"},{"href":"#schemasession"}),`session`))),mdx("tr",{parentName:"tbody"},mdx("td",_extends({parentName:"tr"},{"align":null}),`403`),mdx("td",_extends({parentName:"tr"},{"align":null}),mdx("a",_extends({parentName:"td"},{"href":"https://tools.ietf.org/html/rfc7231#section-6.5.3"}),`Forbidden`)),mdx("td",_extends({parentName:"tr"},{"align":null}),`genericError`),mdx("td",_extends({parentName:"tr"},{"align":null}),mdx("a",_extends({parentName:"td"},{"href":"#schemagenericerror"}),`genericError`))),mdx("tr",{parentName:"tbody"},mdx("td",_extends({parentName:"tr"},{"align":null}),`500`),mdx("td",_extends({parentName:"tr"},{"align":null}),mdx("a",_extends({parentName:"td"},{"href":"https://tools.ietf.org/html/rfc7231#section-6.6.1"}),`Internal Server Error`)),mdx("td",_extends({parentName:"tr"},{"align":null}),`genericError`),mdx("td",_extends({parentName:"tr"},{"align":null}),mdx("a",_extends({parentName:"td"},{"href":"#schemagenericerror"}),`genericError`))))),mdx("h5",{"id":"examples-14"},`Examples`),mdx("h6",{"id":"200-response-5"},`200 response`),mdx("pre",null,mdx("code",_extends({parentName:"pre"},{"className":"language-json"}),`{
  "authenticated_at": "2020-03-25T17:39:55Z",
  "expires_at": "2020-03-25T17:39:55Z",
  "identity": {
    "addresses": [
      {
        "expires_at": "2020-03-25T17:39:55Z",
        "id": "string",
        "value": "string",
        "verified": true,
        "verified_at": "2020-03-25T17:39:55Z",
        "via": "string"
      }
    ],
    "id": "string",
    "traits": {},
    "traits_schema_id": "string",
    "traits_schema_url": "string"
  },
  "issued_at": "2020-03-25T17:39:55Z",
  "sid": "string"
}
`)),mdx("aside",{class:"success"},"This operation does not require authentication"),mdx("h4",{"id":"code-samples-14"},`Code samples`),mdx("div",{class:"tabs",id:"tab-whoami"},mdx("nav",{class:"tabs-nav"},mdx("ul",{class:"nav nav-tabs au-link-list au-link-list--inline"},mdx("li",{class:"nav-item"},mdx("a",{class:"nav-link active",role:"tab",href:"#tab-whoami-shell"},"Shell")),mdx("li",{class:"nav-item"},mdx("a",{class:"nav-link",role:"tab",href:"#tab-whoami-go"},"Go")),mdx("li",{class:"nav-item"},mdx("a",{class:"nav-link",role:"tab",href:"#tab-whoami-node"},"Node.js")),mdx("li",{class:"nav-item"},mdx("a",{class:"nav-link",role:"tab",href:"#tab-whoami-java"},"Java")),mdx("li",{class:"nav-item"},mdx("a",{class:"nav-link",role:"tab",href:"#tab-whoami-python"},"Python")),mdx("li",{class:"nav-item"},mdx("a",{class:"nav-link",role:"tab",href:"#tab-whoami-ruby"},"Ruby")))),mdx("div",{class:"tab-content"},mdx("div",{class:"tab-pane active",role:"tabpanel",id:"tab-whoami-shell"},mdx("pre",null,mdx("code",_extends({parentName:"pre"},{"className":"language-shell"}),`curl -X GET /sessions/whoami \\
  -H 'Accept: application/json'
`))),mdx("div",{class:"tab-pane",role:"tabpanel",id:"tab-whoami-go"},mdx("pre",null,mdx("code",_extends({parentName:"pre"},{"className":"language-go"}),`package main

import (
    "bytes"
    "net/http"
)

func main() {
    headers := map[string][]string{
        "Accept": []string{"application/json"},
    }

    var body []byte
    // body = ...

    req, err := http.NewRequest("GET", "/sessions/whoami", bytes.NewBuffer(body))
    req.Header = headers

    client := &http.Client{}
    resp, err := client.Do(req)
    // ...
}
`))),mdx("div",{class:"tab-pane",role:"tabpanel",id:"tab-whoami-node"},mdx("pre",null,mdx("code",_extends({parentName:"pre"},{"className":"language-nodejs"}),`const fetch = require('node-fetch');

const headers = {
  'Accept': 'application/json'
}

fetch('/sessions/whoami', {
  method: 'GET',
  headers
})
.then(r => r.json())
.then((body) => {
    console.log(body)
})
`))),mdx("div",{class:"tab-pane",role:"tabpanel",id:"tab-whoami-java"},mdx("pre",null,mdx("code",_extends({parentName:"pre"},{"className":"language-java"}),`// This sample needs improvement.
URL obj = new URL("/sessions/whoami");

HttpURLConnection con = (HttpURLConnection) obj.openConnection();
con.setRequestMethod("GET");

int responseCode = con.getResponseCode();

BufferedReader in = new BufferedReader(
    new InputStreamReader(con.getInputStream())
);

String inputLine;
StringBuffer response = new StringBuffer();
while ((inputLine = in.readLine()) != null) {
    response.append(inputLine);
}
in.close();

System.out.println(response.toString());
`))),mdx("div",{class:"tab-pane",role:"tabpanel",id:"tab-whoami-python"},mdx("pre",null,mdx("code",_extends({parentName:"pre"},{"className":"language-python"}),`import requests

headers = {
  'Accept': 'application/json'
}

r = requests.get(
  '/sessions/whoami',
  params={},
  headers = headers)

print r.json()
`))),mdx("div",{class:"tab-pane",role:"tabpanel",id:"tab-whoami-ruby"},mdx("pre",null,mdx("code",_extends({parentName:"pre"},{"className":"language-ruby"}),`require 'rest-client'
require 'json'

headers = {
  'Accept' => 'application/json'
}

result = RestClient.get '/sessions/whoami',
  params: {}, headers: headers

p JSON.parse(result)
`))))),mdx("a",{id:"ory-kratos-common"}),mdx("h2",{"id":"common"},`common`),mdx("a",{id:"opIdgetSelfServiceBrowserLoginRequest"}),mdx("h3",{"id":"get-the-request-context-of-browser-based-login-user-flows"},`Get the request context of browser-based login user flows`),mdx("pre",null,mdx("code",_extends({parentName:"pre"},{}),`GET /self-service/browser/flows/requests/login?request=string HTTP/1.1
Accept: application/json

`)),mdx("p",null,`This endpoint returns a login request's context with, for example, error details
and other information.`),mdx("p",null,`When accessing this endpoint through ORY Kratos' Public API, ensure that cookies
are set as they are required for CSRF to work. To prevent token scanning
attacks, the public endpoint does not return 404 status codes to prevent
scanning attacks.`),mdx("p",null,`More information can be found at
`,mdx("a",_extends({parentName:"p"},{"href":"https://www.ory.sh/docs/next/kratos/self-service/flows/user-login-user-registration"}),`ORY Kratos User Login and User Registration Documentation`),`.`),mdx("a",{id:"get-the-request-context-of-browser-based-login-user-flows-parameters"}),mdx("h5",{"id":"parameters-7"},`Parameters`),mdx("table",null,mdx("thead",{parentName:"table"},mdx("tr",{parentName:"thead"},mdx("th",_extends({parentName:"tr"},{"align":null}),`Parameter`),mdx("th",_extends({parentName:"tr"},{"align":null}),`In`),mdx("th",_extends({parentName:"tr"},{"align":null}),`Type`),mdx("th",_extends({parentName:"tr"},{"align":null}),`Required`),mdx("th",_extends({parentName:"tr"},{"align":null}),`Description`))),mdx("tbody",{parentName:"table"},mdx("tr",{parentName:"tbody"},mdx("td",_extends({parentName:"tr"},{"align":null}),`request`),mdx("td",_extends({parentName:"tr"},{"align":null}),`query`),mdx("td",_extends({parentName:"tr"},{"align":null}),`string`),mdx("td",_extends({parentName:"tr"},{"align":null}),`true`),mdx("td",_extends({parentName:"tr"},{"align":null}),`Request is the Login Request ID`)))),mdx("h5",{"id":"detailed-descriptions-3"},`Detailed descriptions`),mdx("p",null,mdx("strong",{parentName:"p"},`request`),`: Request is the Login Request ID`),mdx("p",null,`The value for this parameter comes from `,mdx("inlineCode",{parentName:"p"},`request`),` URL Query parameter sent to
your application (e.g. `,mdx("inlineCode",{parentName:"p"},`/login?request=abcde`),`).`),mdx("h4",{"id":"responses-15"},`Responses`),mdx("a",{id:"get-the-request-context-of-browser-based-login-user-flows-responses"}),mdx("h5",{"id":"overview-15"},`Overview`),mdx("table",null,mdx("thead",{parentName:"table"},mdx("tr",{parentName:"thead"},mdx("th",_extends({parentName:"tr"},{"align":null}),`Status`),mdx("th",_extends({parentName:"tr"},{"align":null}),`Meaning`),mdx("th",_extends({parentName:"tr"},{"align":null}),`Description`),mdx("th",_extends({parentName:"tr"},{"align":null}),`Schema`))),mdx("tbody",{parentName:"table"},mdx("tr",{parentName:"tbody"},mdx("td",_extends({parentName:"tr"},{"align":null}),`200`),mdx("td",_extends({parentName:"tr"},{"align":null}),mdx("a",_extends({parentName:"td"},{"href":"https://tools.ietf.org/html/rfc7231#section-6.3.1"}),`OK`)),mdx("td",_extends({parentName:"tr"},{"align":null}),`loginRequest`),mdx("td",_extends({parentName:"tr"},{"align":null}),mdx("a",_extends({parentName:"td"},{"href":"#schemaloginrequest"}),`loginRequest`))),mdx("tr",{parentName:"tbody"},mdx("td",_extends({parentName:"tr"},{"align":null}),`403`),mdx("td",_extends({parentName:"tr"},{"align":null}),mdx("a",_extends({parentName:"td"},{"href":"https://tools.ietf.org/html/rfc7231#section-6.5.3"}),`Forbidden`)),mdx("td",_extends({parentName:"tr"},{"align":null}),`genericError`),mdx("td",_extends({parentName:"tr"},{"align":null}),mdx("a",_extends({parentName:"td"},{"href":"#schemagenericerror"}),`genericError`))),mdx("tr",{parentName:"tbody"},mdx("td",_extends({parentName:"tr"},{"align":null}),`404`),mdx("td",_extends({parentName:"tr"},{"align":null}),mdx("a",_extends({parentName:"td"},{"href":"https://tools.ietf.org/html/rfc7231#section-6.5.4"}),`Not Found`)),mdx("td",_extends({parentName:"tr"},{"align":null}),`genericError`),mdx("td",_extends({parentName:"tr"},{"align":null}),mdx("a",_extends({parentName:"td"},{"href":"#schemagenericerror"}),`genericError`))),mdx("tr",{parentName:"tbody"},mdx("td",_extends({parentName:"tr"},{"align":null}),`500`),mdx("td",_extends({parentName:"tr"},{"align":null}),mdx("a",_extends({parentName:"td"},{"href":"https://tools.ietf.org/html/rfc7231#section-6.6.1"}),`Internal Server Error`)),mdx("td",_extends({parentName:"tr"},{"align":null}),`genericError`),mdx("td",_extends({parentName:"tr"},{"align":null}),mdx("a",_extends({parentName:"td"},{"href":"#schemagenericerror"}),`genericError`))))),mdx("h5",{"id":"examples-15"},`Examples`),mdx("h6",{"id":"200-response-6"},`200 response`),mdx("pre",null,mdx("code",_extends({parentName:"pre"},{"className":"language-json"}),`{
  "active": "string",
  "expires_at": "2020-03-25T17:39:55Z",
  "id": "string",
  "issued_at": "2020-03-25T17:39:55Z",
  "methods": {
    "property1": {
      "config": {
        "action": "string",
        "errors": [
          {
            "message": "string"
          }
        ],
        "fields": [
          {
            "disabled": true,
            "errors": [
              {
                "message": "string"
              }
            ],
            "name": "string",
            "pattern": "string",
            "required": true,
            "type": "string",
            "value": {}
          }
        ],
        "method": "string",
        "providers": [
          {
            "disabled": true,
            "errors": [
              {
                "message": "string"
              }
            ],
            "name": "string",
            "pattern": "string",
            "required": true,
            "type": "string",
            "value": {}
          }
        ]
      },
      "method": "string"
    },
    "property2": {
      "config": {
        "action": "string",
        "errors": [
          {
            "message": "string"
          }
        ],
        "fields": [
          {
            "disabled": true,
            "errors": [
              {
                "message": "string"
              }
            ],
            "name": "string",
            "pattern": "string",
            "required": true,
            "type": "string",
            "value": {}
          }
        ],
        "method": "string",
        "providers": [
          {
            "disabled": true,
            "errors": [
              {
                "message": "string"
              }
            ],
            "name": "string",
            "pattern": "string",
            "required": true,
            "type": "string",
            "value": {}
          }
        ]
      },
      "method": "string"
    }
  },
  "request_url": "string"
}
`)),mdx("aside",{class:"success"},"This operation does not require authentication"),mdx("h4",{"id":"code-samples-15"},`Code samples`),mdx("div",{class:"tabs",id:"tab-getSelfServiceBrowserLoginRequest"},mdx("nav",{class:"tabs-nav"},mdx("ul",{class:"nav nav-tabs au-link-list au-link-list--inline"},mdx("li",{class:"nav-item"},mdx("a",{class:"nav-link active",role:"tab",href:"#tab-getSelfServiceBrowserLoginRequest-shell"},"Shell")),mdx("li",{class:"nav-item"},mdx("a",{class:"nav-link",role:"tab",href:"#tab-getSelfServiceBrowserLoginRequest-go"},"Go")),mdx("li",{class:"nav-item"},mdx("a",{class:"nav-link",role:"tab",href:"#tab-getSelfServiceBrowserLoginRequest-node"},"Node.js")),mdx("li",{class:"nav-item"},mdx("a",{class:"nav-link",role:"tab",href:"#tab-getSelfServiceBrowserLoginRequest-java"},"Java")),mdx("li",{class:"nav-item"},mdx("a",{class:"nav-link",role:"tab",href:"#tab-getSelfServiceBrowserLoginRequest-python"},"Python")),mdx("li",{class:"nav-item"},mdx("a",{class:"nav-link",role:"tab",href:"#tab-getSelfServiceBrowserLoginRequest-ruby"},"Ruby")))),mdx("div",{class:"tab-content"},mdx("div",{class:"tab-pane active",role:"tabpanel",id:"tab-getSelfServiceBrowserLoginRequest-shell"},mdx("pre",null,mdx("code",_extends({parentName:"pre"},{"className":"language-shell"}),`curl -X GET /self-service/browser/flows/requests/login?request=string \\
  -H 'Accept: application/json'
`))),mdx("div",{class:"tab-pane",role:"tabpanel",id:"tab-getSelfServiceBrowserLoginRequest-go"},mdx("pre",null,mdx("code",_extends({parentName:"pre"},{"className":"language-go"}),`package main

import (
    "bytes"
    "net/http"
)

func main() {
    headers := map[string][]string{
        "Accept": []string{"application/json"},
    }

    var body []byte
    // body = ...

    req, err := http.NewRequest("GET", "/self-service/browser/flows/requests/login", bytes.NewBuffer(body))
    req.Header = headers

    client := &http.Client{}
    resp, err := client.Do(req)
    // ...
}
`))),mdx("div",{class:"tab-pane",role:"tabpanel",id:"tab-getSelfServiceBrowserLoginRequest-node"},mdx("pre",null,mdx("code",_extends({parentName:"pre"},{"className":"language-nodejs"}),`const fetch = require('node-fetch');

const headers = {
  'Accept': 'application/json'
}

fetch('/self-service/browser/flows/requests/login?request=string', {
  method: 'GET',
  headers
})
.then(r => r.json())
.then((body) => {
    console.log(body)
})
`))),mdx("div",{class:"tab-pane",role:"tabpanel",id:"tab-getSelfServiceBrowserLoginRequest-java"},mdx("pre",null,mdx("code",_extends({parentName:"pre"},{"className":"language-java"}),`// This sample needs improvement.
URL obj = new URL("/self-service/browser/flows/requests/login?request=string");

HttpURLConnection con = (HttpURLConnection) obj.openConnection();
con.setRequestMethod("GET");

int responseCode = con.getResponseCode();

BufferedReader in = new BufferedReader(
    new InputStreamReader(con.getInputStream())
);

String inputLine;
StringBuffer response = new StringBuffer();
while ((inputLine = in.readLine()) != null) {
    response.append(inputLine);
}
in.close();

System.out.println(response.toString());
`))),mdx("div",{class:"tab-pane",role:"tabpanel",id:"tab-getSelfServiceBrowserLoginRequest-python"},mdx("pre",null,mdx("code",_extends({parentName:"pre"},{"className":"language-python"}),`import requests

headers = {
  'Accept': 'application/json'
}

r = requests.get(
  '/self-service/browser/flows/requests/login',
  params={
    'request': 'string'},
  headers = headers)

print r.json()
`))),mdx("div",{class:"tab-pane",role:"tabpanel",id:"tab-getSelfServiceBrowserLoginRequest-ruby"},mdx("pre",null,mdx("code",_extends({parentName:"pre"},{"className":"language-ruby"}),`require 'rest-client'
require 'json'

headers = {
  'Accept' => 'application/json'
}

result = RestClient.get '/self-service/browser/flows/requests/login',
  params: {
    'request' => 'string'}, headers: headers

p JSON.parse(result)
`))))),mdx("a",{id:"opIdgetSelfServiceBrowserProfileManagementRequest"}),mdx("h3",{"id":"get-the-request-context-of-browser-based-profile-management-flows"},`Get the request context of browser-based profile management flows`),mdx("pre",null,mdx("code",_extends({parentName:"pre"},{}),`GET /self-service/browser/flows/requests/profile?request=string HTTP/1.1
Accept: application/json

`)),mdx("p",null,`When accessing this endpoint through ORY Kratos' Public API, ensure that cookies
are set as they are required for checking the auth session. To prevent scanning
attacks, the public endpoint does not return 404 status codes but instead 403
or 500.`),mdx("p",null,`More information can be found at
`,mdx("a",_extends({parentName:"p"},{"href":"https://www.ory.sh/docs/next/kratos/self-service/flows/user-profile-management"}),`ORY Kratos Profile Management Documentation`),`.`),mdx("a",{id:"get-the-request-context-of-browser-based-profile-management-flows-parameters"}),mdx("h5",{"id":"parameters-8"},`Parameters`),mdx("table",null,mdx("thead",{parentName:"table"},mdx("tr",{parentName:"thead"},mdx("th",_extends({parentName:"tr"},{"align":null}),`Parameter`),mdx("th",_extends({parentName:"tr"},{"align":null}),`In`),mdx("th",_extends({parentName:"tr"},{"align":null}),`Type`),mdx("th",_extends({parentName:"tr"},{"align":null}),`Required`),mdx("th",_extends({parentName:"tr"},{"align":null}),`Description`))),mdx("tbody",{parentName:"table"},mdx("tr",{parentName:"tbody"},mdx("td",_extends({parentName:"tr"},{"align":null}),`request`),mdx("td",_extends({parentName:"tr"},{"align":null}),`query`),mdx("td",_extends({parentName:"tr"},{"align":null}),`string`),mdx("td",_extends({parentName:"tr"},{"align":null}),`true`),mdx("td",_extends({parentName:"tr"},{"align":null}),`Request is the Login Request ID`)))),mdx("h5",{"id":"detailed-descriptions-4"},`Detailed descriptions`),mdx("p",null,mdx("strong",{parentName:"p"},`request`),`: Request is the Login Request ID`),mdx("p",null,`The value for this parameter comes from `,mdx("inlineCode",{parentName:"p"},`request`),` URL Query parameter sent to
your application (e.g. `,mdx("inlineCode",{parentName:"p"},`/login?request=abcde`),`).`),mdx("h4",{"id":"responses-16"},`Responses`),mdx("a",{id:"get-the-request-context-of-browser-based-profile-management-flows-responses"}),mdx("h5",{"id":"overview-16"},`Overview`),mdx("table",null,mdx("thead",{parentName:"table"},mdx("tr",{parentName:"thead"},mdx("th",_extends({parentName:"tr"},{"align":null}),`Status`),mdx("th",_extends({parentName:"tr"},{"align":null}),`Meaning`),mdx("th",_extends({parentName:"tr"},{"align":null}),`Description`),mdx("th",_extends({parentName:"tr"},{"align":null}),`Schema`))),mdx("tbody",{parentName:"table"},mdx("tr",{parentName:"tbody"},mdx("td",_extends({parentName:"tr"},{"align":null}),`200`),mdx("td",_extends({parentName:"tr"},{"align":null}),mdx("a",_extends({parentName:"td"},{"href":"https://tools.ietf.org/html/rfc7231#section-6.3.1"}),`OK`)),mdx("td",_extends({parentName:"tr"},{"align":null}),`profileManagementRequest`),mdx("td",_extends({parentName:"tr"},{"align":null}),mdx("a",_extends({parentName:"td"},{"href":"#schemaprofilemanagementrequest"}),`profileManagementRequest`))),mdx("tr",{parentName:"tbody"},mdx("td",_extends({parentName:"tr"},{"align":null}),`403`),mdx("td",_extends({parentName:"tr"},{"align":null}),mdx("a",_extends({parentName:"td"},{"href":"https://tools.ietf.org/html/rfc7231#section-6.5.3"}),`Forbidden`)),mdx("td",_extends({parentName:"tr"},{"align":null}),`genericError`),mdx("td",_extends({parentName:"tr"},{"align":null}),mdx("a",_extends({parentName:"td"},{"href":"#schemagenericerror"}),`genericError`))),mdx("tr",{parentName:"tbody"},mdx("td",_extends({parentName:"tr"},{"align":null}),`404`),mdx("td",_extends({parentName:"tr"},{"align":null}),mdx("a",_extends({parentName:"td"},{"href":"https://tools.ietf.org/html/rfc7231#section-6.5.4"}),`Not Found`)),mdx("td",_extends({parentName:"tr"},{"align":null}),`genericError`),mdx("td",_extends({parentName:"tr"},{"align":null}),mdx("a",_extends({parentName:"td"},{"href":"#schemagenericerror"}),`genericError`))),mdx("tr",{parentName:"tbody"},mdx("td",_extends({parentName:"tr"},{"align":null}),`500`),mdx("td",_extends({parentName:"tr"},{"align":null}),mdx("a",_extends({parentName:"td"},{"href":"https://tools.ietf.org/html/rfc7231#section-6.6.1"}),`Internal Server Error`)),mdx("td",_extends({parentName:"tr"},{"align":null}),`genericError`),mdx("td",_extends({parentName:"tr"},{"align":null}),mdx("a",_extends({parentName:"td"},{"href":"#schemagenericerror"}),`genericError`))))),mdx("h5",{"id":"examples-16"},`Examples`),mdx("h6",{"id":"200-response-7"},`200 response`),mdx("pre",null,mdx("code",_extends({parentName:"pre"},{"className":"language-json"}),`{
  "expires_at": "2020-03-25T17:39:55Z",
  "form": {
    "action": "string",
    "errors": [
      {
        "message": "string"
      }
    ],
    "fields": [
      {
        "disabled": true,
        "errors": [
          {
            "message": "string"
          }
        ],
        "name": "string",
        "pattern": "string",
        "required": true,
        "type": "string",
        "value": {}
      }
    ],
    "method": "string"
  },
  "id": "string",
  "identity": {
    "addresses": [
      {
        "expires_at": "2020-03-25T17:39:55Z",
        "id": "string",
        "value": "string",
        "verified": true,
        "verified_at": "2020-03-25T17:39:55Z",
        "via": "string"
      }
    ],
    "id": "string",
    "traits": {},
    "traits_schema_id": "string",
    "traits_schema_url": "string"
  },
  "issued_at": "2020-03-25T17:39:55Z",
  "request_url": "string",
  "update_successful": true
}
`)),mdx("aside",{class:"success"},"This operation does not require authentication"),mdx("h4",{"id":"code-samples-16"},`Code samples`),mdx("div",{class:"tabs",id:"tab-getSelfServiceBrowserProfileManagementRequest"},mdx("nav",{class:"tabs-nav"},mdx("ul",{class:"nav nav-tabs au-link-list au-link-list--inline"},mdx("li",{class:"nav-item"},mdx("a",{class:"nav-link active",role:"tab",href:"#tab-getSelfServiceBrowserProfileManagementRequest-shell"},"Shell")),mdx("li",{class:"nav-item"},mdx("a",{class:"nav-link",role:"tab",href:"#tab-getSelfServiceBrowserProfileManagementRequest-go"},"Go")),mdx("li",{class:"nav-item"},mdx("a",{class:"nav-link",role:"tab",href:"#tab-getSelfServiceBrowserProfileManagementRequest-node"},"Node.js")),mdx("li",{class:"nav-item"},mdx("a",{class:"nav-link",role:"tab",href:"#tab-getSelfServiceBrowserProfileManagementRequest-java"},"Java")),mdx("li",{class:"nav-item"},mdx("a",{class:"nav-link",role:"tab",href:"#tab-getSelfServiceBrowserProfileManagementRequest-python"},"Python")),mdx("li",{class:"nav-item"},mdx("a",{class:"nav-link",role:"tab",href:"#tab-getSelfServiceBrowserProfileManagementRequest-ruby"},"Ruby")))),mdx("div",{class:"tab-content"},mdx("div",{class:"tab-pane active",role:"tabpanel",id:"tab-getSelfServiceBrowserProfileManagementRequest-shell"},mdx("pre",null,mdx("code",_extends({parentName:"pre"},{"className":"language-shell"}),`curl -X GET /self-service/browser/flows/requests/profile?request=string \\
  -H 'Accept: application/json'
`))),mdx("div",{class:"tab-pane",role:"tabpanel",id:"tab-getSelfServiceBrowserProfileManagementRequest-go"},mdx("pre",null,mdx("code",_extends({parentName:"pre"},{"className":"language-go"}),`package main

import (
    "bytes"
    "net/http"
)

func main() {
    headers := map[string][]string{
        "Accept": []string{"application/json"},
    }

    var body []byte
    // body = ...

    req, err := http.NewRequest("GET", "/self-service/browser/flows/requests/profile", bytes.NewBuffer(body))
    req.Header = headers

    client := &http.Client{}
    resp, err := client.Do(req)
    // ...
}
`))),mdx("div",{class:"tab-pane",role:"tabpanel",id:"tab-getSelfServiceBrowserProfileManagementRequest-node"},mdx("pre",null,mdx("code",_extends({parentName:"pre"},{"className":"language-nodejs"}),`const fetch = require('node-fetch');

const headers = {
  'Accept': 'application/json'
}

fetch('/self-service/browser/flows/requests/profile?request=string', {
  method: 'GET',
  headers
})
.then(r => r.json())
.then((body) => {
    console.log(body)
})
`))),mdx("div",{class:"tab-pane",role:"tabpanel",id:"tab-getSelfServiceBrowserProfileManagementRequest-java"},mdx("pre",null,mdx("code",_extends({parentName:"pre"},{"className":"language-java"}),`// This sample needs improvement.
URL obj = new URL("/self-service/browser/flows/requests/profile?request=string");

HttpURLConnection con = (HttpURLConnection) obj.openConnection();
con.setRequestMethod("GET");

int responseCode = con.getResponseCode();

BufferedReader in = new BufferedReader(
    new InputStreamReader(con.getInputStream())
);

String inputLine;
StringBuffer response = new StringBuffer();
while ((inputLine = in.readLine()) != null) {
    response.append(inputLine);
}
in.close();

System.out.println(response.toString());
`))),mdx("div",{class:"tab-pane",role:"tabpanel",id:"tab-getSelfServiceBrowserProfileManagementRequest-python"},mdx("pre",null,mdx("code",_extends({parentName:"pre"},{"className":"language-python"}),`import requests

headers = {
  'Accept': 'application/json'
}

r = requests.get(
  '/self-service/browser/flows/requests/profile',
  params={
    'request': 'string'},
  headers = headers)

print r.json()
`))),mdx("div",{class:"tab-pane",role:"tabpanel",id:"tab-getSelfServiceBrowserProfileManagementRequest-ruby"},mdx("pre",null,mdx("code",_extends({parentName:"pre"},{"className":"language-ruby"}),`require 'rest-client'
require 'json'

headers = {
  'Accept' => 'application/json'
}

result = RestClient.get '/self-service/browser/flows/requests/profile',
  params: {
    'request' => 'string'}, headers: headers

p JSON.parse(result)
`))))),mdx("a",{id:"opIdgetSelfServiceBrowserRegistrationRequest"}),mdx("h3",{"id":"get-the-request-context-of-browser-based-registration-user-flows"},`Get the request context of browser-based registration user flows`),mdx("pre",null,mdx("code",_extends({parentName:"pre"},{}),`GET /self-service/browser/flows/requests/registration?request=string HTTP/1.1
Accept: application/json

`)),mdx("p",null,`This endpoint returns a registration request's context with, for example, error
details and other information.`),mdx("p",null,`When accessing this endpoint through ORY Kratos' Public API, ensure that cookies
are set as they are required for CSRF to work. To prevent token scanning
attacks, the public endpoint does not return 404 status codes to prevent
scanning attacks.`),mdx("p",null,`More information can be found at
`,mdx("a",_extends({parentName:"p"},{"href":"https://www.ory.sh/docs/next/kratos/self-service/flows/user-login-user-registration"}),`ORY Kratos User Login and User Registration Documentation`),`.`),mdx("a",{id:"get-the-request-context-of-browser-based-registration-user-flows-parameters"}),mdx("h5",{"id":"parameters-9"},`Parameters`),mdx("table",null,mdx("thead",{parentName:"table"},mdx("tr",{parentName:"thead"},mdx("th",_extends({parentName:"tr"},{"align":null}),`Parameter`),mdx("th",_extends({parentName:"tr"},{"align":null}),`In`),mdx("th",_extends({parentName:"tr"},{"align":null}),`Type`),mdx("th",_extends({parentName:"tr"},{"align":null}),`Required`),mdx("th",_extends({parentName:"tr"},{"align":null}),`Description`))),mdx("tbody",{parentName:"table"},mdx("tr",{parentName:"tbody"},mdx("td",_extends({parentName:"tr"},{"align":null}),`request`),mdx("td",_extends({parentName:"tr"},{"align":null}),`query`),mdx("td",_extends({parentName:"tr"},{"align":null}),`string`),mdx("td",_extends({parentName:"tr"},{"align":null}),`true`),mdx("td",_extends({parentName:"tr"},{"align":null}),`Request is the Registration Request ID`)))),mdx("h5",{"id":"detailed-descriptions-5"},`Detailed descriptions`),mdx("p",null,mdx("strong",{parentName:"p"},`request`),`: Request is the Registration Request ID`),mdx("p",null,`The value for this parameter comes from `,mdx("inlineCode",{parentName:"p"},`request`),` URL Query parameter sent to
your application (e.g. `,mdx("inlineCode",{parentName:"p"},`/registration?request=abcde`),`).`),mdx("h4",{"id":"responses-17"},`Responses`),mdx("a",{id:"get-the-request-context-of-browser-based-registration-user-flows-responses"}),mdx("h5",{"id":"overview-17"},`Overview`),mdx("table",null,mdx("thead",{parentName:"table"},mdx("tr",{parentName:"thead"},mdx("th",_extends({parentName:"tr"},{"align":null}),`Status`),mdx("th",_extends({parentName:"tr"},{"align":null}),`Meaning`),mdx("th",_extends({parentName:"tr"},{"align":null}),`Description`),mdx("th",_extends({parentName:"tr"},{"align":null}),`Schema`))),mdx("tbody",{parentName:"table"},mdx("tr",{parentName:"tbody"},mdx("td",_extends({parentName:"tr"},{"align":null}),`200`),mdx("td",_extends({parentName:"tr"},{"align":null}),mdx("a",_extends({parentName:"td"},{"href":"https://tools.ietf.org/html/rfc7231#section-6.3.1"}),`OK`)),mdx("td",_extends({parentName:"tr"},{"align":null}),`registrationRequest`),mdx("td",_extends({parentName:"tr"},{"align":null}),mdx("a",_extends({parentName:"td"},{"href":"#schemaregistrationrequest"}),`registrationRequest`))),mdx("tr",{parentName:"tbody"},mdx("td",_extends({parentName:"tr"},{"align":null}),`403`),mdx("td",_extends({parentName:"tr"},{"align":null}),mdx("a",_extends({parentName:"td"},{"href":"https://tools.ietf.org/html/rfc7231#section-6.5.3"}),`Forbidden`)),mdx("td",_extends({parentName:"tr"},{"align":null}),`genericError`),mdx("td",_extends({parentName:"tr"},{"align":null}),mdx("a",_extends({parentName:"td"},{"href":"#schemagenericerror"}),`genericError`))),mdx("tr",{parentName:"tbody"},mdx("td",_extends({parentName:"tr"},{"align":null}),`404`),mdx("td",_extends({parentName:"tr"},{"align":null}),mdx("a",_extends({parentName:"td"},{"href":"https://tools.ietf.org/html/rfc7231#section-6.5.4"}),`Not Found`)),mdx("td",_extends({parentName:"tr"},{"align":null}),`genericError`),mdx("td",_extends({parentName:"tr"},{"align":null}),mdx("a",_extends({parentName:"td"},{"href":"#schemagenericerror"}),`genericError`))),mdx("tr",{parentName:"tbody"},mdx("td",_extends({parentName:"tr"},{"align":null}),`500`),mdx("td",_extends({parentName:"tr"},{"align":null}),mdx("a",_extends({parentName:"td"},{"href":"https://tools.ietf.org/html/rfc7231#section-6.6.1"}),`Internal Server Error`)),mdx("td",_extends({parentName:"tr"},{"align":null}),`genericError`),mdx("td",_extends({parentName:"tr"},{"align":null}),mdx("a",_extends({parentName:"td"},{"href":"#schemagenericerror"}),`genericError`))))),mdx("h5",{"id":"examples-17"},`Examples`),mdx("h6",{"id":"200-response-8"},`200 response`),mdx("pre",null,mdx("code",_extends({parentName:"pre"},{"className":"language-json"}),`{
  "active": "string",
  "expires_at": "2020-03-25T17:39:55Z",
  "id": "string",
  "issued_at": "2020-03-25T17:39:55Z",
  "methods": {
    "property1": {
      "config": {
        "action": "string",
        "errors": [
          {
            "message": "string"
          }
        ],
        "fields": [
          {
            "disabled": true,
            "errors": [
              {
                "message": "string"
              }
            ],
            "name": "string",
            "pattern": "string",
            "required": true,
            "type": "string",
            "value": {}
          }
        ],
        "method": "string",
        "providers": [
          {
            "disabled": true,
            "errors": [
              {
                "message": "string"
              }
            ],
            "name": "string",
            "pattern": "string",
            "required": true,
            "type": "string",
            "value": {}
          }
        ]
      },
      "method": "string"
    },
    "property2": {
      "config": {
        "action": "string",
        "errors": [
          {
            "message": "string"
          }
        ],
        "fields": [
          {
            "disabled": true,
            "errors": [
              {
                "message": "string"
              }
            ],
            "name": "string",
            "pattern": "string",
            "required": true,
            "type": "string",
            "value": {}
          }
        ],
        "method": "string",
        "providers": [
          {
            "disabled": true,
            "errors": [
              {
                "message": "string"
              }
            ],
            "name": "string",
            "pattern": "string",
            "required": true,
            "type": "string",
            "value": {}
          }
        ]
      },
      "method": "string"
    }
  },
  "request_url": "string"
}
`)),mdx("aside",{class:"success"},"This operation does not require authentication"),mdx("h4",{"id":"code-samples-17"},`Code samples`),mdx("div",{class:"tabs",id:"tab-getSelfServiceBrowserRegistrationRequest"},mdx("nav",{class:"tabs-nav"},mdx("ul",{class:"nav nav-tabs au-link-list au-link-list--inline"},mdx("li",{class:"nav-item"},mdx("a",{class:"nav-link active",role:"tab",href:"#tab-getSelfServiceBrowserRegistrationRequest-shell"},"Shell")),mdx("li",{class:"nav-item"},mdx("a",{class:"nav-link",role:"tab",href:"#tab-getSelfServiceBrowserRegistrationRequest-go"},"Go")),mdx("li",{class:"nav-item"},mdx("a",{class:"nav-link",role:"tab",href:"#tab-getSelfServiceBrowserRegistrationRequest-node"},"Node.js")),mdx("li",{class:"nav-item"},mdx("a",{class:"nav-link",role:"tab",href:"#tab-getSelfServiceBrowserRegistrationRequest-java"},"Java")),mdx("li",{class:"nav-item"},mdx("a",{class:"nav-link",role:"tab",href:"#tab-getSelfServiceBrowserRegistrationRequest-python"},"Python")),mdx("li",{class:"nav-item"},mdx("a",{class:"nav-link",role:"tab",href:"#tab-getSelfServiceBrowserRegistrationRequest-ruby"},"Ruby")))),mdx("div",{class:"tab-content"},mdx("div",{class:"tab-pane active",role:"tabpanel",id:"tab-getSelfServiceBrowserRegistrationRequest-shell"},mdx("pre",null,mdx("code",_extends({parentName:"pre"},{"className":"language-shell"}),`curl -X GET /self-service/browser/flows/requests/registration?request=string \\
  -H 'Accept: application/json'
`))),mdx("div",{class:"tab-pane",role:"tabpanel",id:"tab-getSelfServiceBrowserRegistrationRequest-go"},mdx("pre",null,mdx("code",_extends({parentName:"pre"},{"className":"language-go"}),`package main

import (
    "bytes"
    "net/http"
)

func main() {
    headers := map[string][]string{
        "Accept": []string{"application/json"},
    }

    var body []byte
    // body = ...

    req, err := http.NewRequest("GET", "/self-service/browser/flows/requests/registration", bytes.NewBuffer(body))
    req.Header = headers

    client := &http.Client{}
    resp, err := client.Do(req)
    // ...
}
`))),mdx("div",{class:"tab-pane",role:"tabpanel",id:"tab-getSelfServiceBrowserRegistrationRequest-node"},mdx("pre",null,mdx("code",_extends({parentName:"pre"},{"className":"language-nodejs"}),`const fetch = require('node-fetch');

const headers = {
  'Accept': 'application/json'
}

fetch('/self-service/browser/flows/requests/registration?request=string', {
  method: 'GET',
  headers
})
.then(r => r.json())
.then((body) => {
    console.log(body)
})
`))),mdx("div",{class:"tab-pane",role:"tabpanel",id:"tab-getSelfServiceBrowserRegistrationRequest-java"},mdx("pre",null,mdx("code",_extends({parentName:"pre"},{"className":"language-java"}),`// This sample needs improvement.
URL obj = new URL("/self-service/browser/flows/requests/registration?request=string");

HttpURLConnection con = (HttpURLConnection) obj.openConnection();
con.setRequestMethod("GET");

int responseCode = con.getResponseCode();

BufferedReader in = new BufferedReader(
    new InputStreamReader(con.getInputStream())
);

String inputLine;
StringBuffer response = new StringBuffer();
while ((inputLine = in.readLine()) != null) {
    response.append(inputLine);
}
in.close();

System.out.println(response.toString());
`))),mdx("div",{class:"tab-pane",role:"tabpanel",id:"tab-getSelfServiceBrowserRegistrationRequest-python"},mdx("pre",null,mdx("code",_extends({parentName:"pre"},{"className":"language-python"}),`import requests

headers = {
  'Accept': 'application/json'
}

r = requests.get(
  '/self-service/browser/flows/requests/registration',
  params={
    'request': 'string'},
  headers = headers)

print r.json()
`))),mdx("div",{class:"tab-pane",role:"tabpanel",id:"tab-getSelfServiceBrowserRegistrationRequest-ruby"},mdx("pre",null,mdx("code",_extends({parentName:"pre"},{"className":"language-ruby"}),`require 'rest-client'
require 'json'

headers = {
  'Accept' => 'application/json'
}

result = RestClient.get '/self-service/browser/flows/requests/registration',
  params: {
    'request' => 'string'}, headers: headers

p JSON.parse(result)
`))))),mdx("a",{id:"opIdgetSelfServiceVerificationRequest"}),mdx("h3",{"id":"get-the-request-context-of-browser-based-verification-flows"},`Get the request context of browser-based verification flows`),mdx("pre",null,mdx("code",_extends({parentName:"pre"},{}),`GET /self-service/browser/flows/requests/verification?request=string HTTP/1.1
Accept: application/json

`)),mdx("p",null,`When accessing this endpoint through ORY Kratos' Public API, ensure that cookies
are set as they are required for checking the auth session. To prevent scanning
attacks, the public endpoint does not return 404 status codes but instead 403
or 500.`),mdx("p",null,`More information can be found at
`,mdx("a",_extends({parentName:"p"},{"href":"https://www.ory.sh/docs/kratos/selfservice/flows/verify-email-account-activation"}),`ORY Kratos Email and Phone Verification Documentation`),`.`),mdx("a",{id:"get-the-request-context-of-browser-based-verification-flows-parameters"}),mdx("h5",{"id":"parameters-10"},`Parameters`),mdx("table",null,mdx("thead",{parentName:"table"},mdx("tr",{parentName:"thead"},mdx("th",_extends({parentName:"tr"},{"align":null}),`Parameter`),mdx("th",_extends({parentName:"tr"},{"align":null}),`In`),mdx("th",_extends({parentName:"tr"},{"align":null}),`Type`),mdx("th",_extends({parentName:"tr"},{"align":null}),`Required`),mdx("th",_extends({parentName:"tr"},{"align":null}),`Description`))),mdx("tbody",{parentName:"table"},mdx("tr",{parentName:"tbody"},mdx("td",_extends({parentName:"tr"},{"align":null}),`request`),mdx("td",_extends({parentName:"tr"},{"align":null}),`query`),mdx("td",_extends({parentName:"tr"},{"align":null}),`string`),mdx("td",_extends({parentName:"tr"},{"align":null}),`true`),mdx("td",_extends({parentName:"tr"},{"align":null}),`Request is the Request ID`)))),mdx("h5",{"id":"detailed-descriptions-6"},`Detailed descriptions`),mdx("p",null,mdx("strong",{parentName:"p"},`request`),`: Request is the Request ID`),mdx("p",null,`The value for this parameter comes from `,mdx("inlineCode",{parentName:"p"},`request`),` URL Query parameter sent to
your application (e.g. `,mdx("inlineCode",{parentName:"p"},`/verify?request=abcde`),`).`),mdx("h4",{"id":"responses-18"},`Responses`),mdx("a",{id:"get-the-request-context-of-browser-based-verification-flows-responses"}),mdx("h5",{"id":"overview-18"},`Overview`),mdx("table",null,mdx("thead",{parentName:"table"},mdx("tr",{parentName:"thead"},mdx("th",_extends({parentName:"tr"},{"align":null}),`Status`),mdx("th",_extends({parentName:"tr"},{"align":null}),`Meaning`),mdx("th",_extends({parentName:"tr"},{"align":null}),`Description`),mdx("th",_extends({parentName:"tr"},{"align":null}),`Schema`))),mdx("tbody",{parentName:"table"},mdx("tr",{parentName:"tbody"},mdx("td",_extends({parentName:"tr"},{"align":null}),`200`),mdx("td",_extends({parentName:"tr"},{"align":null}),mdx("a",_extends({parentName:"td"},{"href":"https://tools.ietf.org/html/rfc7231#section-6.3.1"}),`OK`)),mdx("td",_extends({parentName:"tr"},{"align":null}),`verificationRequest`),mdx("td",_extends({parentName:"tr"},{"align":null}),mdx("a",_extends({parentName:"td"},{"href":"#schemaverificationrequest"}),`verificationRequest`))),mdx("tr",{parentName:"tbody"},mdx("td",_extends({parentName:"tr"},{"align":null}),`403`),mdx("td",_extends({parentName:"tr"},{"align":null}),mdx("a",_extends({parentName:"td"},{"href":"https://tools.ietf.org/html/rfc7231#section-6.5.3"}),`Forbidden`)),mdx("td",_extends({parentName:"tr"},{"align":null}),`genericError`),mdx("td",_extends({parentName:"tr"},{"align":null}),mdx("a",_extends({parentName:"td"},{"href":"#schemagenericerror"}),`genericError`))),mdx("tr",{parentName:"tbody"},mdx("td",_extends({parentName:"tr"},{"align":null}),`404`),mdx("td",_extends({parentName:"tr"},{"align":null}),mdx("a",_extends({parentName:"td"},{"href":"https://tools.ietf.org/html/rfc7231#section-6.5.4"}),`Not Found`)),mdx("td",_extends({parentName:"tr"},{"align":null}),`genericError`),mdx("td",_extends({parentName:"tr"},{"align":null}),mdx("a",_extends({parentName:"td"},{"href":"#schemagenericerror"}),`genericError`))),mdx("tr",{parentName:"tbody"},mdx("td",_extends({parentName:"tr"},{"align":null}),`500`),mdx("td",_extends({parentName:"tr"},{"align":null}),mdx("a",_extends({parentName:"td"},{"href":"https://tools.ietf.org/html/rfc7231#section-6.6.1"}),`Internal Server Error`)),mdx("td",_extends({parentName:"tr"},{"align":null}),`genericError`),mdx("td",_extends({parentName:"tr"},{"align":null}),mdx("a",_extends({parentName:"td"},{"href":"#schemagenericerror"}),`genericError`))))),mdx("h5",{"id":"examples-18"},`Examples`),mdx("h6",{"id":"200-response-9"},`200 response`),mdx("pre",null,mdx("code",_extends({parentName:"pre"},{"className":"language-json"}),`{
  "expires_at": "2020-03-25T17:39:55Z",
  "form": {
    "action": "string",
    "errors": [
      {
        "message": "string"
      }
    ],
    "fields": [
      {
        "disabled": true,
        "errors": [
          {
            "message": "string"
          }
        ],
        "name": "string",
        "pattern": "string",
        "required": true,
        "type": "string",
        "value": {}
      }
    ],
    "method": "string"
  },
  "id": "string",
  "issued_at": "2020-03-25T17:39:55Z",
  "request_url": "string",
  "success": true,
  "via": "string"
}
`)),mdx("aside",{class:"success"},"This operation does not require authentication"),mdx("h4",{"id":"code-samples-18"},`Code samples`),mdx("div",{class:"tabs",id:"tab-getSelfServiceVerificationRequest"},mdx("nav",{class:"tabs-nav"},mdx("ul",{class:"nav nav-tabs au-link-list au-link-list--inline"},mdx("li",{class:"nav-item"},mdx("a",{class:"nav-link active",role:"tab",href:"#tab-getSelfServiceVerificationRequest-shell"},"Shell")),mdx("li",{class:"nav-item"},mdx("a",{class:"nav-link",role:"tab",href:"#tab-getSelfServiceVerificationRequest-go"},"Go")),mdx("li",{class:"nav-item"},mdx("a",{class:"nav-link",role:"tab",href:"#tab-getSelfServiceVerificationRequest-node"},"Node.js")),mdx("li",{class:"nav-item"},mdx("a",{class:"nav-link",role:"tab",href:"#tab-getSelfServiceVerificationRequest-java"},"Java")),mdx("li",{class:"nav-item"},mdx("a",{class:"nav-link",role:"tab",href:"#tab-getSelfServiceVerificationRequest-python"},"Python")),mdx("li",{class:"nav-item"},mdx("a",{class:"nav-link",role:"tab",href:"#tab-getSelfServiceVerificationRequest-ruby"},"Ruby")))),mdx("div",{class:"tab-content"},mdx("div",{class:"tab-pane active",role:"tabpanel",id:"tab-getSelfServiceVerificationRequest-shell"},mdx("pre",null,mdx("code",_extends({parentName:"pre"},{"className":"language-shell"}),`curl -X GET /self-service/browser/flows/requests/verification?request=string \\
  -H 'Accept: application/json'
`))),mdx("div",{class:"tab-pane",role:"tabpanel",id:"tab-getSelfServiceVerificationRequest-go"},mdx("pre",null,mdx("code",_extends({parentName:"pre"},{"className":"language-go"}),`package main

import (
    "bytes"
    "net/http"
)

func main() {
    headers := map[string][]string{
        "Accept": []string{"application/json"},
    }

    var body []byte
    // body = ...

    req, err := http.NewRequest("GET", "/self-service/browser/flows/requests/verification", bytes.NewBuffer(body))
    req.Header = headers

    client := &http.Client{}
    resp, err := client.Do(req)
    // ...
}
`))),mdx("div",{class:"tab-pane",role:"tabpanel",id:"tab-getSelfServiceVerificationRequest-node"},mdx("pre",null,mdx("code",_extends({parentName:"pre"},{"className":"language-nodejs"}),`const fetch = require('node-fetch');

const headers = {
  'Accept': 'application/json'
}

fetch('/self-service/browser/flows/requests/verification?request=string', {
  method: 'GET',
  headers
})
.then(r => r.json())
.then((body) => {
    console.log(body)
})
`))),mdx("div",{class:"tab-pane",role:"tabpanel",id:"tab-getSelfServiceVerificationRequest-java"},mdx("pre",null,mdx("code",_extends({parentName:"pre"},{"className":"language-java"}),`// This sample needs improvement.
URL obj = new URL("/self-service/browser/flows/requests/verification?request=string");

HttpURLConnection con = (HttpURLConnection) obj.openConnection();
con.setRequestMethod("GET");

int responseCode = con.getResponseCode();

BufferedReader in = new BufferedReader(
    new InputStreamReader(con.getInputStream())
);

String inputLine;
StringBuffer response = new StringBuffer();
while ((inputLine = in.readLine()) != null) {
    response.append(inputLine);
}
in.close();

System.out.println(response.toString());
`))),mdx("div",{class:"tab-pane",role:"tabpanel",id:"tab-getSelfServiceVerificationRequest-python"},mdx("pre",null,mdx("code",_extends({parentName:"pre"},{"className":"language-python"}),`import requests

headers = {
  'Accept': 'application/json'
}

r = requests.get(
  '/self-service/browser/flows/requests/verification',
  params={
    'request': 'string'},
  headers = headers)

print r.json()
`))),mdx("div",{class:"tab-pane",role:"tabpanel",id:"tab-getSelfServiceVerificationRequest-ruby"},mdx("pre",null,mdx("code",_extends({parentName:"pre"},{"className":"language-ruby"}),`require 'rest-client'
require 'json'

headers = {
  'Accept' => 'application/json'
}

result = RestClient.get '/self-service/browser/flows/requests/verification',
  params: {
    'request' => 'string'}, headers: headers

p JSON.parse(result)
`))))),mdx("a",{id:"opIdgetSelfServiceError"}),mdx("h3",{"id":"get-user-facing-self-service-errors"},`Get user-facing self-service errors`),mdx("pre",null,mdx("code",_extends({parentName:"pre"},{}),`GET /self-service/errors HTTP/1.1
Accept: application/json

`)),mdx("p",null,`This endpoint returns the error associated with a user-facing self service
errors.`),mdx("p",null,`When accessing this endpoint through ORY Kratos' Public API, ensure that cookies
are set as they are required for CSRF to work. To prevent token scanning
attacks, the public endpoint does not return 404 status codes to prevent
scanning attacks.`),mdx("p",null,`More information can be found at
`,mdx("a",_extends({parentName:"p"},{"href":"https://www.ory.sh/docs/kratos/self-service/flows/user-facing-errors"}),`ORY Kratos User User Facing Error Documentation`),`.`),mdx("a",{id:"get-user-facing-self-service-errors-parameters"}),mdx("h5",{"id":"parameters-11"},`Parameters`),mdx("table",null,mdx("thead",{parentName:"table"},mdx("tr",{parentName:"thead"},mdx("th",_extends({parentName:"tr"},{"align":null}),`Parameter`),mdx("th",_extends({parentName:"tr"},{"align":null}),`In`),mdx("th",_extends({parentName:"tr"},{"align":null}),`Type`),mdx("th",_extends({parentName:"tr"},{"align":null}),`Required`),mdx("th",_extends({parentName:"tr"},{"align":null}),`Description`))),mdx("tbody",{parentName:"table"},mdx("tr",{parentName:"tbody"},mdx("td",_extends({parentName:"tr"},{"align":null}),`id`),mdx("td",_extends({parentName:"tr"},{"align":null}),`query`),mdx("td",_extends({parentName:"tr"},{"align":null}),`string`),mdx("td",_extends({parentName:"tr"},{"align":null}),`false`),mdx("td",_extends({parentName:"tr"},{"align":null}),`none`)))),mdx("h4",{"id":"responses-19"},`Responses`),mdx("a",{id:"get-user-facing-self-service-errors-responses"}),mdx("h5",{"id":"overview-19"},`Overview`),mdx("table",null,mdx("thead",{parentName:"table"},mdx("tr",{parentName:"thead"},mdx("th",_extends({parentName:"tr"},{"align":null}),`Status`),mdx("th",_extends({parentName:"tr"},{"align":null}),`Meaning`),mdx("th",_extends({parentName:"tr"},{"align":null}),`Description`),mdx("th",_extends({parentName:"tr"},{"align":null}),`Schema`))),mdx("tbody",{parentName:"table"},mdx("tr",{parentName:"tbody"},mdx("td",_extends({parentName:"tr"},{"align":null}),`200`),mdx("td",_extends({parentName:"tr"},{"align":null}),mdx("a",_extends({parentName:"td"},{"href":"https://tools.ietf.org/html/rfc7231#section-6.3.1"}),`OK`)),mdx("td",_extends({parentName:"tr"},{"align":null}),`User-facing error response`),mdx("td",_extends({parentName:"tr"},{"align":null}),mdx("a",_extends({parentName:"td"},{"href":"#schemaerrorcontainer"}),`errorContainer`))),mdx("tr",{parentName:"tbody"},mdx("td",_extends({parentName:"tr"},{"align":null}),`403`),mdx("td",_extends({parentName:"tr"},{"align":null}),mdx("a",_extends({parentName:"td"},{"href":"https://tools.ietf.org/html/rfc7231#section-6.5.3"}),`Forbidden`)),mdx("td",_extends({parentName:"tr"},{"align":null}),`genericError`),mdx("td",_extends({parentName:"tr"},{"align":null}),mdx("a",_extends({parentName:"td"},{"href":"#schemagenericerror"}),`genericError`))),mdx("tr",{parentName:"tbody"},mdx("td",_extends({parentName:"tr"},{"align":null}),`404`),mdx("td",_extends({parentName:"tr"},{"align":null}),mdx("a",_extends({parentName:"td"},{"href":"https://tools.ietf.org/html/rfc7231#section-6.5.4"}),`Not Found`)),mdx("td",_extends({parentName:"tr"},{"align":null}),`genericError`),mdx("td",_extends({parentName:"tr"},{"align":null}),mdx("a",_extends({parentName:"td"},{"href":"#schemagenericerror"}),`genericError`))),mdx("tr",{parentName:"tbody"},mdx("td",_extends({parentName:"tr"},{"align":null}),`500`),mdx("td",_extends({parentName:"tr"},{"align":null}),mdx("a",_extends({parentName:"td"},{"href":"https://tools.ietf.org/html/rfc7231#section-6.6.1"}),`Internal Server Error`)),mdx("td",_extends({parentName:"tr"},{"align":null}),`genericError`),mdx("td",_extends({parentName:"tr"},{"align":null}),mdx("a",_extends({parentName:"td"},{"href":"#schemagenericerror"}),`genericError`))))),mdx("h5",{"id":"examples-19"},`Examples`),mdx("h6",{"id":"200-response-10"},`200 response`),mdx("pre",null,mdx("code",_extends({parentName:"pre"},{"className":"language-json"}),`{
  "errors": {},
  "id": "string"
}
`)),mdx("aside",{class:"success"},"This operation does not require authentication"),mdx("h4",{"id":"code-samples-19"},`Code samples`),mdx("div",{class:"tabs",id:"tab-getSelfServiceError"},mdx("nav",{class:"tabs-nav"},mdx("ul",{class:"nav nav-tabs au-link-list au-link-list--inline"},mdx("li",{class:"nav-item"},mdx("a",{class:"nav-link active",role:"tab",href:"#tab-getSelfServiceError-shell"},"Shell")),mdx("li",{class:"nav-item"},mdx("a",{class:"nav-link",role:"tab",href:"#tab-getSelfServiceError-go"},"Go")),mdx("li",{class:"nav-item"},mdx("a",{class:"nav-link",role:"tab",href:"#tab-getSelfServiceError-node"},"Node.js")),mdx("li",{class:"nav-item"},mdx("a",{class:"nav-link",role:"tab",href:"#tab-getSelfServiceError-java"},"Java")),mdx("li",{class:"nav-item"},mdx("a",{class:"nav-link",role:"tab",href:"#tab-getSelfServiceError-python"},"Python")),mdx("li",{class:"nav-item"},mdx("a",{class:"nav-link",role:"tab",href:"#tab-getSelfServiceError-ruby"},"Ruby")))),mdx("div",{class:"tab-content"},mdx("div",{class:"tab-pane active",role:"tabpanel",id:"tab-getSelfServiceError-shell"},mdx("pre",null,mdx("code",_extends({parentName:"pre"},{"className":"language-shell"}),`curl -X GET /self-service/errors \\
  -H 'Accept: application/json'
`))),mdx("div",{class:"tab-pane",role:"tabpanel",id:"tab-getSelfServiceError-go"},mdx("pre",null,mdx("code",_extends({parentName:"pre"},{"className":"language-go"}),`package main

import (
    "bytes"
    "net/http"
)

func main() {
    headers := map[string][]string{
        "Accept": []string{"application/json"},
    }

    var body []byte
    // body = ...

    req, err := http.NewRequest("GET", "/self-service/errors", bytes.NewBuffer(body))
    req.Header = headers

    client := &http.Client{}
    resp, err := client.Do(req)
    // ...
}
`))),mdx("div",{class:"tab-pane",role:"tabpanel",id:"tab-getSelfServiceError-node"},mdx("pre",null,mdx("code",_extends({parentName:"pre"},{"className":"language-nodejs"}),`const fetch = require('node-fetch');

const headers = {
  'Accept': 'application/json'
}

fetch('/self-service/errors', {
  method: 'GET',
  headers
})
.then(r => r.json())
.then((body) => {
    console.log(body)
})
`))),mdx("div",{class:"tab-pane",role:"tabpanel",id:"tab-getSelfServiceError-java"},mdx("pre",null,mdx("code",_extends({parentName:"pre"},{"className":"language-java"}),`// This sample needs improvement.
URL obj = new URL("/self-service/errors");

HttpURLConnection con = (HttpURLConnection) obj.openConnection();
con.setRequestMethod("GET");

int responseCode = con.getResponseCode();

BufferedReader in = new BufferedReader(
    new InputStreamReader(con.getInputStream())
);

String inputLine;
StringBuffer response = new StringBuffer();
while ((inputLine = in.readLine()) != null) {
    response.append(inputLine);
}
in.close();

System.out.println(response.toString());
`))),mdx("div",{class:"tab-pane",role:"tabpanel",id:"tab-getSelfServiceError-python"},mdx("pre",null,mdx("code",_extends({parentName:"pre"},{"className":"language-python"}),`import requests

headers = {
  'Accept': 'application/json'
}

r = requests.get(
  '/self-service/errors',
  params={},
  headers = headers)

print r.json()
`))),mdx("div",{class:"tab-pane",role:"tabpanel",id:"tab-getSelfServiceError-ruby"},mdx("pre",null,mdx("code",_extends({parentName:"pre"},{"className":"language-ruby"}),`require 'rest-client'
require 'json'

headers = {
  'Accept' => 'application/json'
}

result = RestClient.get '/self-service/errors',
  params: {}, headers: headers

p JSON.parse(result)
`))))),mdx("a",{id:"ory-kratos-version"}),mdx("h2",{"id":"version"},`version`),mdx("a",{id:"opIdgetVersion"}),mdx("h3",{"id":"get-service-version"},`Get service version`),mdx("pre",null,mdx("code",_extends({parentName:"pre"},{}),`GET /version HTTP/1.1
Accept: application/json

`)),mdx("p",null,`This endpoint returns the service version typically notated using semantic
versioning.`),mdx("p",null,`If the service supports TLS Edge Termination, this endpoint does not require the
`,mdx("inlineCode",{parentName:"p"},`X-Forwarded-Proto`),` header to be set.`),mdx("p",null,`Be aware that if you are running multiple nodes of this service, the health
status will never refer to the cluster state, only to a single instance.`),mdx("h4",{"id":"responses-20"},`Responses`),mdx("a",{id:"get-service-version-responses"}),mdx("h5",{"id":"overview-20"},`Overview`),mdx("table",null,mdx("thead",{parentName:"table"},mdx("tr",{parentName:"thead"},mdx("th",_extends({parentName:"tr"},{"align":null}),`Status`),mdx("th",_extends({parentName:"tr"},{"align":null}),`Meaning`),mdx("th",_extends({parentName:"tr"},{"align":null}),`Description`),mdx("th",_extends({parentName:"tr"},{"align":null}),`Schema`))),mdx("tbody",{parentName:"table"},mdx("tr",{parentName:"tbody"},mdx("td",_extends({parentName:"tr"},{"align":null}),`200`),mdx("td",_extends({parentName:"tr"},{"align":null}),mdx("a",_extends({parentName:"td"},{"href":"https://tools.ietf.org/html/rfc7231#section-6.3.1"}),`OK`)),mdx("td",_extends({parentName:"tr"},{"align":null}),`version`),mdx("td",_extends({parentName:"tr"},{"align":null}),mdx("a",_extends({parentName:"td"},{"href":"#schemaversion"}),`version`))))),mdx("h5",{"id":"examples-20"},`Examples`),mdx("h6",{"id":"200-response-11"},`200 response`),mdx("pre",null,mdx("code",_extends({parentName:"pre"},{"className":"language-json"}),`{
  "version": "string"
}
`)),mdx("aside",{class:"success"},"This operation does not require authentication"),mdx("h4",{"id":"code-samples-20"},`Code samples`),mdx("div",{class:"tabs",id:"tab-getVersion"},mdx("nav",{class:"tabs-nav"},mdx("ul",{class:"nav nav-tabs au-link-list au-link-list--inline"},mdx("li",{class:"nav-item"},mdx("a",{class:"nav-link active",role:"tab",href:"#tab-getVersion-shell"},"Shell")),mdx("li",{class:"nav-item"},mdx("a",{class:"nav-link",role:"tab",href:"#tab-getVersion-go"},"Go")),mdx("li",{class:"nav-item"},mdx("a",{class:"nav-link",role:"tab",href:"#tab-getVersion-node"},"Node.js")),mdx("li",{class:"nav-item"},mdx("a",{class:"nav-link",role:"tab",href:"#tab-getVersion-java"},"Java")),mdx("li",{class:"nav-item"},mdx("a",{class:"nav-link",role:"tab",href:"#tab-getVersion-python"},"Python")),mdx("li",{class:"nav-item"},mdx("a",{class:"nav-link",role:"tab",href:"#tab-getVersion-ruby"},"Ruby")))),mdx("div",{class:"tab-content"},mdx("div",{class:"tab-pane active",role:"tabpanel",id:"tab-getVersion-shell"},mdx("pre",null,mdx("code",_extends({parentName:"pre"},{"className":"language-shell"}),`curl -X GET /version \\
  -H 'Accept: application/json'
`))),mdx("div",{class:"tab-pane",role:"tabpanel",id:"tab-getVersion-go"},mdx("pre",null,mdx("code",_extends({parentName:"pre"},{"className":"language-go"}),`package main

import (
    "bytes"
    "net/http"
)

func main() {
    headers := map[string][]string{
        "Accept": []string{"application/json"},
    }

    var body []byte
    // body = ...

    req, err := http.NewRequest("GET", "/version", bytes.NewBuffer(body))
    req.Header = headers

    client := &http.Client{}
    resp, err := client.Do(req)
    // ...
}
`))),mdx("div",{class:"tab-pane",role:"tabpanel",id:"tab-getVersion-node"},mdx("pre",null,mdx("code",_extends({parentName:"pre"},{"className":"language-nodejs"}),`const fetch = require('node-fetch');

const headers = {
  'Accept': 'application/json'
}

fetch('/version', {
  method: 'GET',
  headers
})
.then(r => r.json())
.then((body) => {
    console.log(body)
})
`))),mdx("div",{class:"tab-pane",role:"tabpanel",id:"tab-getVersion-java"},mdx("pre",null,mdx("code",_extends({parentName:"pre"},{"className":"language-java"}),`// This sample needs improvement.
URL obj = new URL("/version");

HttpURLConnection con = (HttpURLConnection) obj.openConnection();
con.setRequestMethod("GET");

int responseCode = con.getResponseCode();

BufferedReader in = new BufferedReader(
    new InputStreamReader(con.getInputStream())
);

String inputLine;
StringBuffer response = new StringBuffer();
while ((inputLine = in.readLine()) != null) {
    response.append(inputLine);
}
in.close();

System.out.println(response.toString());
`))),mdx("div",{class:"tab-pane",role:"tabpanel",id:"tab-getVersion-python"},mdx("pre",null,mdx("code",_extends({parentName:"pre"},{"className":"language-python"}),`import requests

headers = {
  'Accept': 'application/json'
}

r = requests.get(
  '/version',
  params={},
  headers = headers)

print r.json()
`))),mdx("div",{class:"tab-pane",role:"tabpanel",id:"tab-getVersion-ruby"},mdx("pre",null,mdx("code",_extends({parentName:"pre"},{"className":"language-ruby"}),`require 'rest-client'
require 'json'

headers = {
  'Accept' => 'application/json'
}

result = RestClient.get '/version',
  params: {}, headers: headers

p JSON.parse(result)
`))))),mdx("h2",{"id":"schemas"},`Schemas`),mdx("a",{id:"tocScredentialstype"},"CredentialsType"),mdx("h4",{"id":"credentialstype"},`CredentialsType`),mdx("a",{id:"schemacredentialstype"}),mdx("pre",null,mdx("code",_extends({parentName:"pre"},{"className":"language-json"}),`"string"
`)),mdx("p",null,mdx("em",{parentName:"p"},`CredentialsType represents several different credential types, like password
credentials, passwordless credentials,`)),mdx("h4",{"id":"properties"},`Properties`),mdx("table",null,mdx("thead",{parentName:"table"},mdx("tr",{parentName:"thead"},mdx("th",_extends({parentName:"tr"},{"align":null}),`Name`),mdx("th",_extends({parentName:"tr"},{"align":null}),`Type`),mdx("th",_extends({parentName:"tr"},{"align":null}),`Required`),mdx("th",_extends({parentName:"tr"},{"align":null}),`Restrictions`),mdx("th",_extends({parentName:"tr"},{"align":null}),`Description`))),mdx("tbody",{parentName:"table"},mdx("tr",{parentName:"tbody"},mdx("td",_extends({parentName:"tr"},{"align":null}),`CredentialsType represents several different credential types, like password credentials, passwordless credentials,`),mdx("td",_extends({parentName:"tr"},{"align":null}),`string`),mdx("td",_extends({parentName:"tr"},{"align":null}),`false`),mdx("td",_extends({parentName:"tr"},{"align":null}),`none`),mdx("td",_extends({parentName:"tr"},{"align":null}),`and so on.`)))),mdx("a",{id:"tocSerror"},"Error"),mdx("h4",{"id":"error"},`Error`),mdx("a",{id:"schemaerror"}),mdx("pre",null,mdx("code",_extends({parentName:"pre"},{"className":"language-json"}),`{
  "message": "string"
}
`)),mdx("h4",{"id":"properties-1"},`Properties`),mdx("table",null,mdx("thead",{parentName:"table"},mdx("tr",{parentName:"thead"},mdx("th",_extends({parentName:"tr"},{"align":null}),`Name`),mdx("th",_extends({parentName:"tr"},{"align":null}),`Type`),mdx("th",_extends({parentName:"tr"},{"align":null}),`Required`),mdx("th",_extends({parentName:"tr"},{"align":null}),`Restrictions`),mdx("th",_extends({parentName:"tr"},{"align":null}),`Description`))),mdx("tbody",{parentName:"table"},mdx("tr",{parentName:"tbody"},mdx("td",_extends({parentName:"tr"},{"align":null}),`message`),mdx("td",_extends({parentName:"tr"},{"align":null}),`string`),mdx("td",_extends({parentName:"tr"},{"align":null}),`false`),mdx("td",_extends({parentName:"tr"},{"align":null}),`none`),mdx("td",_extends({parentName:"tr"},{"align":null}),`Code FormErrorCode `,mdx("inlineCode",{parentName:"td"},`json:"id,omitempty"`))))),mdx("a",{id:"tocSidentity"},"Identity"),mdx("h4",{"id":"identity"},`Identity`),mdx("a",{id:"schemaidentity"}),mdx("pre",null,mdx("code",_extends({parentName:"pre"},{"className":"language-json"}),`{
  "addresses": [
    {
      "expires_at": "2020-03-25T17:39:55Z",
      "id": "string",
      "value": "string",
      "verified": true,
      "verified_at": "2020-03-25T17:39:55Z",
      "via": "string"
    }
  ],
  "id": "string",
  "traits": {},
  "traits_schema_id": "string",
  "traits_schema_url": "string"
}
`)),mdx("h4",{"id":"properties-2"},`Properties`),mdx("table",null,mdx("thead",{parentName:"table"},mdx("tr",{parentName:"thead"},mdx("th",_extends({parentName:"tr"},{"align":null}),`Name`),mdx("th",_extends({parentName:"tr"},{"align":null}),`Type`),mdx("th",_extends({parentName:"tr"},{"align":null}),`Required`),mdx("th",_extends({parentName:"tr"},{"align":null}),`Restrictions`),mdx("th",_extends({parentName:"tr"},{"align":null}),`Description`))),mdx("tbody",{parentName:"table"},mdx("tr",{parentName:"tbody"},mdx("td",_extends({parentName:"tr"},{"align":null}),`addresses`),mdx("td",_extends({parentName:"tr"},{"align":null}),`[`,mdx("a",_extends({parentName:"td"},{"href":"#schemaverifiableaddress"}),`VerifiableAddress`),`]`),mdx("td",_extends({parentName:"tr"},{"align":null}),`false`),mdx("td",_extends({parentName:"tr"},{"align":null}),`none`),mdx("td",_extends({parentName:"tr"},{"align":null}),`none`)),mdx("tr",{parentName:"tbody"},mdx("td",_extends({parentName:"tr"},{"align":null}),`id`),mdx("td",_extends({parentName:"tr"},{"align":null}),mdx("a",_extends({parentName:"td"},{"href":"#schemauuid"}),`UUID`)),mdx("td",_extends({parentName:"tr"},{"align":null}),`true`),mdx("td",_extends({parentName:"tr"},{"align":null}),`none`),mdx("td",_extends({parentName:"tr"},{"align":null}),`none`)),mdx("tr",{parentName:"tbody"},mdx("td",_extends({parentName:"tr"},{"align":null}),`traits`),mdx("td",_extends({parentName:"tr"},{"align":null}),mdx("a",_extends({parentName:"td"},{"href":"#schematraits"}),`Traits`)),mdx("td",_extends({parentName:"tr"},{"align":null}),`true`),mdx("td",_extends({parentName:"tr"},{"align":null}),`none`),mdx("td",_extends({parentName:"tr"},{"align":null}),`none`)),mdx("tr",{parentName:"tbody"},mdx("td",_extends({parentName:"tr"},{"align":null}),`traits_schema_id`),mdx("td",_extends({parentName:"tr"},{"align":null}),`string`),mdx("td",_extends({parentName:"tr"},{"align":null}),`true`),mdx("td",_extends({parentName:"tr"},{"align":null}),`none`),mdx("td",_extends({parentName:"tr"},{"align":null}),`TraitsSchemaID is the ID of the JSON Schema to be used for validating the identity's traits.`)),mdx("tr",{parentName:"tbody"},mdx("td",_extends({parentName:"tr"},{"align":null}),`traits_schema_url`),mdx("td",_extends({parentName:"tr"},{"align":null}),`string`),mdx("td",_extends({parentName:"tr"},{"align":null}),`false`),mdx("td",_extends({parentName:"tr"},{"align":null}),`none`),mdx("td",_extends({parentName:"tr"},{"align":null}),`TraitsSchemaURL is the URL of the endpoint where the identity's traits schema can be fetched from. format: url`)))),mdx("a",{id:"tocStraits"},"Traits"),mdx("h4",{"id":"traits"},`Traits`),mdx("a",{id:"schematraits"}),mdx("pre",null,mdx("code",_extends({parentName:"pre"},{"className":"language-json"}),`{}
`)),mdx("h4",{"id":"properties-3"},`Properties`),mdx("p",null,mdx("em",{parentName:"p"},`None`)),mdx("a",{id:"tocSuuid"},"UUID"),mdx("h4",{"id":"uuid"},`UUID`),mdx("a",{id:"schemauuid"}),mdx("pre",null,mdx("code",_extends({parentName:"pre"},{"className":"language-json"}),`"string"
`)),mdx("h4",{"id":"properties-4"},`Properties`),mdx("table",null,mdx("thead",{parentName:"table"},mdx("tr",{parentName:"thead"},mdx("th",_extends({parentName:"tr"},{"align":null}),`Name`),mdx("th",_extends({parentName:"tr"},{"align":null}),`Type`),mdx("th",_extends({parentName:"tr"},{"align":null}),`Required`),mdx("th",_extends({parentName:"tr"},{"align":null}),`Restrictions`),mdx("th",_extends({parentName:"tr"},{"align":null}),`Description`))),mdx("tbody",{parentName:"table"},mdx("tr",{parentName:"tbody"},mdx("td",_extends({parentName:"tr"},{"align":null}),mdx("em",{parentName:"td"},`anonymous`)),mdx("td",_extends({parentName:"tr"},{"align":null}),`string(uuid4)`),mdx("td",_extends({parentName:"tr"},{"align":null}),`false`),mdx("td",_extends({parentName:"tr"},{"align":null}),`none`),mdx("td",_extends({parentName:"tr"},{"align":null}),`none`)))),mdx("a",{id:"tocSverifiableaddress"},"VerifiableAddress"),mdx("h4",{"id":"verifiableaddress"},`VerifiableAddress`),mdx("a",{id:"schemaverifiableaddress"}),mdx("pre",null,mdx("code",_extends({parentName:"pre"},{"className":"language-json"}),`{
  "expires_at": "2020-03-25T17:39:55Z",
  "id": "string",
  "value": "string",
  "verified": true,
  "verified_at": "2020-03-25T17:39:55Z",
  "via": "string"
}
`)),mdx("h4",{"id":"properties-5"},`Properties`),mdx("table",null,mdx("thead",{parentName:"table"},mdx("tr",{parentName:"thead"},mdx("th",_extends({parentName:"tr"},{"align":null}),`Name`),mdx("th",_extends({parentName:"tr"},{"align":null}),`Type`),mdx("th",_extends({parentName:"tr"},{"align":null}),`Required`),mdx("th",_extends({parentName:"tr"},{"align":null}),`Restrictions`),mdx("th",_extends({parentName:"tr"},{"align":null}),`Description`))),mdx("tbody",{parentName:"table"},mdx("tr",{parentName:"tbody"},mdx("td",_extends({parentName:"tr"},{"align":null}),`expires_at`),mdx("td",_extends({parentName:"tr"},{"align":null}),`string(date-time)`),mdx("td",_extends({parentName:"tr"},{"align":null}),`true`),mdx("td",_extends({parentName:"tr"},{"align":null}),`none`),mdx("td",_extends({parentName:"tr"},{"align":null}),`none`)),mdx("tr",{parentName:"tbody"},mdx("td",_extends({parentName:"tr"},{"align":null}),`id`),mdx("td",_extends({parentName:"tr"},{"align":null}),mdx("a",_extends({parentName:"td"},{"href":"#schemauuid"}),`UUID`)),mdx("td",_extends({parentName:"tr"},{"align":null}),`true`),mdx("td",_extends({parentName:"tr"},{"align":null}),`none`),mdx("td",_extends({parentName:"tr"},{"align":null}),`none`)),mdx("tr",{parentName:"tbody"},mdx("td",_extends({parentName:"tr"},{"align":null}),`value`),mdx("td",_extends({parentName:"tr"},{"align":null}),`string`),mdx("td",_extends({parentName:"tr"},{"align":null}),`true`),mdx("td",_extends({parentName:"tr"},{"align":null}),`none`),mdx("td",_extends({parentName:"tr"},{"align":null}),`none`)),mdx("tr",{parentName:"tbody"},mdx("td",_extends({parentName:"tr"},{"align":null}),`verified`),mdx("td",_extends({parentName:"tr"},{"align":null}),`boolean`),mdx("td",_extends({parentName:"tr"},{"align":null}),`true`),mdx("td",_extends({parentName:"tr"},{"align":null}),`none`),mdx("td",_extends({parentName:"tr"},{"align":null}),`none`)),mdx("tr",{parentName:"tbody"},mdx("td",_extends({parentName:"tr"},{"align":null}),`verified_at`),mdx("td",_extends({parentName:"tr"},{"align":null}),`string(date-time)`),mdx("td",_extends({parentName:"tr"},{"align":null}),`true`),mdx("td",_extends({parentName:"tr"},{"align":null}),`none`),mdx("td",_extends({parentName:"tr"},{"align":null}),`none`)),mdx("tr",{parentName:"tbody"},mdx("td",_extends({parentName:"tr"},{"align":null}),`via`),mdx("td",_extends({parentName:"tr"},{"align":null}),mdx("a",_extends({parentName:"td"},{"href":"#schemaverifiableaddresstype"}),`VerifiableAddressType`)),mdx("td",_extends({parentName:"tr"},{"align":null}),`true`),mdx("td",_extends({parentName:"tr"},{"align":null}),`none`),mdx("td",_extends({parentName:"tr"},{"align":null}),`none`)))),mdx("a",{id:"tocSverifiableaddresstype"},"VerifiableAddressType"),mdx("h4",{"id":"verifiableaddresstype"},`VerifiableAddressType`),mdx("a",{id:"schemaverifiableaddresstype"}),mdx("pre",null,mdx("code",_extends({parentName:"pre"},{"className":"language-json"}),`"string"
`)),mdx("h4",{"id":"properties-6"},`Properties`),mdx("table",null,mdx("thead",{parentName:"table"},mdx("tr",{parentName:"thead"},mdx("th",_extends({parentName:"tr"},{"align":null}),`Name`),mdx("th",_extends({parentName:"tr"},{"align":null}),`Type`),mdx("th",_extends({parentName:"tr"},{"align":null}),`Required`),mdx("th",_extends({parentName:"tr"},{"align":null}),`Restrictions`),mdx("th",_extends({parentName:"tr"},{"align":null}),`Description`))),mdx("tbody",{parentName:"table"},mdx("tr",{parentName:"tbody"},mdx("td",_extends({parentName:"tr"},{"align":null}),mdx("em",{parentName:"td"},`anonymous`)),mdx("td",_extends({parentName:"tr"},{"align":null}),`string`),mdx("td",_extends({parentName:"tr"},{"align":null}),`false`),mdx("td",_extends({parentName:"tr"},{"align":null}),`none`),mdx("td",_extends({parentName:"tr"},{"align":null}),`none`)))),mdx("a",{id:"tocScompleteselfservicebrowserprofilemanagementflowpayload"},"completeSelfServiceBrowserProfileManagementFlowPayload"),mdx("h4",{"id":"completeselfservicebrowserprofilemanagementflowpayload"},`completeSelfServiceBrowserProfileManagementFlowPayload`),mdx("a",{id:"schemacompleteselfservicebrowserprofilemanagementflowpayload"}),mdx("pre",null,mdx("code",_extends({parentName:"pre"},{"className":"language-json"}),`{
  "traits": {}
}
`)),mdx("h4",{"id":"properties-7"},`Properties`),mdx("table",null,mdx("thead",{parentName:"table"},mdx("tr",{parentName:"thead"},mdx("th",_extends({parentName:"tr"},{"align":null}),`Name`),mdx("th",_extends({parentName:"tr"},{"align":null}),`Type`),mdx("th",_extends({parentName:"tr"},{"align":null}),`Required`),mdx("th",_extends({parentName:"tr"},{"align":null}),`Restrictions`),mdx("th",_extends({parentName:"tr"},{"align":null}),`Description`))),mdx("tbody",{parentName:"table"},mdx("tr",{parentName:"tbody"},mdx("td",_extends({parentName:"tr"},{"align":null}),`traits`),mdx("td",_extends({parentName:"tr"},{"align":null}),`object`),mdx("td",_extends({parentName:"tr"},{"align":null}),`true`),mdx("td",_extends({parentName:"tr"},{"align":null}),`none`),mdx("td",_extends({parentName:"tr"},{"align":null}),`Traits contains all of the identity's traits. type: string format: binary`)))),mdx("a",{id:"tocSerrorcontainer"},"errorContainer"),mdx("h4",{"id":"errorcontainer"},`errorContainer`),mdx("a",{id:"schemaerrorcontainer"}),mdx("pre",null,mdx("code",_extends({parentName:"pre"},{"className":"language-json"}),`{
  "errors": {},
  "id": "string"
}
`)),mdx("h4",{"id":"properties-8"},`Properties`),mdx("table",null,mdx("thead",{parentName:"table"},mdx("tr",{parentName:"thead"},mdx("th",_extends({parentName:"tr"},{"align":null}),`Name`),mdx("th",_extends({parentName:"tr"},{"align":null}),`Type`),mdx("th",_extends({parentName:"tr"},{"align":null}),`Required`),mdx("th",_extends({parentName:"tr"},{"align":null}),`Restrictions`),mdx("th",_extends({parentName:"tr"},{"align":null}),`Description`))),mdx("tbody",{parentName:"table"},mdx("tr",{parentName:"tbody"},mdx("td",_extends({parentName:"tr"},{"align":null}),`errors`),mdx("td",_extends({parentName:"tr"},{"align":null}),`object`),mdx("td",_extends({parentName:"tr"},{"align":null}),`false`),mdx("td",_extends({parentName:"tr"},{"align":null}),`none`),mdx("td",_extends({parentName:"tr"},{"align":null}),`none`)),mdx("tr",{parentName:"tbody"},mdx("td",_extends({parentName:"tr"},{"align":null}),`id`),mdx("td",_extends({parentName:"tr"},{"align":null}),mdx("a",_extends({parentName:"td"},{"href":"#schemauuid"}),`UUID`)),mdx("td",_extends({parentName:"tr"},{"align":null}),`false`),mdx("td",_extends({parentName:"tr"},{"align":null}),`none`),mdx("td",_extends({parentName:"tr"},{"align":null}),`none`)))),mdx("a",{id:"tocSform"},"form"),mdx("h4",{"id":"form"},`form`),mdx("a",{id:"schemaform"}),mdx("pre",null,mdx("code",_extends({parentName:"pre"},{"className":"language-json"}),`{
  "action": "string",
  "errors": [
    {
      "message": "string"
    }
  ],
  "fields": [
    {
      "disabled": true,
      "errors": [
        {
          "message": "string"
        }
      ],
      "name": "string",
      "pattern": "string",
      "required": true,
      "type": "string",
      "value": {}
    }
  ],
  "method": "string"
}
`)),mdx("p",null,mdx("em",{parentName:"p"},`HTMLForm represents a HTML Form. The container can work with both HTTP Form and
JSON requests`)),mdx("h4",{"id":"properties-9"},`Properties`),mdx("table",null,mdx("thead",{parentName:"table"},mdx("tr",{parentName:"thead"},mdx("th",_extends({parentName:"tr"},{"align":null}),`Name`),mdx("th",_extends({parentName:"tr"},{"align":null}),`Type`),mdx("th",_extends({parentName:"tr"},{"align":null}),`Required`),mdx("th",_extends({parentName:"tr"},{"align":null}),`Restrictions`),mdx("th",_extends({parentName:"tr"},{"align":null}),`Description`))),mdx("tbody",{parentName:"table"},mdx("tr",{parentName:"tbody"},mdx("td",_extends({parentName:"tr"},{"align":null}),`action`),mdx("td",_extends({parentName:"tr"},{"align":null}),`string`),mdx("td",_extends({parentName:"tr"},{"align":null}),`true`),mdx("td",_extends({parentName:"tr"},{"align":null}),`none`),mdx("td",_extends({parentName:"tr"},{"align":null}),`Action should be used as the form action URL `,mdx("inlineCode",{parentName:"td"},`<form action="{{ .Action }}" method="post">`),`.`)),mdx("tr",{parentName:"tbody"},mdx("td",_extends({parentName:"tr"},{"align":null}),`errors`),mdx("td",_extends({parentName:"tr"},{"align":null}),`[`,mdx("a",_extends({parentName:"td"},{"href":"#schemaerror"}),`Error`),`]`),mdx("td",_extends({parentName:"tr"},{"align":null}),`false`),mdx("td",_extends({parentName:"tr"},{"align":null}),`none`),mdx("td",_extends({parentName:"tr"},{"align":null}),`Errors contains all form errors. These will be duplicates of the individual field errors.`)),mdx("tr",{parentName:"tbody"},mdx("td",_extends({parentName:"tr"},{"align":null}),`fields`),mdx("td",_extends({parentName:"tr"},{"align":null}),mdx("a",_extends({parentName:"td"},{"href":"#schemaformfields"}),`formFields`)),mdx("td",_extends({parentName:"tr"},{"align":null}),`true`),mdx("td",_extends({parentName:"tr"},{"align":null}),`none`),mdx("td",_extends({parentName:"tr"},{"align":null}),`Fields contains multiple fields`)),mdx("tr",{parentName:"tbody"},mdx("td",_extends({parentName:"tr"},{"align":null}),`method`),mdx("td",_extends({parentName:"tr"},{"align":null}),`string`),mdx("td",_extends({parentName:"tr"},{"align":null}),`true`),mdx("td",_extends({parentName:"tr"},{"align":null}),`none`),mdx("td",_extends({parentName:"tr"},{"align":null}),`Method is the form method (e.g. POST)`)))),mdx("a",{id:"tocSformfield"},"formField"),mdx("h4",{"id":"formfield"},`formField`),mdx("a",{id:"schemaformfield"}),mdx("pre",null,mdx("code",_extends({parentName:"pre"},{"className":"language-json"}),`{
  "disabled": true,
  "errors": [
    {
      "message": "string"
    }
  ],
  "name": "string",
  "pattern": "string",
  "required": true,
  "type": "string",
  "value": {}
}
`)),mdx("p",null,mdx("em",{parentName:"p"},`Field represents a HTML Form Field`)),mdx("h4",{"id":"properties-10"},`Properties`),mdx("table",null,mdx("thead",{parentName:"table"},mdx("tr",{parentName:"thead"},mdx("th",_extends({parentName:"tr"},{"align":null}),`Name`),mdx("th",_extends({parentName:"tr"},{"align":null}),`Type`),mdx("th",_extends({parentName:"tr"},{"align":null}),`Required`),mdx("th",_extends({parentName:"tr"},{"align":null}),`Restrictions`),mdx("th",_extends({parentName:"tr"},{"align":null}),`Description`))),mdx("tbody",{parentName:"table"},mdx("tr",{parentName:"tbody"},mdx("td",_extends({parentName:"tr"},{"align":null}),`disabled`),mdx("td",_extends({parentName:"tr"},{"align":null}),`boolean`),mdx("td",_extends({parentName:"tr"},{"align":null}),`false`),mdx("td",_extends({parentName:"tr"},{"align":null}),`none`),mdx("td",_extends({parentName:"tr"},{"align":null}),`Disabled is the equivalent of `,mdx("inlineCode",{parentName:"td"},`<input disabled="{{.Disabled}}">`))),mdx("tr",{parentName:"tbody"},mdx("td",_extends({parentName:"tr"},{"align":null}),`errors`),mdx("td",_extends({parentName:"tr"},{"align":null}),`[`,mdx("a",_extends({parentName:"td"},{"href":"#schemaerror"}),`Error`),`]`),mdx("td",_extends({parentName:"tr"},{"align":null}),`false`),mdx("td",_extends({parentName:"tr"},{"align":null}),`none`),mdx("td",_extends({parentName:"tr"},{"align":null}),`Errors contains all validation errors this particular field has caused.`)),mdx("tr",{parentName:"tbody"},mdx("td",_extends({parentName:"tr"},{"align":null}),`name`),mdx("td",_extends({parentName:"tr"},{"align":null}),`string`),mdx("td",_extends({parentName:"tr"},{"align":null}),`true`),mdx("td",_extends({parentName:"tr"},{"align":null}),`none`),mdx("td",_extends({parentName:"tr"},{"align":null}),`Name is the equivalent of `,mdx("inlineCode",{parentName:"td"},`<input name="{{.Name}}">`))),mdx("tr",{parentName:"tbody"},mdx("td",_extends({parentName:"tr"},{"align":null}),`pattern`),mdx("td",_extends({parentName:"tr"},{"align":null}),`string`),mdx("td",_extends({parentName:"tr"},{"align":null}),`false`),mdx("td",_extends({parentName:"tr"},{"align":null}),`none`),mdx("td",_extends({parentName:"tr"},{"align":null}),`Pattern is the equivalent of `,mdx("inlineCode",{parentName:"td"},`<input pattern="{{.Pattern}}">`))),mdx("tr",{parentName:"tbody"},mdx("td",_extends({parentName:"tr"},{"align":null}),`required`),mdx("td",_extends({parentName:"tr"},{"align":null}),`boolean`),mdx("td",_extends({parentName:"tr"},{"align":null}),`true`),mdx("td",_extends({parentName:"tr"},{"align":null}),`none`),mdx("td",_extends({parentName:"tr"},{"align":null}),`Required is the equivalent of `,mdx("inlineCode",{parentName:"td"},`<input required="{{.Required}}">`))),mdx("tr",{parentName:"tbody"},mdx("td",_extends({parentName:"tr"},{"align":null}),`type`),mdx("td",_extends({parentName:"tr"},{"align":null}),`string`),mdx("td",_extends({parentName:"tr"},{"align":null}),`true`),mdx("td",_extends({parentName:"tr"},{"align":null}),`none`),mdx("td",_extends({parentName:"tr"},{"align":null}),`Type is the equivalent of `,mdx("inlineCode",{parentName:"td"},`<input type="{{.Type}}">`))),mdx("tr",{parentName:"tbody"},mdx("td",_extends({parentName:"tr"},{"align":null}),`value`),mdx("td",_extends({parentName:"tr"},{"align":null}),`object`),mdx("td",_extends({parentName:"tr"},{"align":null}),`false`),mdx("td",_extends({parentName:"tr"},{"align":null}),`none`),mdx("td",_extends({parentName:"tr"},{"align":null}),`Value is the equivalent of `,mdx("inlineCode",{parentName:"td"},`<input value="{{.Value}}">`))))),mdx("a",{id:"tocSformfields"},"formFields"),mdx("h4",{"id":"formfields"},`formFields`),mdx("a",{id:"schemaformfields"}),mdx("pre",null,mdx("code",_extends({parentName:"pre"},{"className":"language-json"}),`[
  {
    "disabled": true,
    "errors": [
      {
        "message": "string"
      }
    ],
    "name": "string",
    "pattern": "string",
    "required": true,
    "type": "string",
    "value": {}
  }
]
`)),mdx("p",null,mdx("em",{parentName:"p"},`Fields contains multiple fields`)),mdx("h4",{"id":"properties-11"},`Properties`),mdx("table",null,mdx("thead",{parentName:"table"},mdx("tr",{parentName:"thead"},mdx("th",_extends({parentName:"tr"},{"align":null}),`Name`),mdx("th",_extends({parentName:"tr"},{"align":null}),`Type`),mdx("th",_extends({parentName:"tr"},{"align":null}),`Required`),mdx("th",_extends({parentName:"tr"},{"align":null}),`Restrictions`),mdx("th",_extends({parentName:"tr"},{"align":null}),`Description`))),mdx("tbody",{parentName:"table"},mdx("tr",{parentName:"tbody"},mdx("td",_extends({parentName:"tr"},{"align":null}),mdx("em",{parentName:"td"},`anonymous`)),mdx("td",_extends({parentName:"tr"},{"align":null}),`[`,mdx("a",_extends({parentName:"td"},{"href":"#schemaformfield"}),`formField`),`]`),mdx("td",_extends({parentName:"tr"},{"align":null}),`false`),mdx("td",_extends({parentName:"tr"},{"align":null}),`none`),mdx("td",_extends({parentName:"tr"},{"align":null}),`Fields contains multiple fields`)))),mdx("a",{id:"tocSgenericerror"},"genericError"),mdx("h4",{"id":"genericerror"},`genericError`),mdx("a",{id:"schemagenericerror"}),mdx("pre",null,mdx("code",_extends({parentName:"pre"},{"className":"language-json"}),`{
  "error": {
    "code": 404,
    "debug": "The database adapter was unable to find the element",
    "details": [
      {
        "property1": {},
        "property2": {}
      }
    ],
    "message": "string",
    "reason": "string",
    "request": "string",
    "status": "string"
  }
}
`)),mdx("p",null,mdx("em",{parentName:"p"},`Error response`)),mdx("h4",{"id":"properties-12"},`Properties`),mdx("table",null,mdx("thead",{parentName:"table"},mdx("tr",{parentName:"thead"},mdx("th",_extends({parentName:"tr"},{"align":null}),`Name`),mdx("th",_extends({parentName:"tr"},{"align":null}),`Type`),mdx("th",_extends({parentName:"tr"},{"align":null}),`Required`),mdx("th",_extends({parentName:"tr"},{"align":null}),`Restrictions`),mdx("th",_extends({parentName:"tr"},{"align":null}),`Description`))),mdx("tbody",{parentName:"table"},mdx("tr",{parentName:"tbody"},mdx("td",_extends({parentName:"tr"},{"align":null}),`error`),mdx("td",_extends({parentName:"tr"},{"align":null}),mdx("a",_extends({parentName:"td"},{"href":"#schemagenericerrorpayload"}),`genericErrorPayload`)),mdx("td",_extends({parentName:"tr"},{"align":null}),`false`),mdx("td",_extends({parentName:"tr"},{"align":null}),`none`),mdx("td",_extends({parentName:"tr"},{"align":null}),`nolint:deadcode,unused`)))),mdx("a",{id:"tocSgenericerrorpayload"},"genericErrorPayload"),mdx("h4",{"id":"genericerrorpayload"},`genericErrorPayload`),mdx("a",{id:"schemagenericerrorpayload"}),mdx("pre",null,mdx("code",_extends({parentName:"pre"},{"className":"language-json"}),`{
  "code": 404,
  "debug": "The database adapter was unable to find the element",
  "details": [
    {
      "property1": {},
      "property2": {}
    }
  ],
  "message": "string",
  "reason": "string",
  "request": "string",
  "status": "string"
}
`)),mdx("p",null,mdx("em",{parentName:"p"},`nolint:deadcode,unused`)),mdx("h4",{"id":"properties-13"},`Properties`),mdx("table",null,mdx("thead",{parentName:"table"},mdx("tr",{parentName:"thead"},mdx("th",_extends({parentName:"tr"},{"align":null}),`Name`),mdx("th",_extends({parentName:"tr"},{"align":null}),`Type`),mdx("th",_extends({parentName:"tr"},{"align":null}),`Required`),mdx("th",_extends({parentName:"tr"},{"align":null}),`Restrictions`),mdx("th",_extends({parentName:"tr"},{"align":null}),`Description`))),mdx("tbody",{parentName:"table"},mdx("tr",{parentName:"tbody"},mdx("td",_extends({parentName:"tr"},{"align":null}),`code`),mdx("td",_extends({parentName:"tr"},{"align":null}),`integer(int64)`),mdx("td",_extends({parentName:"tr"},{"align":null}),`false`),mdx("td",_extends({parentName:"tr"},{"align":null}),`none`),mdx("td",_extends({parentName:"tr"},{"align":null}),`Code represents the error status code (404, 403, 401, ...).`)),mdx("tr",{parentName:"tbody"},mdx("td",_extends({parentName:"tr"},{"align":null}),`debug`),mdx("td",_extends({parentName:"tr"},{"align":null}),`string`),mdx("td",_extends({parentName:"tr"},{"align":null}),`false`),mdx("td",_extends({parentName:"tr"},{"align":null}),`none`),mdx("td",_extends({parentName:"tr"},{"align":null}),`Debug contains debug information. This is usually not available and has to be enabled.`)),mdx("tr",{parentName:"tbody"},mdx("td",_extends({parentName:"tr"},{"align":null}),`details`),mdx("td",_extends({parentName:"tr"},{"align":null}),`[object]`),mdx("td",_extends({parentName:"tr"},{"align":null}),`false`),mdx("td",_extends({parentName:"tr"},{"align":null}),`none`),mdx("td",_extends({parentName:"tr"},{"align":null}),`none`)),mdx("tr",{parentName:"tbody"},mdx("td",_extends({parentName:"tr"},{"align":null}),`» `,mdx("strong",{parentName:"td"},`additionalProperties`)),mdx("td",_extends({parentName:"tr"},{"align":null}),`object`),mdx("td",_extends({parentName:"tr"},{"align":null}),`false`),mdx("td",_extends({parentName:"tr"},{"align":null}),`none`),mdx("td",_extends({parentName:"tr"},{"align":null}),`none`)),mdx("tr",{parentName:"tbody"},mdx("td",_extends({parentName:"tr"},{"align":null}),`message`),mdx("td",_extends({parentName:"tr"},{"align":null}),`string`),mdx("td",_extends({parentName:"tr"},{"align":null}),`false`),mdx("td",_extends({parentName:"tr"},{"align":null}),`none`),mdx("td",_extends({parentName:"tr"},{"align":null}),`none`)),mdx("tr",{parentName:"tbody"},mdx("td",_extends({parentName:"tr"},{"align":null}),`reason`),mdx("td",_extends({parentName:"tr"},{"align":null}),`string`),mdx("td",_extends({parentName:"tr"},{"align":null}),`false`),mdx("td",_extends({parentName:"tr"},{"align":null}),`none`),mdx("td",_extends({parentName:"tr"},{"align":null}),`none`)),mdx("tr",{parentName:"tbody"},mdx("td",_extends({parentName:"tr"},{"align":null}),`request`),mdx("td",_extends({parentName:"tr"},{"align":null}),`string`),mdx("td",_extends({parentName:"tr"},{"align":null}),`false`),mdx("td",_extends({parentName:"tr"},{"align":null}),`none`),mdx("td",_extends({parentName:"tr"},{"align":null}),`none`)),mdx("tr",{parentName:"tbody"},mdx("td",_extends({parentName:"tr"},{"align":null}),`status`),mdx("td",_extends({parentName:"tr"},{"align":null}),`string`),mdx("td",_extends({parentName:"tr"},{"align":null}),`false`),mdx("td",_extends({parentName:"tr"},{"align":null}),`none`),mdx("td",_extends({parentName:"tr"},{"align":null}),`none`)))),mdx("a",{id:"tocShealthnotreadystatus"},"healthNotReadyStatus"),mdx("h4",{"id":"healthnotreadystatus"},`healthNotReadyStatus`),mdx("a",{id:"schemahealthnotreadystatus"}),mdx("pre",null,mdx("code",_extends({parentName:"pre"},{"className":"language-json"}),`{
  "errors": {
    "property1": "string",
    "property2": "string"
  }
}
`)),mdx("h4",{"id":"properties-14"},`Properties`),mdx("table",null,mdx("thead",{parentName:"table"},mdx("tr",{parentName:"thead"},mdx("th",_extends({parentName:"tr"},{"align":null}),`Name`),mdx("th",_extends({parentName:"tr"},{"align":null}),`Type`),mdx("th",_extends({parentName:"tr"},{"align":null}),`Required`),mdx("th",_extends({parentName:"tr"},{"align":null}),`Restrictions`),mdx("th",_extends({parentName:"tr"},{"align":null}),`Description`))),mdx("tbody",{parentName:"table"},mdx("tr",{parentName:"tbody"},mdx("td",_extends({parentName:"tr"},{"align":null}),`errors`),mdx("td",_extends({parentName:"tr"},{"align":null}),`object`),mdx("td",_extends({parentName:"tr"},{"align":null}),`false`),mdx("td",_extends({parentName:"tr"},{"align":null}),`none`),mdx("td",_extends({parentName:"tr"},{"align":null}),`Errors contains a list of errors that caused the not ready status.`)),mdx("tr",{parentName:"tbody"},mdx("td",_extends({parentName:"tr"},{"align":null}),`» `,mdx("strong",{parentName:"td"},`additionalProperties`)),mdx("td",_extends({parentName:"tr"},{"align":null}),`string`),mdx("td",_extends({parentName:"tr"},{"align":null}),`false`),mdx("td",_extends({parentName:"tr"},{"align":null}),`none`),mdx("td",_extends({parentName:"tr"},{"align":null}),`none`)))),mdx("a",{id:"tocShealthstatus"},"healthStatus"),mdx("h4",{"id":"healthstatus"},`healthStatus`),mdx("a",{id:"schemahealthstatus"}),mdx("pre",null,mdx("code",_extends({parentName:"pre"},{"className":"language-json"}),`{
  "status": "string"
}
`)),mdx("h4",{"id":"properties-15"},`Properties`),mdx("table",null,mdx("thead",{parentName:"table"},mdx("tr",{parentName:"thead"},mdx("th",_extends({parentName:"tr"},{"align":null}),`Name`),mdx("th",_extends({parentName:"tr"},{"align":null}),`Type`),mdx("th",_extends({parentName:"tr"},{"align":null}),`Required`),mdx("th",_extends({parentName:"tr"},{"align":null}),`Restrictions`),mdx("th",_extends({parentName:"tr"},{"align":null}),`Description`))),mdx("tbody",{parentName:"table"},mdx("tr",{parentName:"tbody"},mdx("td",_extends({parentName:"tr"},{"align":null}),`status`),mdx("td",_extends({parentName:"tr"},{"align":null}),`string`),mdx("td",_extends({parentName:"tr"},{"align":null}),`false`),mdx("td",_extends({parentName:"tr"},{"align":null}),`none`),mdx("td",_extends({parentName:"tr"},{"align":null}),`Status always contains "ok".`)))),mdx("a",{id:"tocSloginrequest"},"loginRequest"),mdx("h4",{"id":"loginrequest"},`loginRequest`),mdx("a",{id:"schemaloginrequest"}),mdx("pre",null,mdx("code",_extends({parentName:"pre"},{"className":"language-json"}),`{
  "active": "string",
  "expires_at": "2020-03-25T17:39:55Z",
  "id": "string",
  "issued_at": "2020-03-25T17:39:55Z",
  "methods": {
    "property1": {
      "config": {
        "action": "string",
        "errors": [
          {
            "message": "string"
          }
        ],
        "fields": [
          {
            "disabled": true,
            "errors": [
              {
                "message": "string"
              }
            ],
            "name": "string",
            "pattern": "string",
            "required": true,
            "type": "string",
            "value": {}
          }
        ],
        "method": "string",
        "providers": [
          {
            "disabled": true,
            "errors": [
              {
                "message": "string"
              }
            ],
            "name": "string",
            "pattern": "string",
            "required": true,
            "type": "string",
            "value": {}
          }
        ]
      },
      "method": "string"
    },
    "property2": {
      "config": {
        "action": "string",
        "errors": [
          {
            "message": "string"
          }
        ],
        "fields": [
          {
            "disabled": true,
            "errors": [
              {
                "message": "string"
              }
            ],
            "name": "string",
            "pattern": "string",
            "required": true,
            "type": "string",
            "value": {}
          }
        ],
        "method": "string",
        "providers": [
          {
            "disabled": true,
            "errors": [
              {
                "message": "string"
              }
            ],
            "name": "string",
            "pattern": "string",
            "required": true,
            "type": "string",
            "value": {}
          }
        ]
      },
      "method": "string"
    }
  },
  "request_url": "string"
}
`)),mdx("h4",{"id":"properties-16"},`Properties`),mdx("table",null,mdx("thead",{parentName:"table"},mdx("tr",{parentName:"thead"},mdx("th",_extends({parentName:"tr"},{"align":null}),`Name`),mdx("th",_extends({parentName:"tr"},{"align":null}),`Type`),mdx("th",_extends({parentName:"tr"},{"align":null}),`Required`),mdx("th",_extends({parentName:"tr"},{"align":null}),`Restrictions`),mdx("th",_extends({parentName:"tr"},{"align":null}),`Description`))),mdx("tbody",{parentName:"table"},mdx("tr",{parentName:"tbody"},mdx("td",_extends({parentName:"tr"},{"align":null}),`active`),mdx("td",_extends({parentName:"tr"},{"align":null}),mdx("a",_extends({parentName:"td"},{"href":"#schemacredentialstype"}),`CredentialsType`)),mdx("td",_extends({parentName:"tr"},{"align":null}),`false`),mdx("td",_extends({parentName:"tr"},{"align":null}),`none`),mdx("td",_extends({parentName:"tr"},{"align":null}),`and so on.`)),mdx("tr",{parentName:"tbody"},mdx("td",_extends({parentName:"tr"},{"align":null}),`expires_at`),mdx("td",_extends({parentName:"tr"},{"align":null}),`string(date-time)`),mdx("td",_extends({parentName:"tr"},{"align":null}),`true`),mdx("td",_extends({parentName:"tr"},{"align":null}),`none`),mdx("td",_extends({parentName:"tr"},{"align":null}),`ExpiresAt is the time (UTC) when the request expires. If the user still wishes to log in, a new request has to be initiated.`)),mdx("tr",{parentName:"tbody"},mdx("td",_extends({parentName:"tr"},{"align":null}),`id`),mdx("td",_extends({parentName:"tr"},{"align":null}),mdx("a",_extends({parentName:"td"},{"href":"#schemauuid"}),`UUID`)),mdx("td",_extends({parentName:"tr"},{"align":null}),`true`),mdx("td",_extends({parentName:"tr"},{"align":null}),`none`),mdx("td",_extends({parentName:"tr"},{"align":null}),`none`)),mdx("tr",{parentName:"tbody"},mdx("td",_extends({parentName:"tr"},{"align":null}),`issued_at`),mdx("td",_extends({parentName:"tr"},{"align":null}),`string(date-time)`),mdx("td",_extends({parentName:"tr"},{"align":null}),`true`),mdx("td",_extends({parentName:"tr"},{"align":null}),`none`),mdx("td",_extends({parentName:"tr"},{"align":null}),`IssuedAt is the time (UTC) when the request occurred.`)),mdx("tr",{parentName:"tbody"},mdx("td",_extends({parentName:"tr"},{"align":null}),`methods`),mdx("td",_extends({parentName:"tr"},{"align":null}),`object`),mdx("td",_extends({parentName:"tr"},{"align":null}),`true`),mdx("td",_extends({parentName:"tr"},{"align":null}),`none`),mdx("td",_extends({parentName:"tr"},{"align":null}),`Methods contains context for all enabled login methods. If a login request has been processed, but for example the password is incorrect, this will contain error messages.`)),mdx("tr",{parentName:"tbody"},mdx("td",_extends({parentName:"tr"},{"align":null}),`» `,mdx("strong",{parentName:"td"},`additionalProperties`)),mdx("td",_extends({parentName:"tr"},{"align":null}),mdx("a",_extends({parentName:"td"},{"href":"#schemaloginrequestmethod"}),`loginRequestMethod`)),mdx("td",_extends({parentName:"tr"},{"align":null}),`false`),mdx("td",_extends({parentName:"tr"},{"align":null}),`none`),mdx("td",_extends({parentName:"tr"},{"align":null}),`none`)),mdx("tr",{parentName:"tbody"},mdx("td",_extends({parentName:"tr"},{"align":null}),`request_url`),mdx("td",_extends({parentName:"tr"},{"align":null}),`string`),mdx("td",_extends({parentName:"tr"},{"align":null}),`true`),mdx("td",_extends({parentName:"tr"},{"align":null}),`none`),mdx("td",_extends({parentName:"tr"},{"align":null}),`RequestURL is the initial URL that was requested from ORY Kratos. It can be used to forward information contained in the URL's path or query for example.`)))),mdx("a",{id:"tocSloginrequestmethod"},"loginRequestMethod"),mdx("h4",{"id":"loginrequestmethod"},`loginRequestMethod`),mdx("a",{id:"schemaloginrequestmethod"}),mdx("pre",null,mdx("code",_extends({parentName:"pre"},{"className":"language-json"}),`{
  "config": {
    "action": "string",
    "errors": [
      {
        "message": "string"
      }
    ],
    "fields": [
      {
        "disabled": true,
        "errors": [
          {
            "message": "string"
          }
        ],
        "name": "string",
        "pattern": "string",
        "required": true,
        "type": "string",
        "value": {}
      }
    ],
    "method": "string",
    "providers": [
      {
        "disabled": true,
        "errors": [
          {
            "message": "string"
          }
        ],
        "name": "string",
        "pattern": "string",
        "required": true,
        "type": "string",
        "value": {}
      }
    ]
  },
  "method": "string"
}
`)),mdx("h4",{"id":"properties-17"},`Properties`),mdx("table",null,mdx("thead",{parentName:"table"},mdx("tr",{parentName:"thead"},mdx("th",_extends({parentName:"tr"},{"align":null}),`Name`),mdx("th",_extends({parentName:"tr"},{"align":null}),`Type`),mdx("th",_extends({parentName:"tr"},{"align":null}),`Required`),mdx("th",_extends({parentName:"tr"},{"align":null}),`Restrictions`),mdx("th",_extends({parentName:"tr"},{"align":null}),`Description`))),mdx("tbody",{parentName:"table"},mdx("tr",{parentName:"tbody"},mdx("td",_extends({parentName:"tr"},{"align":null}),`config`),mdx("td",_extends({parentName:"tr"},{"align":null}),mdx("a",_extends({parentName:"td"},{"href":"#schemaloginrequestmethodconfig"}),`loginRequestMethodConfig`)),mdx("td",_extends({parentName:"tr"},{"align":null}),`true`),mdx("td",_extends({parentName:"tr"},{"align":null}),`none`),mdx("td",_extends({parentName:"tr"},{"align":null}),`none`)),mdx("tr",{parentName:"tbody"},mdx("td",_extends({parentName:"tr"},{"align":null}),`method`),mdx("td",_extends({parentName:"tr"},{"align":null}),mdx("a",_extends({parentName:"td"},{"href":"#schemacredentialstype"}),`CredentialsType`)),mdx("td",_extends({parentName:"tr"},{"align":null}),`true`),mdx("td",_extends({parentName:"tr"},{"align":null}),`none`),mdx("td",_extends({parentName:"tr"},{"align":null}),`and so on.`)))),mdx("a",{id:"tocSloginrequestmethodconfig"},"loginRequestMethodConfig"),mdx("h4",{"id":"loginrequestmethodconfig"},`loginRequestMethodConfig`),mdx("a",{id:"schemaloginrequestmethodconfig"}),mdx("pre",null,mdx("code",_extends({parentName:"pre"},{"className":"language-json"}),`{
  "action": "string",
  "errors": [
    {
      "message": "string"
    }
  ],
  "fields": [
    {
      "disabled": true,
      "errors": [
        {
          "message": "string"
        }
      ],
      "name": "string",
      "pattern": "string",
      "required": true,
      "type": "string",
      "value": {}
    }
  ],
  "method": "string",
  "providers": [
    {
      "disabled": true,
      "errors": [
        {
          "message": "string"
        }
      ],
      "name": "string",
      "pattern": "string",
      "required": true,
      "type": "string",
      "value": {}
    }
  ]
}
`)),mdx("h4",{"id":"properties-18"},`Properties`),mdx("table",null,mdx("thead",{parentName:"table"},mdx("tr",{parentName:"thead"},mdx("th",_extends({parentName:"tr"},{"align":null}),`Name`),mdx("th",_extends({parentName:"tr"},{"align":null}),`Type`),mdx("th",_extends({parentName:"tr"},{"align":null}),`Required`),mdx("th",_extends({parentName:"tr"},{"align":null}),`Restrictions`),mdx("th",_extends({parentName:"tr"},{"align":null}),`Description`))),mdx("tbody",{parentName:"table"},mdx("tr",{parentName:"tbody"},mdx("td",_extends({parentName:"tr"},{"align":null}),`action`),mdx("td",_extends({parentName:"tr"},{"align":null}),`string`),mdx("td",_extends({parentName:"tr"},{"align":null}),`true`),mdx("td",_extends({parentName:"tr"},{"align":null}),`none`),mdx("td",_extends({parentName:"tr"},{"align":null}),`Action should be used as the form action URL `,mdx("inlineCode",{parentName:"td"},`<form action="{{ .Action }}" method="post">`),`.`)),mdx("tr",{parentName:"tbody"},mdx("td",_extends({parentName:"tr"},{"align":null}),`errors`),mdx("td",_extends({parentName:"tr"},{"align":null}),`[`,mdx("a",_extends({parentName:"td"},{"href":"#schemaerror"}),`Error`),`]`),mdx("td",_extends({parentName:"tr"},{"align":null}),`false`),mdx("td",_extends({parentName:"tr"},{"align":null}),`none`),mdx("td",_extends({parentName:"tr"},{"align":null}),`Errors contains all form errors. These will be duplicates of the individual field errors.`)),mdx("tr",{parentName:"tbody"},mdx("td",_extends({parentName:"tr"},{"align":null}),`fields`),mdx("td",_extends({parentName:"tr"},{"align":null}),mdx("a",_extends({parentName:"td"},{"href":"#schemaformfields"}),`formFields`)),mdx("td",_extends({parentName:"tr"},{"align":null}),`true`),mdx("td",_extends({parentName:"tr"},{"align":null}),`none`),mdx("td",_extends({parentName:"tr"},{"align":null}),`Fields contains multiple fields`)),mdx("tr",{parentName:"tbody"},mdx("td",_extends({parentName:"tr"},{"align":null}),`method`),mdx("td",_extends({parentName:"tr"},{"align":null}),`string`),mdx("td",_extends({parentName:"tr"},{"align":null}),`true`),mdx("td",_extends({parentName:"tr"},{"align":null}),`none`),mdx("td",_extends({parentName:"tr"},{"align":null}),`Method is the form method (e.g. POST)`)),mdx("tr",{parentName:"tbody"},mdx("td",_extends({parentName:"tr"},{"align":null}),`providers`),mdx("td",_extends({parentName:"tr"},{"align":null}),`[`,mdx("a",_extends({parentName:"td"},{"href":"#schemaformfield"}),`formField`),`]`),mdx("td",_extends({parentName:"tr"},{"align":null}),`false`),mdx("td",_extends({parentName:"tr"},{"align":null}),`none`),mdx("td",_extends({parentName:"tr"},{"align":null}),`Providers is set for the "oidc" request method.`)))),mdx("a",{id:"tocSprofilemanagementrequest"},"profileManagementRequest"),mdx("h4",{"id":"profilemanagementrequest"},`profileManagementRequest`),mdx("a",{id:"schemaprofilemanagementrequest"}),mdx("pre",null,mdx("code",_extends({parentName:"pre"},{"className":"language-json"}),`{
  "expires_at": "2020-03-25T17:39:55Z",
  "form": {
    "action": "string",
    "errors": [
      {
        "message": "string"
      }
    ],
    "fields": [
      {
        "disabled": true,
        "errors": [
          {
            "message": "string"
          }
        ],
        "name": "string",
        "pattern": "string",
        "required": true,
        "type": "string",
        "value": {}
      }
    ],
    "method": "string"
  },
  "id": "string",
  "identity": {
    "addresses": [
      {
        "expires_at": "2020-03-25T17:39:55Z",
        "id": "string",
        "value": "string",
        "verified": true,
        "verified_at": "2020-03-25T17:39:55Z",
        "via": "string"
      }
    ],
    "id": "string",
    "traits": {},
    "traits_schema_id": "string",
    "traits_schema_url": "string"
  },
  "issued_at": "2020-03-25T17:39:55Z",
  "request_url": "string",
  "update_successful": true
}
`)),mdx("p",null,mdx("em",{parentName:"p"},`Request presents a profile management request`)),mdx("h4",{"id":"properties-19"},`Properties`),mdx("table",null,mdx("thead",{parentName:"table"},mdx("tr",{parentName:"thead"},mdx("th",_extends({parentName:"tr"},{"align":null}),`Name`),mdx("th",_extends({parentName:"tr"},{"align":null}),`Type`),mdx("th",_extends({parentName:"tr"},{"align":null}),`Required`),mdx("th",_extends({parentName:"tr"},{"align":null}),`Restrictions`),mdx("th",_extends({parentName:"tr"},{"align":null}),`Description`))),mdx("tbody",{parentName:"table"},mdx("tr",{parentName:"tbody"},mdx("td",_extends({parentName:"tr"},{"align":null}),`expires_at`),mdx("td",_extends({parentName:"tr"},{"align":null}),`string(date-time)`),mdx("td",_extends({parentName:"tr"},{"align":null}),`true`),mdx("td",_extends({parentName:"tr"},{"align":null}),`none`),mdx("td",_extends({parentName:"tr"},{"align":null}),`ExpiresAt is the time (UTC) when the request expires. If the user still wishes to update the profile, a new request has to be initiated.`)),mdx("tr",{parentName:"tbody"},mdx("td",_extends({parentName:"tr"},{"align":null}),`form`),mdx("td",_extends({parentName:"tr"},{"align":null}),mdx("a",_extends({parentName:"td"},{"href":"#schemaform"}),`form`)),mdx("td",_extends({parentName:"tr"},{"align":null}),`true`),mdx("td",_extends({parentName:"tr"},{"align":null}),`none`),mdx("td",_extends({parentName:"tr"},{"align":null}),`HTMLForm represents a HTML Form. The container can work with both HTTP Form and JSON requests`)),mdx("tr",{parentName:"tbody"},mdx("td",_extends({parentName:"tr"},{"align":null}),`id`),mdx("td",_extends({parentName:"tr"},{"align":null}),mdx("a",_extends({parentName:"td"},{"href":"#schemauuid"}),`UUID`)),mdx("td",_extends({parentName:"tr"},{"align":null}),`true`),mdx("td",_extends({parentName:"tr"},{"align":null}),`none`),mdx("td",_extends({parentName:"tr"},{"align":null}),`none`)),mdx("tr",{parentName:"tbody"},mdx("td",_extends({parentName:"tr"},{"align":null}),`identity`),mdx("td",_extends({parentName:"tr"},{"align":null}),mdx("a",_extends({parentName:"td"},{"href":"#schemaidentity"}),`Identity`)),mdx("td",_extends({parentName:"tr"},{"align":null}),`true`),mdx("td",_extends({parentName:"tr"},{"align":null}),`none`),mdx("td",_extends({parentName:"tr"},{"align":null}),`none`)),mdx("tr",{parentName:"tbody"},mdx("td",_extends({parentName:"tr"},{"align":null}),`issued_at`),mdx("td",_extends({parentName:"tr"},{"align":null}),`string(date-time)`),mdx("td",_extends({parentName:"tr"},{"align":null}),`true`),mdx("td",_extends({parentName:"tr"},{"align":null}),`none`),mdx("td",_extends({parentName:"tr"},{"align":null}),`IssuedAt is the time (UTC) when the request occurred.`)),mdx("tr",{parentName:"tbody"},mdx("td",_extends({parentName:"tr"},{"align":null}),`request_url`),mdx("td",_extends({parentName:"tr"},{"align":null}),`string`),mdx("td",_extends({parentName:"tr"},{"align":null}),`true`),mdx("td",_extends({parentName:"tr"},{"align":null}),`none`),mdx("td",_extends({parentName:"tr"},{"align":null}),`RequestURL is the initial URL that was requested from ORY Kratos. It can be used to forward information contained in the URL's path or query for example.`)),mdx("tr",{parentName:"tbody"},mdx("td",_extends({parentName:"tr"},{"align":null}),`update_successful`),mdx("td",_extends({parentName:"tr"},{"align":null}),`boolean`),mdx("td",_extends({parentName:"tr"},{"align":null}),`true`),mdx("td",_extends({parentName:"tr"},{"align":null}),`none`),mdx("td",_extends({parentName:"tr"},{"align":null}),`UpdateSuccessful, if true, indicates that the profile has been updated successfully with the provided data. Done will stay true when repeatedly checking. If set to true, done will revert back to false only when a request with invalid (e.g. "please use a valid phone number") data was sent.`)))),mdx("a",{id:"tocSregistrationrequest"},"registrationRequest"),mdx("h4",{"id":"registrationrequest"},`registrationRequest`),mdx("a",{id:"schemaregistrationrequest"}),mdx("pre",null,mdx("code",_extends({parentName:"pre"},{"className":"language-json"}),`{
  "active": "string",
  "expires_at": "2020-03-25T17:39:55Z",
  "id": "string",
  "issued_at": "2020-03-25T17:39:55Z",
  "methods": {
    "property1": {
      "config": {
        "action": "string",
        "errors": [
          {
            "message": "string"
          }
        ],
        "fields": [
          {
            "disabled": true,
            "errors": [
              {
                "message": "string"
              }
            ],
            "name": "string",
            "pattern": "string",
            "required": true,
            "type": "string",
            "value": {}
          }
        ],
        "method": "string",
        "providers": [
          {
            "disabled": true,
            "errors": [
              {
                "message": "string"
              }
            ],
            "name": "string",
            "pattern": "string",
            "required": true,
            "type": "string",
            "value": {}
          }
        ]
      },
      "method": "string"
    },
    "property2": {
      "config": {
        "action": "string",
        "errors": [
          {
            "message": "string"
          }
        ],
        "fields": [
          {
            "disabled": true,
            "errors": [
              {
                "message": "string"
              }
            ],
            "name": "string",
            "pattern": "string",
            "required": true,
            "type": "string",
            "value": {}
          }
        ],
        "method": "string",
        "providers": [
          {
            "disabled": true,
            "errors": [
              {
                "message": "string"
              }
            ],
            "name": "string",
            "pattern": "string",
            "required": true,
            "type": "string",
            "value": {}
          }
        ]
      },
      "method": "string"
    }
  },
  "request_url": "string"
}
`)),mdx("h4",{"id":"properties-20"},`Properties`),mdx("table",null,mdx("thead",{parentName:"table"},mdx("tr",{parentName:"thead"},mdx("th",_extends({parentName:"tr"},{"align":null}),`Name`),mdx("th",_extends({parentName:"tr"},{"align":null}),`Type`),mdx("th",_extends({parentName:"tr"},{"align":null}),`Required`),mdx("th",_extends({parentName:"tr"},{"align":null}),`Restrictions`),mdx("th",_extends({parentName:"tr"},{"align":null}),`Description`))),mdx("tbody",{parentName:"table"},mdx("tr",{parentName:"tbody"},mdx("td",_extends({parentName:"tr"},{"align":null}),`active`),mdx("td",_extends({parentName:"tr"},{"align":null}),mdx("a",_extends({parentName:"td"},{"href":"#schemacredentialstype"}),`CredentialsType`)),mdx("td",_extends({parentName:"tr"},{"align":null}),`true`),mdx("td",_extends({parentName:"tr"},{"align":null}),`none`),mdx("td",_extends({parentName:"tr"},{"align":null}),`and so on.`)),mdx("tr",{parentName:"tbody"},mdx("td",_extends({parentName:"tr"},{"align":null}),`expires_at`),mdx("td",_extends({parentName:"tr"},{"align":null}),`string(date-time)`),mdx("td",_extends({parentName:"tr"},{"align":null}),`true`),mdx("td",_extends({parentName:"tr"},{"align":null}),`none`),mdx("td",_extends({parentName:"tr"},{"align":null}),`ExpiresAt is the time (UTC) when the request expires. If the user still wishes to log in, a new request has to be initiated.`)),mdx("tr",{parentName:"tbody"},mdx("td",_extends({parentName:"tr"},{"align":null}),`id`),mdx("td",_extends({parentName:"tr"},{"align":null}),mdx("a",_extends({parentName:"td"},{"href":"#schemauuid"}),`UUID`)),mdx("td",_extends({parentName:"tr"},{"align":null}),`true`),mdx("td",_extends({parentName:"tr"},{"align":null}),`none`),mdx("td",_extends({parentName:"tr"},{"align":null}),`none`)),mdx("tr",{parentName:"tbody"},mdx("td",_extends({parentName:"tr"},{"align":null}),`issued_at`),mdx("td",_extends({parentName:"tr"},{"align":null}),`string(date-time)`),mdx("td",_extends({parentName:"tr"},{"align":null}),`true`),mdx("td",_extends({parentName:"tr"},{"align":null}),`none`),mdx("td",_extends({parentName:"tr"},{"align":null}),`IssuedAt is the time (UTC) when the request occurred.`)),mdx("tr",{parentName:"tbody"},mdx("td",_extends({parentName:"tr"},{"align":null}),`methods`),mdx("td",_extends({parentName:"tr"},{"align":null}),`object`),mdx("td",_extends({parentName:"tr"},{"align":null}),`true`),mdx("td",_extends({parentName:"tr"},{"align":null}),`none`),mdx("td",_extends({parentName:"tr"},{"align":null}),`Methods contains context for all enabled registration methods. If a registration request has been processed, but for example the password is incorrect, this will contain error messages.`)),mdx("tr",{parentName:"tbody"},mdx("td",_extends({parentName:"tr"},{"align":null}),`» `,mdx("strong",{parentName:"td"},`additionalProperties`)),mdx("td",_extends({parentName:"tr"},{"align":null}),mdx("a",_extends({parentName:"td"},{"href":"#schemaregistrationrequestmethod"}),`registrationRequestMethod`)),mdx("td",_extends({parentName:"tr"},{"align":null}),`false`),mdx("td",_extends({parentName:"tr"},{"align":null}),`none`),mdx("td",_extends({parentName:"tr"},{"align":null}),`none`)),mdx("tr",{parentName:"tbody"},mdx("td",_extends({parentName:"tr"},{"align":null}),`request_url`),mdx("td",_extends({parentName:"tr"},{"align":null}),`string`),mdx("td",_extends({parentName:"tr"},{"align":null}),`true`),mdx("td",_extends({parentName:"tr"},{"align":null}),`none`),mdx("td",_extends({parentName:"tr"},{"align":null}),`RequestURL is the initial URL that was requested from ORY Kratos. It can be used to forward information contained in the URL's path or query for example.`)))),mdx("a",{id:"tocSregistrationrequestmethod"},"registrationRequestMethod"),mdx("h4",{"id":"registrationrequestmethod"},`registrationRequestMethod`),mdx("a",{id:"schemaregistrationrequestmethod"}),mdx("pre",null,mdx("code",_extends({parentName:"pre"},{"className":"language-json"}),`{
  "config": {
    "action": "string",
    "errors": [
      {
        "message": "string"
      }
    ],
    "fields": [
      {
        "disabled": true,
        "errors": [
          {
            "message": "string"
          }
        ],
        "name": "string",
        "pattern": "string",
        "required": true,
        "type": "string",
        "value": {}
      }
    ],
    "method": "string",
    "providers": [
      {
        "disabled": true,
        "errors": [
          {
            "message": "string"
          }
        ],
        "name": "string",
        "pattern": "string",
        "required": true,
        "type": "string",
        "value": {}
      }
    ]
  },
  "method": "string"
}
`)),mdx("h4",{"id":"properties-21"},`Properties`),mdx("table",null,mdx("thead",{parentName:"table"},mdx("tr",{parentName:"thead"},mdx("th",_extends({parentName:"tr"},{"align":null}),`Name`),mdx("th",_extends({parentName:"tr"},{"align":null}),`Type`),mdx("th",_extends({parentName:"tr"},{"align":null}),`Required`),mdx("th",_extends({parentName:"tr"},{"align":null}),`Restrictions`),mdx("th",_extends({parentName:"tr"},{"align":null}),`Description`))),mdx("tbody",{parentName:"table"},mdx("tr",{parentName:"tbody"},mdx("td",_extends({parentName:"tr"},{"align":null}),`config`),mdx("td",_extends({parentName:"tr"},{"align":null}),mdx("a",_extends({parentName:"td"},{"href":"#schemaregistrationrequestmethodconfig"}),`registrationRequestMethodConfig`)),mdx("td",_extends({parentName:"tr"},{"align":null}),`false`),mdx("td",_extends({parentName:"tr"},{"align":null}),`none`),mdx("td",_extends({parentName:"tr"},{"align":null}),`none`)),mdx("tr",{parentName:"tbody"},mdx("td",_extends({parentName:"tr"},{"align":null}),`method`),mdx("td",_extends({parentName:"tr"},{"align":null}),mdx("a",_extends({parentName:"td"},{"href":"#schemacredentialstype"}),`CredentialsType`)),mdx("td",_extends({parentName:"tr"},{"align":null}),`false`),mdx("td",_extends({parentName:"tr"},{"align":null}),`none`),mdx("td",_extends({parentName:"tr"},{"align":null}),`and so on.`)))),mdx("a",{id:"tocSregistrationrequestmethodconfig"},"registrationRequestMethodConfig"),mdx("h4",{"id":"registrationrequestmethodconfig"},`registrationRequestMethodConfig`),mdx("a",{id:"schemaregistrationrequestmethodconfig"}),mdx("pre",null,mdx("code",_extends({parentName:"pre"},{"className":"language-json"}),`{
  "action": "string",
  "errors": [
    {
      "message": "string"
    }
  ],
  "fields": [
    {
      "disabled": true,
      "errors": [
        {
          "message": "string"
        }
      ],
      "name": "string",
      "pattern": "string",
      "required": true,
      "type": "string",
      "value": {}
    }
  ],
  "method": "string",
  "providers": [
    {
      "disabled": true,
      "errors": [
        {
          "message": "string"
        }
      ],
      "name": "string",
      "pattern": "string",
      "required": true,
      "type": "string",
      "value": {}
    }
  ]
}
`)),mdx("h4",{"id":"properties-22"},`Properties`),mdx("table",null,mdx("thead",{parentName:"table"},mdx("tr",{parentName:"thead"},mdx("th",_extends({parentName:"tr"},{"align":null}),`Name`),mdx("th",_extends({parentName:"tr"},{"align":null}),`Type`),mdx("th",_extends({parentName:"tr"},{"align":null}),`Required`),mdx("th",_extends({parentName:"tr"},{"align":null}),`Restrictions`),mdx("th",_extends({parentName:"tr"},{"align":null}),`Description`))),mdx("tbody",{parentName:"table"},mdx("tr",{parentName:"tbody"},mdx("td",_extends({parentName:"tr"},{"align":null}),`action`),mdx("td",_extends({parentName:"tr"},{"align":null}),`string`),mdx("td",_extends({parentName:"tr"},{"align":null}),`true`),mdx("td",_extends({parentName:"tr"},{"align":null}),`none`),mdx("td",_extends({parentName:"tr"},{"align":null}),`Action should be used as the form action URL `,mdx("inlineCode",{parentName:"td"},`<form action="{{ .Action }}" method="post">`),`.`)),mdx("tr",{parentName:"tbody"},mdx("td",_extends({parentName:"tr"},{"align":null}),`errors`),mdx("td",_extends({parentName:"tr"},{"align":null}),`[`,mdx("a",_extends({parentName:"td"},{"href":"#schemaerror"}),`Error`),`]`),mdx("td",_extends({parentName:"tr"},{"align":null}),`false`),mdx("td",_extends({parentName:"tr"},{"align":null}),`none`),mdx("td",_extends({parentName:"tr"},{"align":null}),`Errors contains all form errors. These will be duplicates of the individual field errors.`)),mdx("tr",{parentName:"tbody"},mdx("td",_extends({parentName:"tr"},{"align":null}),`fields`),mdx("td",_extends({parentName:"tr"},{"align":null}),mdx("a",_extends({parentName:"td"},{"href":"#schemaformfields"}),`formFields`)),mdx("td",_extends({parentName:"tr"},{"align":null}),`true`),mdx("td",_extends({parentName:"tr"},{"align":null}),`none`),mdx("td",_extends({parentName:"tr"},{"align":null}),`Fields contains multiple fields`)),mdx("tr",{parentName:"tbody"},mdx("td",_extends({parentName:"tr"},{"align":null}),`method`),mdx("td",_extends({parentName:"tr"},{"align":null}),`string`),mdx("td",_extends({parentName:"tr"},{"align":null}),`true`),mdx("td",_extends({parentName:"tr"},{"align":null}),`none`),mdx("td",_extends({parentName:"tr"},{"align":null}),`Method is the form method (e.g. POST)`)),mdx("tr",{parentName:"tbody"},mdx("td",_extends({parentName:"tr"},{"align":null}),`providers`),mdx("td",_extends({parentName:"tr"},{"align":null}),`[`,mdx("a",_extends({parentName:"td"},{"href":"#schemaformfield"}),`formField`),`]`),mdx("td",_extends({parentName:"tr"},{"align":null}),`false`),mdx("td",_extends({parentName:"tr"},{"align":null}),`none`),mdx("td",_extends({parentName:"tr"},{"align":null}),`Providers is set for the "oidc" request method.`)))),mdx("a",{id:"tocSsession"},"session"),mdx("h4",{"id":"session"},`session`),mdx("a",{id:"schemasession"}),mdx("pre",null,mdx("code",_extends({parentName:"pre"},{"className":"language-json"}),`{
  "authenticated_at": "2020-03-25T17:39:55Z",
  "expires_at": "2020-03-25T17:39:55Z",
  "identity": {
    "addresses": [
      {
        "expires_at": "2020-03-25T17:39:55Z",
        "id": "string",
        "value": "string",
        "verified": true,
        "verified_at": "2020-03-25T17:39:55Z",
        "via": "string"
      }
    ],
    "id": "string",
    "traits": {},
    "traits_schema_id": "string",
    "traits_schema_url": "string"
  },
  "issued_at": "2020-03-25T17:39:55Z",
  "sid": "string"
}
`)),mdx("h4",{"id":"properties-23"},`Properties`),mdx("table",null,mdx("thead",{parentName:"table"},mdx("tr",{parentName:"thead"},mdx("th",_extends({parentName:"tr"},{"align":null}),`Name`),mdx("th",_extends({parentName:"tr"},{"align":null}),`Type`),mdx("th",_extends({parentName:"tr"},{"align":null}),`Required`),mdx("th",_extends({parentName:"tr"},{"align":null}),`Restrictions`),mdx("th",_extends({parentName:"tr"},{"align":null}),`Description`))),mdx("tbody",{parentName:"table"},mdx("tr",{parentName:"tbody"},mdx("td",_extends({parentName:"tr"},{"align":null}),`authenticated_at`),mdx("td",_extends({parentName:"tr"},{"align":null}),`string(date-time)`),mdx("td",_extends({parentName:"tr"},{"align":null}),`true`),mdx("td",_extends({parentName:"tr"},{"align":null}),`none`),mdx("td",_extends({parentName:"tr"},{"align":null}),`none`)),mdx("tr",{parentName:"tbody"},mdx("td",_extends({parentName:"tr"},{"align":null}),`expires_at`),mdx("td",_extends({parentName:"tr"},{"align":null}),`string(date-time)`),mdx("td",_extends({parentName:"tr"},{"align":null}),`true`),mdx("td",_extends({parentName:"tr"},{"align":null}),`none`),mdx("td",_extends({parentName:"tr"},{"align":null}),`none`)),mdx("tr",{parentName:"tbody"},mdx("td",_extends({parentName:"tr"},{"align":null}),`identity`),mdx("td",_extends({parentName:"tr"},{"align":null}),mdx("a",_extends({parentName:"td"},{"href":"#schemaidentity"}),`Identity`)),mdx("td",_extends({parentName:"tr"},{"align":null}),`true`),mdx("td",_extends({parentName:"tr"},{"align":null}),`none`),mdx("td",_extends({parentName:"tr"},{"align":null}),`none`)),mdx("tr",{parentName:"tbody"},mdx("td",_extends({parentName:"tr"},{"align":null}),`issued_at`),mdx("td",_extends({parentName:"tr"},{"align":null}),`string(date-time)`),mdx("td",_extends({parentName:"tr"},{"align":null}),`true`),mdx("td",_extends({parentName:"tr"},{"align":null}),`none`),mdx("td",_extends({parentName:"tr"},{"align":null}),`none`)),mdx("tr",{parentName:"tbody"},mdx("td",_extends({parentName:"tr"},{"align":null}),`sid`),mdx("td",_extends({parentName:"tr"},{"align":null}),mdx("a",_extends({parentName:"td"},{"href":"#schemauuid"}),`UUID`)),mdx("td",_extends({parentName:"tr"},{"align":null}),`true`),mdx("td",_extends({parentName:"tr"},{"align":null}),`none`),mdx("td",_extends({parentName:"tr"},{"align":null}),`none`)))),mdx("a",{id:"tocSverificationrequest"},"verificationRequest"),mdx("h4",{"id":"verificationrequest"},`verificationRequest`),mdx("a",{id:"schemaverificationrequest"}),mdx("pre",null,mdx("code",_extends({parentName:"pre"},{"className":"language-json"}),`{
  "expires_at": "2020-03-25T17:39:55Z",
  "form": {
    "action": "string",
    "errors": [
      {
        "message": "string"
      }
    ],
    "fields": [
      {
        "disabled": true,
        "errors": [
          {
            "message": "string"
          }
        ],
        "name": "string",
        "pattern": "string",
        "required": true,
        "type": "string",
        "value": {}
      }
    ],
    "method": "string"
  },
  "id": "string",
  "issued_at": "2020-03-25T17:39:55Z",
  "request_url": "string",
  "success": true,
  "via": "string"
}
`)),mdx("p",null,mdx("em",{parentName:"p"},`Request presents a verification request`)),mdx("h4",{"id":"properties-24"},`Properties`),mdx("table",null,mdx("thead",{parentName:"table"},mdx("tr",{parentName:"thead"},mdx("th",_extends({parentName:"tr"},{"align":null}),`Name`),mdx("th",_extends({parentName:"tr"},{"align":null}),`Type`),mdx("th",_extends({parentName:"tr"},{"align":null}),`Required`),mdx("th",_extends({parentName:"tr"},{"align":null}),`Restrictions`),mdx("th",_extends({parentName:"tr"},{"align":null}),`Description`))),mdx("tbody",{parentName:"table"},mdx("tr",{parentName:"tbody"},mdx("td",_extends({parentName:"tr"},{"align":null}),`expires_at`),mdx("td",_extends({parentName:"tr"},{"align":null}),`string(date-time)`),mdx("td",_extends({parentName:"tr"},{"align":null}),`false`),mdx("td",_extends({parentName:"tr"},{"align":null}),`none`),mdx("td",_extends({parentName:"tr"},{"align":null}),`ExpiresAt is the time (UTC) when the request expires. If the user still wishes to update the profile, a new request has to be initiated.`)),mdx("tr",{parentName:"tbody"},mdx("td",_extends({parentName:"tr"},{"align":null}),`form`),mdx("td",_extends({parentName:"tr"},{"align":null}),mdx("a",_extends({parentName:"td"},{"href":"#schemaform"}),`form`)),mdx("td",_extends({parentName:"tr"},{"align":null}),`false`),mdx("td",_extends({parentName:"tr"},{"align":null}),`none`),mdx("td",_extends({parentName:"tr"},{"align":null}),`HTMLForm represents a HTML Form. The container can work with both HTTP Form and JSON requests`)),mdx("tr",{parentName:"tbody"},mdx("td",_extends({parentName:"tr"},{"align":null}),`id`),mdx("td",_extends({parentName:"tr"},{"align":null}),mdx("a",_extends({parentName:"td"},{"href":"#schemauuid"}),`UUID`)),mdx("td",_extends({parentName:"tr"},{"align":null}),`false`),mdx("td",_extends({parentName:"tr"},{"align":null}),`none`),mdx("td",_extends({parentName:"tr"},{"align":null}),`none`)),mdx("tr",{parentName:"tbody"},mdx("td",_extends({parentName:"tr"},{"align":null}),`issued_at`),mdx("td",_extends({parentName:"tr"},{"align":null}),`string(date-time)`),mdx("td",_extends({parentName:"tr"},{"align":null}),`false`),mdx("td",_extends({parentName:"tr"},{"align":null}),`none`),mdx("td",_extends({parentName:"tr"},{"align":null}),`IssuedAt is the time (UTC) when the request occurred.`)),mdx("tr",{parentName:"tbody"},mdx("td",_extends({parentName:"tr"},{"align":null}),`request_url`),mdx("td",_extends({parentName:"tr"},{"align":null}),`string`),mdx("td",_extends({parentName:"tr"},{"align":null}),`false`),mdx("td",_extends({parentName:"tr"},{"align":null}),`none`),mdx("td",_extends({parentName:"tr"},{"align":null}),`RequestURL is the initial URL that was requested from ORY Kratos. It can be used to forward information contained in the URL's path or query for example.`)),mdx("tr",{parentName:"tbody"},mdx("td",_extends({parentName:"tr"},{"align":null}),`success`),mdx("td",_extends({parentName:"tr"},{"align":null}),`boolean`),mdx("td",_extends({parentName:"tr"},{"align":null}),`false`),mdx("td",_extends({parentName:"tr"},{"align":null}),`none`),mdx("td",_extends({parentName:"tr"},{"align":null}),`Success, if true, implies that the request was completed successfully.`)),mdx("tr",{parentName:"tbody"},mdx("td",_extends({parentName:"tr"},{"align":null}),`via`),mdx("td",_extends({parentName:"tr"},{"align":null}),mdx("a",_extends({parentName:"td"},{"href":"#schemaverifiableaddresstype"}),`VerifiableAddressType`)),mdx("td",_extends({parentName:"tr"},{"align":null}),`false`),mdx("td",_extends({parentName:"tr"},{"align":null}),`none`),mdx("td",_extends({parentName:"tr"},{"align":null}),`none`)))),mdx("a",{id:"tocSversion"},"version"),mdx("h4",{"id":"version-1"},`version`),mdx("a",{id:"schemaversion"}),mdx("pre",null,mdx("code",_extends({parentName:"pre"},{"className":"language-json"}),`{
  "version": "string"
}
`)),mdx("h4",{"id":"properties-25"},`Properties`),mdx("table",null,mdx("thead",{parentName:"table"},mdx("tr",{parentName:"thead"},mdx("th",_extends({parentName:"tr"},{"align":null}),`Name`),mdx("th",_extends({parentName:"tr"},{"align":null}),`Type`),mdx("th",_extends({parentName:"tr"},{"align":null}),`Required`),mdx("th",_extends({parentName:"tr"},{"align":null}),`Restrictions`),mdx("th",_extends({parentName:"tr"},{"align":null}),`Description`))),mdx("tbody",{parentName:"table"},mdx("tr",{parentName:"tbody"},mdx("td",_extends({parentName:"tr"},{"align":null}),`version`),mdx("td",_extends({parentName:"tr"},{"align":null}),`string`),mdx("td",_extends({parentName:"tr"},{"align":null}),`false`),mdx("td",_extends({parentName:"tr"},{"align":null}),`none`),mdx("td",_extends({parentName:"tr"},{"align":null}),`Version is the service's version.`)))));};MDXContent.isMDXComponent=true;"},null]}
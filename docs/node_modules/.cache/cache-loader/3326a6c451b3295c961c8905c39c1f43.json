{"remainingRequest":"/Users/foobar/go/src/github.com/ory/kratos/docs/node_modules/babel-loader/lib/index.js??ref--7-1!/Users/foobar/go/src/github.com/ory/kratos/docs/node_modules/@docusaurus/mdx-loader/src/index.js??ref--7-2!/Users/foobar/go/src/github.com/ory/kratos/docs/node_modules/@docusaurus/plugin-content-docs/lib/markdown/index.js??ref--7-3!/Users/foobar/go/src/github.com/ory/kratos/docs/versioned_docs/version-v0.2/concepts/credentials/username-email-password.md","dependencies":[{"path":"/Users/foobar/go/src/github.com/ory/kratos/docs/versioned_docs/version-v0.2/concepts/credentials/username-email-password.md","mtime":1588691455358},{"path":"/Users/foobar/go/src/github.com/ory/kratos/docs/.docusaurus/docusaurus-plugin-content-docs/site-versioned-docs-version-v-0-2-concepts-credentials-username-email-password-md-1f7.json","mtime":1588767627268},{"path":"/Users/foobar/go/src/github.com/ory/kratos/docs/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/foobar/go/src/github.com/ory/kratos/docs/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/foobar/go/src/github.com/ory/kratos/docs/node_modules/@docusaurus/mdx-loader/src/index.js","mtime":499162500000},{"path":"/Users/foobar/go/src/github.com/ory/kratos/docs/node_modules/@docusaurus/plugin-content-docs/lib/markdown/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/Users/foobar/go/src/github.com/ory/kratos/docs/versioned_docs/version-v0.2/concepts/credentials/username-email-password.md"],"names":["React","mdx","frontMatter","id","title","metadata","rightToc","value","children","makeShortcode","name","MDXDefaultShortcode","props","console","warn","layoutProps","MDXLayout","MDXContent","components","isMDXComponent"],"mappings":"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","sourcesContent":["\n  import React from 'react';\n  import { mdx } from '@mdx-js/react';\n\n  export const frontMatter = {\n\tid: 'username-email-password',\n\ttitle: 'Username / Email & Password'\n};\nexport const metadata = {\n  \"id\": \"version-v0.2/concepts/credentials/username-email-password\",\n  \"title\": \"Username / Email & Password\",\n  \"description\": \"The `password` method is the most commonly used form of authentication, it\",\n  \"source\": \"@site/versioned_docs/version-v0.2/concepts/credentials/username-email-password.md\",\n  \"permalink\": \"/kratos/docs/concepts/credentials/username-email-password\",\n  \"editUrl\": \"https://github.com/ory/kratos/edit/master/docs/versioned_docs/version-v0.2/concepts/credentials/username-email-password.md\",\n  \"version\": \"v0.2\",\n  \"lastUpdatedBy\": \"Author\",\n  \"lastUpdatedAt\": 1539502055,\n  \"sidebar\": \"version-v0.2/docs\",\n  \"previous\": {\n    \"title\": \"Overview\",\n    \"permalink\": \"/kratos/docs/concepts/credentials\"\n  },\n  \"next\": {\n    \"title\": \"Social Sign In, OpenID Connect, and OAuth2\",\n    \"permalink\": \"/kratos/docs/concepts/credentials/openid-connect-oidc-oauth2\"\n  }\n};\n  /* @jsx mdx */\n\nexport const rightToc = [{\n  value: 'Configuration',\n  id: 'configuration',\n  children: []\n}, {\n  value: 'JSON Schema',\n  id: 'json-schema',\n  children: []\n}, {\n  value: 'Example',\n  id: 'example',\n  children: []\n}];\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  rightToc\n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <p>{`The `}<inlineCode parentName=\"p\">{`password`}</inlineCode>{` method is the most commonly used form of authentication, it\nrequires an `}<inlineCode parentName=\"p\">{`identifier`}</inlineCode>{` (username, email, phone number, ...) and a `}<inlineCode parentName=\"p\">{`password`}</inlineCode>{`\nduring registration and login.`}</p>\n    <p>{`ORY Kratos hashes the password after registration, password reset, and password\nchange using `}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/P-H-C/phc-winner-argon2\"\n      }}>{`Argon2`}</a>{`, the winner of\nthe Password Hashing Competition (PHC).`}</p>\n    <h2 {...{\n      \"id\": \"configuration\"\n    }}>{`Configuration`}</h2>\n    <p>{`Enabling this method is as easy as setting`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-yaml\"\n      }}>{`selfservice:\n  strategies:\n    password:\n      enabled: true\n`}</code></pre>\n    <p>{`in your ORY Kratos configuration. You can configure the Argon2 hasher using the\nfollowing options:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-yaml\"\n      }}>{`hashers:\n  argon2:\n    parallelism: 1\n    memory: 131072 # 128MB\n    iterations: 3\n    salt_length: 16\n    key_length: 32\n`}</code></pre>\n    <p>{`For a complete reference, defaults, and description please check the\n`}<a parentName=\"p\" {...{\n        \"href\": \"../reference/configuration.md\"\n      }}>{`Configuration Reference`}</a>{`.`}</p>\n    <p>{`For a better understanding of security implications imposed by Argon2\nConfiguration, head over to `}<a parentName=\"p\" {...{\n        \"href\": \"./security.md#argon2\"\n      }}>{`Argon2 Security`}</a>{`.`}</p>\n    <h2 {...{\n      \"id\": \"json-schema\"\n    }}>{`JSON Schema`}</h2>\n    <p>{`When processing an identity and its traits, the method will use the JSON Schema\nto extract one or more identifiers. Assuming you want your identities to sign up\nwith an email address, and use that email address as a valid identifier during\nlogin, you can use a schema along the lines of:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-json\"\n      }}>{`{\n  \"$id\": \"https://example.com/example.json\",\n  \"$schema\": \"http://json-schema.org/draft-07/schema#\",\n  \"title\": \"Person\",\n  \"type\": \"object\",\n  \"properties\": {\n    \"email\": {\n      \"type\": \"string\",\n      \"format\": \"email\",\n      \"title\": \"E-Mail\",\n      \"ory.sh/kratos\": {\n        \"credentials\": {\n          \"password\": {\n            \"identifier\": true\n          }\n        }\n      }\n    }\n  }\n}\n`}</code></pre>\n    <p>{`If you want a unique username instead, you could write the schema as follows:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-json\"\n      }}>{`{\n  \"$id\": \"https://example.com/example.json\",\n  \"$schema\": \"http://json-schema.org/draft-07/schema#\",\n  \"title\": \"Person\",\n  \"type\": \"object\",\n  \"properties\": {\n    \"username\": {\n      \"type\": \"string\",\n      \"title\": \"Username\",\n      \"ory.sh/kratos\": {\n        \"credentials\": {\n          \"password\": {\n            \"identifier\": true\n          }\n        }\n      }\n    }\n  }\n}\n`}</code></pre>\n    <p>{`You are not limited to one identifier per identity. You could also combine both\nfields and support a use case of \"username\" and \"email\" as an identifier for\nlogin:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-json\"\n      }}>{`{\n  \"$id\": \"https://example.com/example.json\",\n  \"$schema\": \"http://json-schema.org/draft-07/schema#\",\n  \"title\": \"Person\",\n  \"type\": \"object\",\n  \"properties\": {\n    \"email\": {\n      \"type\": \"string\",\n      \"format\": \"email\",\n      \"title\": \"E-Mail\",\n      \"ory.sh/kratos\": {\n        \"credentials\": {\n          \"password\": {\n            \"identifier\": true\n          }\n        }\n      }\n    },\n    \"username\": {\n      \"type\": \"string\",\n      \"title\": \"Username\",\n      \"ory.sh/kratos\": {\n        \"credentials\": {\n          \"password\": {\n            \"identifier\": true\n          }\n        }\n      }\n    }\n  }\n}\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"example\"\n    }}>{`Example`}</h2>\n    <p>{`Assuming your traits schema is as follows:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-json\"\n      }}>{`{\n  \"$id\": \"https://example.com/example.json\",\n  \"$schema\": \"http://json-schema.org/draft-07/schema#\",\n  \"title\": \"Person\",\n  \"type\": \"object\",\n  \"properties\": {\n    \"first_name\": {\n      \"type\": \"string\"\n    },\n    \"email\": {\n      \"type\": \"string\",\n      \"format\": \"email\",\n      \"ory.sh/kratos\": {\n        \"credentials\": {\n          \"password\": {\n            \"identifier\": true\n          }\n        }\n      }\n    },\n    \"username\": {\n      \"type\": \"string\",\n      \"ory.sh/kratos\": {\n        \"credentials\": {\n          \"password\": {\n            \"identifier\": true\n          }\n        }\n      }\n    }\n  },\n  \"additionalProperties\": false\n}\n`}</code></pre>\n    <p>{`And an identity registers with the following JSON payload (more on registration\nin\n`}<a parentName=\"p\" {...{\n        \"href\": \"../self-service/flows/user-login-user-registration.md\"\n      }}>{`Selfservice Registration`}</a>{`):`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-json\"\n      }}>{`{\n  \"traits\": {\n    \"first_name\": \"John Doe\",\n    \"email\": \"john.doe@example.org\",\n    \"username\": \"johndoe123\"\n  },\n  \"password\": \"my-secret-password\"\n}\n`}</code></pre>\n    <p>{`The `}<inlineCode parentName=\"p\">{`password`}</inlineCode>{` method would generate a credentials block as follows:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-yaml\"\n      }}>{`credentials:\n  password:\n    id: password\n    identifiers:\n      - john.doe@example.org\n      - johndoe123\n    config:\n      hashed_password: ... # this would be \\`argon2(my-secret-password)\\`\n`}</code></pre>\n    <p>{`Because credential identifiers need to be unique, no other identity can be\ncreated that has `}<inlineCode parentName=\"p\">{`johndoe123`}</inlineCode>{` or `}<inlineCode parentName=\"p\">{`john.doe@example.org`}</inlineCode>{` as their `}<inlineCode parentName=\"p\">{`email`}</inlineCode>{` or\n`}<inlineCode parentName=\"p\">{`username`}</inlineCode>{`.`}</p>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;\n  "]}]}
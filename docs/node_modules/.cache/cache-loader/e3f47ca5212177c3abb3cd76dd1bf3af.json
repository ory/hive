{"remainingRequest":"/Users/foobar/go/src/github.com/ory/kratos/docs/node_modules/babel-loader/lib/index.js??ref--7-1!/Users/foobar/go/src/github.com/ory/kratos/docs/node_modules/@docusaurus/mdx-loader/src/index.js??ref--7-2!/Users/foobar/go/src/github.com/ory/kratos/docs/node_modules/@docusaurus/plugin-content-docs/lib/markdown/index.js??ref--7-3!/Users/foobar/go/src/github.com/ory/kratos/docs/versioned_docs/version-v0.1/index.md","dependencies":[{"path":"/Users/foobar/go/src/github.com/ory/kratos/docs/versioned_docs/version-v0.1/index.md","mtime":1586512083237},{"path":"/Users/foobar/go/src/github.com/ory/kratos/docs/.docusaurus/docusaurus-plugin-content-docs/site-versioned-docs-version-v-0-1-index-md-7be.json","mtime":1586597735471},{"path":"/Users/foobar/go/src/github.com/ory/kratos/docs/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/foobar/go/src/github.com/ory/kratos/docs/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/foobar/go/src/github.com/ory/kratos/docs/node_modules/@docusaurus/mdx-loader/src/index.js","mtime":499162500000},{"path":"/Users/foobar/go/src/github.com/ory/kratos/docs/node_modules/@docusaurus/plugin-content-docs/lib/markdown/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9leHRlbmRzIGZyb20iL1VzZXJzL2Zvb2Jhci9nby9zcmMvZ2l0aHViLmNvbS9vcnkva3JhdG9zL2RvY3Mvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2V4dGVuZHMiO2ltcG9ydCBSZWFjdCBmcm9tJ3JlYWN0JztpbXBvcnR7bWR4fWZyb20nQG1keC1qcy9yZWFjdCc7ZXhwb3J0IGNvbnN0IGZyb250TWF0dGVyPXtpZDonaW5kZXgnLHRpdGxlOidJbnRyb2R1Y3Rpb24nfTtleHBvcnQgY29uc3QgbWV0YWRhdGE9eyJpZCI6InZlcnNpb24tdjAuMS9pbmRleCIsInRpdGxlIjoiSW50cm9kdWN0aW9uIiwiZGVzY3JpcHRpb24iOiJPUlkgS3JhdG9zIGlzIGFuIEFQSS1maXJzdCBJZGVudGl0eSBhbmQgVXNlciBNYW5hZ2VtZW50IHN5c3RlbSB0aGF0IGlzIGJ1aWx0Iiwic291cmNlIjoiQHNpdGUvdmVyc2lvbmVkX2RvY3MvdmVyc2lvbi12MC4xL2luZGV4Lm1kIiwicGVybWFsaW5rIjoiL2tyYXRvcy9kb2NzL2luZGV4IiwiZWRpdFVybCI6Imh0dHBzOi8vZ2l0aHViLmNvbS9vcnkva3JhdG9zL2VkaXQvbWFzdGVyL2RvY3MvdmVyc2lvbmVkX2RvY3MvdmVyc2lvbi12MC4xL2luZGV4Lm1kIiwidmVyc2lvbiI6InYwLjEiLCJsYXN0VXBkYXRlZEJ5IjoiaGFja2VybWFuIiwibGFzdFVwZGF0ZWRBdCI6MTU4NjUwMDA3NSwic2lkZWJhciI6InZlcnNpb24tdjAuMS9kb2NzIiwibmV4dCI6eyJ0aXRsZSI6IlF1aWNrc3RhcnQiLCJwZXJtYWxpbmsiOiIva3JhdG9zL2RvY3MvcXVpY2tzdGFydCJ9fTsvKiBAanN4IG1keCAqL2V4cG9ydCBjb25zdCByaWdodFRvYz1bXTtjb25zdCBtYWtlU2hvcnRjb2RlPW5hbWU9PmZ1bmN0aW9uIE1EWERlZmF1bHRTaG9ydGNvZGUocHJvcHMpe2NvbnNvbGUud2FybigiQ29tcG9uZW50ICIrbmFtZSsiIHdhcyBub3QgaW1wb3J0ZWQsIGV4cG9ydGVkLCBvciBwcm92aWRlZCBieSBNRFhQcm92aWRlciBhcyBnbG9iYWwgc2NvcGUiKTtyZXR1cm4gbWR4KCJkaXYiLHByb3BzKTt9O2NvbnN0IGxheW91dFByb3BzPXtyaWdodFRvY307Y29uc3QgTURYTGF5b3V0PSJ3cmFwcGVyIjtleHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBNRFhDb250ZW50KHtjb21wb25lbnRzLC4uLnByb3BzfSl7cmV0dXJuIG1keChNRFhMYXlvdXQsX2V4dGVuZHMoe30sbGF5b3V0UHJvcHMscHJvcHMse2NvbXBvbmVudHM6Y29tcG9uZW50cyxtZHhUeXBlOiJNRFhMYXlvdXQifSksbWR4KCJwIixudWxsLGBPUlkgS3JhdG9zIGlzIGFuIEFQSS1maXJzdCBJZGVudGl0eSBhbmQgVXNlciBNYW5hZ2VtZW50IHN5c3RlbSB0aGF0IGlzIGJ1aWx0CmFjY29yZGluZyB0bwpgLG1keCgiYSIsX2V4dGVuZHMoe3BhcmVudE5hbWU6InAifSx7ImhyZWYiOiJodHRwczovL3d3dy5vcnkuc2gvZG9jcy9lY29zeXN0ZW0vc29mdHdhcmUtYXJjaGl0ZWN0dXJlLXBoaWxvc29waHkvIn0pLGBjbG91ZCBhcmNoaXRlY3R1cmUgYmVzdCBwcmFjdGljZXNgKSxgLgpJdCBpbXBsZW1lbnRzIGNvcmUgdXNlIGNhc2VzIHRoYXQgYWxtb3N0IGV2ZXJ5IHNvZnR3YXJlIGFwcGxpY2F0aW9uIG5lZWRzIHRvCmRlYWwgd2l0aDpgKSxtZHgoInVsIixudWxsLG1keCgibGkiLHtwYXJlbnROYW1lOiJ1bCJ9LG1keCgic3Ryb25nIix7cGFyZW50TmFtZToibGkifSxgU2VsZi1zZXJ2aWNlIExvZ2luIGFuZCBSZWdpc3RyYXRpb25gKSxgOiBBbGxvdyBlbmQtdXNlcnMgdG8gY3JlYXRlIGFuZCBzaWduCmludG8gYWNjb3VudHMgKHdlIGNhbGwgdGhlbSBgLG1keCgic3Ryb25nIix7cGFyZW50TmFtZToibGkifSxgaWRlbnRpdGllc2ApLGApIHVzaW5nIFVzZXJuYW1lIC8gRW1haWwgYW5kCnBhc3N3b3JkIGNvbWJpbmF0aW9ucywgU29jaWFsIFNpZ24gSW4gKCJTaWduIGluIHdpdGggR29vZ2xlLCBHaXRIdWIiKSwKUGFzc3dvcmRsZXNzIGZsb3dzLCBhbmQgb3RoZXJzLmApLG1keCgibGkiLHtwYXJlbnROYW1lOiJ1bCJ9LG1keCgic3Ryb25nIix7cGFyZW50TmFtZToibGkifSxgTXVsdGktRmFjdG9yIEF1dGhlbnRpY2F0aW9uIChNRkEvMkZBKWApLGA6IFN1cHBvcnQgcHJvdG9jb2xzIHN1Y2ggYXMgVE9UUAooYCxtZHgoImEiLF9leHRlbmRzKHtwYXJlbnROYW1lOiJsaSJ9LHsiaHJlZiI6Imh0dHBzOi8vdG9vbHMuaWV0Zi5vcmcvaHRtbC9yZmM2MjM4In0pLGBSRkMgNjIzOGApLGAgYW5kCmAsbWR4KCJhIixfZXh0ZW5kcyh7cGFyZW50TmFtZToibGkifSx7ImhyZWYiOiJodHRwczovL3Rvb2xzLmlldGYub3JnL2h0bWwvcmZjNDIyNiJ9KSxgSUVURiBSRkMgNDIyNmApLGAgLSBiZXR0ZXIga25vd24gYXMKYCxtZHgoImEiLF9leHRlbmRzKHtwYXJlbnROYW1lOiJsaSJ9LHsiaHJlZiI6Imh0dHBzOi8vZW4ud2lraXBlZGlhLm9yZy93aWtpL0dvb2dsZV9BdXRoZW50aWNhdG9yIn0pLGBHb29nbGUgQXV0aGVudGljYXRvcmApLGApYCksbWR4KCJsaSIse3BhcmVudE5hbWU6InVsIn0sbWR4KCJzdHJvbmciLHtwYXJlbnROYW1lOiJsaSJ9LGBBY2NvdW50IFZlcmlmaWNhdGlvbmApLGA6IFZlcmlmeSB0aGF0IGFuIEUtTWFpbCBhZGRyZXNzLCBwaG9uZSBudW1iZXIsIG9yCnBoeXNpY2FsIGFkZHJlc3MgYWN0dWFsbHkgYmVsb25nIHRvIHRoYXQgaWRlbnRpdHkuYCksbWR4KCJsaSIse3BhcmVudE5hbWU6InVsIn0sbWR4KCJzdHJvbmciLHtwYXJlbnROYW1lOiJsaSJ9LGBBY2NvdW50IFJlY292ZXJ5YCksYDogUmVjb3ZlciBhY2Nlc3MgdXNpbmcgIkZvcmdvdCBQYXNzd29yZCIgZmxvd3MsIFNlY3VyaXR5CkNvZGVzIChpbiBjYXNlIG9mIE1LRkEgZGV2aWNlIGxvc3MpLCBhbmQgb3RoZXJzLmApLG1keCgibGkiLHtwYXJlbnROYW1lOiJ1bCJ9LG1keCgic3Ryb25nIix7cGFyZW50TmFtZToibGkifSxgUHJvZmlsZSBhbmQgQWNjb3VudCBNYW5hZ2VtZW50YCksYDogVXBkYXRlIHBhc3N3b3JkcywgcGVyc29uYWwgZGV0YWlscywgZW1haWwKYWRkcmVzc2VzLCBsaW5rZWQgc29jaWFsIHByb2ZpbGVzIHVzaW5nIHNlY3VyZSBmbG93cy5gKSxtZHgoImxpIix7cGFyZW50TmFtZToidWwifSxtZHgoInN0cm9uZyIse3BhcmVudE5hbWU6ImxpIn0sYEFkbWluIEFQSXNgKSxgOiBJbXBvcnQsIHVwZGF0ZSwgZGVsZXRlIGlkZW50aXRpZXMuYCkpLG1keCgicCIsbnVsbCxgSWRlbnRpdHkgaXMgYSBoYXJkIHByb2JsZW0gYW5kIE9SWSBLcmF0b3Mgc29sdmVzIGl0IGluIGEgdW5pcXVlIHdheS4gV2UgdmFsdWUKc2VjdXJpdHksIGZsZXhpYmlsaXR5LCBhbmQgaW50ZWdyYXRpb24gd2l0aCBjbG91ZCB0ZWNobm9sb2d5IChzdWNoIGFzCkt1YmVybmV0ZXMpIG1vc3Q6YCksbWR4KCJ1bCIsbnVsbCxtZHgoImxpIix7cGFyZW50TmFtZToidWwifSxgT1JZIEtyYXRvcyBkb2VzIG5vdCBzaGlwIGEgSFRNTCBSZW5kZXJpbmcgRW5naW5lLiBZb3UgY2FuIGJ1aWxkIHlvdXIgb3duIFVJCihvciB1c2Ugb3VyIGV4YW1wbGUgVUlzKSBpbiB0aGUgbGFuZ3VhZ2UgYW5kIGZyYW1ld29yayB5b3UgZmVlbCBtb3N0CmNvbWZvcnRhYmxlIHdpdGghYCksbWR4KCJsaSIse3BhcmVudE5hbWU6InVsIn0sYFRoZSB3b3JrZmxvdyBlbmdpbmUgYWxsb3dzIHlvdSB0byBmdWxseSBjdXN0b21pemUgeW91ciB1c2UgZXhwZXJpZW5jZTogV2hldGhlcgp5b3VyIHVzZXJzIG5lZWQgdG8gYWN0aXZhdGUgdGhlaXIgYWNjb3VudCBhZnRlciByZWdpc3RyYXRpb24sIG9yIGEgbXVsdGktc3RlcAoocHJvZ3Jlc3NpdmUpIHJlZ2lzdHJhdGlvbiAtIGl0J3MgYWxsIHBvc3NpYmxlIWApLG1keCgibGkiLHtwYXJlbnROYW1lOiJ1bCJ9LGBPbmUgSWRlbnRpdHkgRGF0YSBNb2RlbCBkb2VzIG5vdCBmaXQgYWxsIC0geW91IG1pZ2h0IGhhdmUgY3VzdG9tZXJzIHRoYXQgbmVlZAphIGJpbGxpbmcgYWRkcmVzcywgaW50ZXJuYWwgc3VwcG9ydCBzdGFmZiB0aGF0IGlzIGFzc2lnbmVkIHRvIGEgY29zdCBjZW50ZXIsCmFuZCB0aGF0IHNtYXJ0IGZyaWRnZSBvbiBmbG9vciA0LiBZb3UgY2FuIGV4cHJlc3MgdGhlIGRpZmZlcmVudCBkYXRhIG1vZGVscwp1c2luZyBgLG1keCgiYSIsX2V4dGVuZHMoe3BhcmVudE5hbWU6ImxpIn0seyJocmVmIjoiaHR0cHM6Ly9qc29uLXNjaGVtYS5vcmcvIn0pLGBKU09OIFNjaGVtYWApLGAgYW5kIG1ha2UgdGhlIHN5c3RlbSB3b3JrIGZvcgp5b3UgLSBub3QgdGhlIG90aGVyIHdheSBhcm91bmQhYCkpLG1keCgicCIsbnVsbCxgVG8gbGVhcm4gbW9yZSBhYm91dCB3aGF0J3MgZGlmZmVyZW50IGFuZCBob3cgT1JZIEtyYXRvcyBjb21wYXJlcyB0byBvdGhlciAob3Blbgpzb3VyY2UpIHNvbHV0aW9ucywgaGVhZCBvdmVyIHRvIGAsbWR4KCJhIixfZXh0ZW5kcyh7cGFyZW50TmFtZToicCJ9LHsiaHJlZiI6Ii9rcmF0b3MvZG9jcy9jb25jZXB0cy9pbmRleCJ9KSxgQ29uY2VwdHNgKSxgIGFuZApgLG1keCgiYSIsX2V4dGVuZHMoe3BhcmVudE5hbWU6InAifSx7ImhyZWYiOiIva3JhdG9zL2RvY3MvZnVydGhlci1yZWFkaW5nL2NvbXBhcmlzb24ifSksYENvbXBhcmlzb25gKSxgLmApLG1keCgicCIsbnVsbCxgQnV0IGl0J3Mgbm90IGp1c3QgZmVhdHVyZXMgLSBPUlkgS3JhdG9zIHN0YW5kcyBvdXQgYmVjYXVzZSBpdCBydW5zIG9uIGFueQpvcGVyYXRpbmcgc3lzdGVtIChMaW51eCwgbWFjT1MsIFdpbmRvd3MpIGFuZCBvbiBtb3N0IHByb2Nlc3NvcnMgKGkzODYsIGFtZDY0LAphcm0sIC4uLikuIFRoZSBjb21waWxlZCBiaW5hcnkgaGFzIGAsbWR4KCJlbSIse3BhcmVudE5hbWU6InAifSxgbm8gc3lzdGVtIG9yIGxpYnJhcnkgb3IgZmlsZSBkZXBlbmRlbmNpZXNgKSxgCmFuZCBjYW4gYmUgcnVuIGFzIGEgc2luZ2xlLCBzdGF0aWMgYmluYXJ5IG9uIHRvcCBvZiBhLCBmb3IgZXhhbXBsZSwgcmF3IExpbnV4Cmtlcm5lbC4gVGhlIGJpbmFyeSBhbmQgRG9ja2VyIEltYWdlIGlzIGxlc3MgdGhhbiAyME1CIHNtYWxsLmApLG1keCgicCIsbnVsbCxgT1JZIEtyYXRvcyBzY2FsZXMgaG9yaXpvbnRhbGx5IHdpdGhvdXQgZWZmb3J0LiBUaGUgb25seSBleHRlcm5hbCBkZXBlbmRlbmN5IGlzIGEKUkRCTVMgLSB3ZSBjdXJyZW50bHkgc3VwcG9ydCBTUUxpdGUsIFBvc3RncmVTUUwsIE15U1FMLCBDb2Nrcm9hY2hEQi4gWW91IHdpbGwKbm90IG5lZWQgbWVtY2FjaGVkLCBldGNkLCBvciBhbnkgb3RoZXIgc3lzdGVtIHRvIHNjYWxlIE9SWSBLcmF0b3MuYCksbWR4KCJwIixudWxsLGBXZSBiZWxpZXZlIGluIHN0cm9uZyBzZXBhcmF0aW9uIG9mIGNvbmNlcm5zLCBpdCBpcyBhIGd1aWRpbmcgcHJpbmNpcGxlIGluIHRoZQpkZXNpZ24gb2YgZWFjaCBPUlkgcHJvamVjdC4gQXMgc3VjaCwgd2UgYnVpbGQgc29mdHdhcmUgdGhhdCBzb2x2ZXMgc3BlY2lmaWMKcHJvYmxlbXMgdmVyeSB3ZWxsIGFuZCBvZmZsb2FkcyBhZGphY2VudCBpc3N1ZXMgKHN1Y2ggYXMgYSB1c2VyIGludGVyZmFjZSkgdG8Kb3RoZXIgYXBwbGljYXRpb25zLmApKTt9O01EWENvbnRlbnQuaXNNRFhDb21wb25lbnQ9dHJ1ZTs="},null]}
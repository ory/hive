{"remainingRequest":"/Users/foobar/go/src/github.com/ory/kratos/docs/node_modules/babel-loader/lib/index.js??ref--7-1!/Users/foobar/go/src/github.com/ory/kratos/docs/node_modules/@docusaurus/mdx-loader/src/index.js??ref--7-2!/Users/foobar/go/src/github.com/ory/kratos/docs/node_modules/@docusaurus/plugin-content-docs/lib/markdown/index.js??ref--7-3!/Users/foobar/go/src/github.com/ory/kratos/docs/versioned_docs/version-v0.1/reference/configuration.md","dependencies":[{"path":"/Users/foobar/go/src/github.com/ory/kratos/docs/versioned_docs/version-v0.1/reference/configuration.md","mtime":1587158277520},{"path":"/Users/foobar/go/src/github.com/ory/kratos/docs/.docusaurus/docusaurus-plugin-content-docs/site-versioned-docs-version-v-0-1-reference-configuration-md-30b.json","mtime":1588767627272},{"path":"/Users/foobar/go/src/github.com/ory/kratos/docs/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/foobar/go/src/github.com/ory/kratos/docs/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/foobar/go/src/github.com/ory/kratos/docs/node_modules/@docusaurus/mdx-loader/src/index.js","mtime":499162500000},{"path":"/Users/foobar/go/src/github.com/ory/kratos/docs/node_modules/@docusaurus/plugin-content-docs/lib/markdown/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/Users/foobar/go/src/github.com/ory/kratos/docs/versioned_docs/version-v0.1/reference/configuration.md"],"names":["React","mdx","frontMatter","id","title","metadata","rightToc","makeShortcode","name","MDXDefaultShortcode","props","console","warn","layoutProps","MDXLayout","MDXContent","components","isMDXComponent"],"mappings":"sHACE,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,GAAT,KAAoB,eAApB,CAEA,MAAO,MAAMC,CAAAA,WAAW,CAAG,CAC5BC,EAAE,CAAE,eADwB,CAE5BC,KAAK,CAAE,eAFqB,CAApB,CAIT,MAAO,MAAMC,CAAAA,QAAQ,CAAG,CACtB,KAAM,sCADgB,CAEtB,QAAS,eAFa,CAGtB,cAAe,8FAHO,CAItB,SAAU,8DAJY,CAKtB,YAAa,2CALS,CAMtB,UAAW,uGANW,CAOtB,UAAW,MAPW,CAQtB,gBAAiB,QARK,CAStB,gBAAiB,UATK,CAUtB,UAAW,mBAVW,CAWtB,WAAY,CACV,QAAS,YADC,CAEV,YAAa,qDAFH,CAXU,CAetB,OAAQ,CACN,QAAS,4BADH,CAEN,YAAa,oDAFP,CAfc,CAAjB,CAoBL,cAEF,MAAO,MAAMC,CAAAA,QAAQ,CAAG,EAAjB,CACP,KAAMC,CAAAA,aAAa,CAAGC,IAAI,EAAI,QAASC,CAAAA,mBAAT,CAA6BC,KAA7B,CAAoC,CAChEC,OAAO,CAACC,IAAR,CAAa,aAAeJ,IAAf,CAAsB,yEAAnC,EACA,MAAO,WAASE,KAAT,CAAP,CACD,CAHD,CAKA,KAAMG,CAAAA,WAAW,CAAG,CAClBP,QADkB,CAApB,CAGA,KAAMQ,CAAAA,SAAS,CAAG,SAAlB,CACA,cAAe,SAASC,CAAAA,UAAT,CAAoB,CACjCC,UADiC,CAEjC,GAAGN,KAF8B,CAApB,CAGZ,CACD,MAAO,KAAC,SAAD,aAAeG,WAAf,CAAgCH,KAAhC,EAAuC,UAAU,CAAEM,UAAnD,CAA+D,OAAO,CAAC,WAAvE,GAOL,aAAK,UAAL,CAAe,kBAAY,UAAU,CAAC,GAAvB,EAA6B,oBAA7B,CAAf,CAA+E;qCAA/E,CAPK,CASL,aAAK,6DAAL,CAAkE,kBAAY,UAAU,CAAC,GAAvB,EAA6B,wBAA7B,CAAlE,CAAsI,MAAtI,CAA4I,kBAAY,UAAU,CAAC,GAAvB,EAA6B,8BAA7B,CAA5I,CAAsN;OAAtN,CACI,kBAAY,UAAU,CAAC,GAAvB,EAA6B,qCAA7B,CADJ,CACqF,GADrF,CATK,CAWL,aAAK;sFAAL,CAXK,CAaL,aAAK;CAAL,CACF,kBAAG,UAAU,CAAC,GAAd,EAAsB,CAChB,OAAQ,+CADQ,CAAtB,EAES,0BAFT,CADE,CAGuC,WAHvC,CAbK,CAiBL,eAAK,qBAAM,UAAU,CAAC,KAAjB,EAA2B,CAC5B,YAAa,eADejBK,CAAP,CA6sBD,CAED,CACAD,UAAU,CAACE,cAAX,CAA4B,IAA5B","sourcesContent":["\n  import React from 'react';\n  import { mdx } from '@mdx-js/react';\n\n  export const frontMatter = {\n\tid: 'configuration',\n\ttitle: 'Configuration'\n};\nexport const metadata = {\n  \"id\": \"version-v0.1/reference/configuration\",\n  \"title\": \"Configuration\",\n  \"description\": \"<!-- THIS FILE IS BEING AUTO-GENERATED. DO NOT MODIFY IT AS ALL CHANGES WILL BE OVERWRITTEN.\",\n  \"source\": \"@site/versioned_docs/version-v0.1/reference/configuration.md\",\n  \"permalink\": \"/kratos/docs/v0.1/reference/configuration\",\n  \"editUrl\": \"https://github.com/ory/kratos/edit/master/docs/versioned_docs/version-v0.1/reference/configuration.md\",\n  \"version\": \"v0.1\",\n  \"lastUpdatedBy\": \"Author\",\n  \"lastUpdatedAt\": 1539502055,\n  \"sidebar\": \"version-v0.1/docs\",\n  \"previous\": {\n    \"title\": \"After Jobs\",\n    \"permalink\": \"/kratos/docs/v0.1/self-service/workflows/jobs/after\"\n  },\n  \"next\": {\n    \"title\": \"JSON Schema and JSON Paths\",\n    \"permalink\": \"/kratos/docs/v0.1/reference/json-schema-json-paths\"\n  }\n};\n  /* @jsx mdx */\n\nexport const rightToc = [];\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  rightToc\n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    {\n      /* THIS FILE IS BEING AUTO-GENERATED. DO NOT MODIFY IT AS ALL CHANGES WILL BE OVERWRITTEN.\n      OPEN AN ISSUE IF YOU WOULD LIKE TO MAKE ADJUSTMENTS HERE AND MAINTAINERS WILL HELP YOU LOCATE THE RIGHT\n      FILE */\n    }\n    <p>{`If file `}<inlineCode parentName=\"p\">{`$HOME/.kratos.yaml`}</inlineCode>{` exists, it will be used as a configuration file which supports all\nconfiguration settings listed below.`}</p>\n    <p>{`You can load the config file from another source using the `}<inlineCode parentName=\"p\">{`-c path/to/config.yaml`}</inlineCode>{` or `}<inlineCode parentName=\"p\">{`--config path/to/config.yaml`}</inlineCode>{`\nflag: `}<inlineCode parentName=\"p\">{`kratos --config path/to/config.yaml`}</inlineCode>{`.`}</p>\n    <p>{`Config files can be formatted as JSON, YAML and TOML. Some configuration values support reloading without server restart.\nAll configuration values can be set using environment variables, as documented below.`}</p>\n    <p>{`To find out more about edge cases like setting string array values through environmental variables head to the\n`}<a parentName=\"p\" {...{\n        \"href\": \"https://www.ory.sh/docs/ecosystem/configuring\"\n      }}>{`Configuring ORY services`}</a>{` section.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-yaml\"\n      }}>{`## ORY Kratos Configuration\n#\n\n\n## dsn ##\n#\n# Set this value using environment variables on\n# - Linux/macOS:\n#    $ export DSN=<value>\n# - Windows Command Line (CMD):\n#    > set DSN=<value>\n#\ndsn: postgres://user:password@localhost:5432/database\n\n## identity ##\n#\nidentity:\n  \n  ## traits ##\n  #\n  traits:\n    \n    ## default_schema_url ##\n    #\n    # Set this value using environment variables on\n    # - Linux/macOS:\n    #    $ export IDENTITY_TRAITS_DEFAULT_SCHEMA_URL=<value>\n    # - Windows Command Line (CMD):\n    #    > set IDENTITY_TRAITS_DEFAULT_SCHEMA_URL=<value>\n    #\n    default_schema_url: http://WBwVKWvcJYnRFLOpuTSaootvh.bwCxwHzemclRM,p2bR9wN.avr4J5iwFryiF\n\n    ## schemas ##\n    #\n    # Set this value using environment variables on\n    # - Linux/macOS:\n    #    $ export IDENTITY_TRAITS_SCHEMAS=<value>\n    # - Windows Command Line (CMD):\n    #    > set IDENTITY_TRAITS_SCHEMAS=<value>\n    #\n    schemas:\n      - 59663280.313260764\n      - true\n      - elit\n      - null\n      - true\n\n## selfservice ##\n#\nselfservice:\n  \n  ## logout ##\n  #\n  logout:\n    \n    ## redirect_to ##\n    #\n    # Set this value using environment variables on\n    # - Linux/macOS:\n    #    $ export SELFSERVICE_LOGOUT_REDIRECT_TO=<value>\n    # - Windows Command Line (CMD):\n    #    > set SELFSERVICE_LOGOUT_REDIRECT_TO=<value>\n    #\n    redirect_to: http://TPNXSkIbeASVeSLyyRTbVjdkX.ygfeQk8llwnWZ+NeenrZJJHgd8BAoqaQ5iHO9BW-DeqlXBuYKVlL0ijQpJw9Q\n\n  ## strategies ##\n  #\n  strategies:\n    \n    ## password ##\n    #\n    password:\n      \n      ## enabled ##\n      #\n      # Set this value using environment variables on\n      # - Linux/macOS:\n      #    $ export SELFSERVICE_STRATEGIES_PASSWORD_ENABLED=<value>\n      # - Windows Command Line (CMD):\n      #    > set SELFSERVICE_STRATEGIES_PASSWORD_ENABLED=<value>\n      #\n      enabled: false\n\n    ## oidc ##\n    #\n    oidc:\n      \n      ## enabled ##\n      #\n      # Set this value using environment variables on\n      # - Linux/macOS:\n      #    $ export SELFSERVICE_STRATEGIES_OIDC_ENABLED=<value>\n      # - Windows Command Line (CMD):\n      #    > set SELFSERVICE_STRATEGIES_OIDC_ENABLED=<value>\n      #\n      enabled: true\n\n      ## config ##\n      #\n      config:\n        \n        ## providers ##\n        #\n        # Set this value using environment variables on\n        # - Linux/macOS:\n        #    $ export SELFSERVICE_STRATEGIES_OIDC_CONFIG_PROVIDERS=<value>\n        # - Windows Command Line (CMD):\n        #    > set SELFSERVICE_STRATEGIES_OIDC_CONFIG_PROVIDERS=<value>\n        #\n        providers:\n          - id: ullamco\n            provider: generic\n            client_id: velit dolore Duis reprehenderit nisi\n            client_secret: in consequat dolore\n            schema_url: http://lpoYQWvHuSDrJljhVjOCONOS.bbfmvV-\n            issuer_url: http://XaQqjEDUcXllKKimZtGo.ntupaSho,,H5SxzjVm6F8\n            auth_url: http://HZ.xxzFv8\n            token_url: https://ujCgzKnVDjBnAp.gzxei+BObHmgpLrbeJz8e-zVywPpN-wap+fAWWq4\n            scope:\n              - tempor eu do\n              - mollit anim incididunt in irure\n              - id ut sint deserunt commodo\n\n  ## profile ##\n  #\n  profile:\n    \n    ## request_lifespan ##\n    #\n    # Default value: 1h\n    #\n    # Set this value using environment variables on\n    # - Linux/macOS:\n    #    $ export SELFSERVICE_PROFILE_REQUEST_LIFESPAN=<value>\n    # - Windows Command Line (CMD):\n    #    > set SELFSERVICE_PROFILE_REQUEST_LIFESPAN=<value>\n    #\n    request_lifespan: 6389090690ns\n\n    ## privileged_session_max_age ##\n    #\n    # Default value: 1h\n    #\n    # Set this value using environment variables on\n    # - Linux/macOS:\n    #    $ export SELFSERVICE_PROFILE_PRIVILEGED_SESSION_MAX_AGE=<value>\n    # - Windows Command Line (CMD):\n    #    > set SELFSERVICE_PROFILE_PRIVILEGED_SESSION_MAX_AGE=<value>\n    #\n    privileged_session_max_age: 4926695us\n\n  ## verify ##\n  #\n  verify:\n    \n    ## Self-Service Verification Request Lifespan ##\n    #\n    # Sets how long the verification request (for the UI interaction) is valid.\n    #\n    # Default value: 1h\n    #\n    # Set this value using environment variables on\n    # - Linux/macOS:\n    #    $ export SELFSERVICE_VERIFY_REQUEST_LIFESPAN=<value>\n    # - Windows Command Line (CMD):\n    #    > set SELFSERVICE_VERIFY_REQUEST_LIFESPAN=<value>\n    #\n    request_lifespan: 2892813086ms\n\n    ## Self-Service Verification Link Lifespan ##\n    #\n    # Sets how long the verification link (e.g. the one sent via email) is valid for.\n    #\n    # Default value: 24h\n    #\n    # Set this value using environment variables on\n    # - Linux/macOS:\n    #    $ export SELFSERVICE_VERIFY_LINK_LIFESPAN=<value>\n    # - Windows Command Line (CMD):\n    #    > set SELFSERVICE_VERIFY_LINK_LIFESPAN=<value>\n    #\n    link_lifespan: 76658s\n\n  ## login ##\n  #\n  login:\n    \n    ## request_lifespan ##\n    #\n    # Default value: 1h\n    #\n    # Set this value using environment variables on\n    # - Linux/macOS:\n    #    $ export SELFSERVICE_LOGIN_REQUEST_LIFESPAN=<value>\n    # - Windows Command Line (CMD):\n    #    > set SELFSERVICE_LOGIN_REQUEST_LIFESPAN=<value>\n    #\n    request_lifespan: 261924674us\n\n    ## before ##\n    #\n    # Set this value using environment variables on\n    # - Linux/macOS:\n    #    $ export SELFSERVICE_LOGIN_BEFORE=<value>\n    # - Windows Command Line (CMD):\n    #    > set SELFSERVICE_LOGIN_BEFORE=<value>\n    #\n    before:\n      - job: redirect\n        config:\n          default_redirect_url: https://LZuL.nvTjdRbGlnQ5BkDs7Zsz\n          allow_user_defined_redirect: true\n      - job: redirect\n        config:\n          default_redirect_url: https://v.pwlI+GKKH5Pux,sNH1wU4fGbfkt0NmRtlVjj7FQQPBBzZs9EbfyO\n          allow_user_defined_redirect: true\n      - job: redirect\n        config:\n          default_redirect_url: https://OH.olzn+m.xe-6Kgs137g9lEn5LoChjMW2ECFLRp9k.\n          allow_user_defined_redirect: false\n      - job: redirect\n        config:\n          default_redirect_url: http://teHyPcra.bonyF50e-GPaGsOOOLDBpR4ZbyeXdr.gxXWn-\n          allow_user_defined_redirect: false\n      - job: redirect\n        config:\n          default_redirect_url: https://KqeIwKYdUYHYPNbCHuqANnEQxOqLUet.qvcf7rYxwxTFNKXDpk1FwLllKiEeXMcI0Ga94bmUnUNfTqUbpV\n          allow_user_defined_redirect: true\n\n    ## after ##\n    #\n    after:\n      \n      ## password ##\n      #\n      # Set this value using environment variables on\n      # - Linux/macOS:\n      #    $ export SELFSERVICE_LOGIN_AFTER_PASSWORD=<value>\n      # - Windows Command Line (CMD):\n      #    > set SELFSERVICE_LOGIN_AFTER_PASSWORD=<value>\n      #\n      password:\n        - job: session\n\n      ## oidc ##\n      #\n      # Set this value using environment variables on\n      # - Linux/macOS:\n      #    $ export SELFSERVICE_LOGIN_AFTER_OIDC=<value>\n      # - Windows Command Line (CMD):\n      #    > set SELFSERVICE_LOGIN_AFTER_OIDC=<value>\n      #\n      oidc:\n        - job: revoke_active_sessions\n        - job: redirect\n          config:\n            default_redirect_url: http://TJpEMihFHEbvDTr.fbH04HGSBxwZWwiI,fl3tnRgZzaFK3Vf1CD\n            allow_user_defined_redirect: true\n\n  ## registration ##\n  #\n  registration:\n    \n    ## request_lifespan ##\n    #\n    # Default value: 1h\n    #\n    # Set this value using environment variables on\n    # - Linux/macOS:\n    #    $ export SELFSERVICE_REGISTRATION_REQUEST_LIFESPAN=<value>\n    # - Windows Command Line (CMD):\n    #    > set SELFSERVICE_REGISTRATION_REQUEST_LIFESPAN=<value>\n    #\n    request_lifespan: 32118264ns\n\n    ## before ##\n    #\n    # Set this value using environment variables on\n    # - Linux/macOS:\n    #    $ export SELFSERVICE_REGISTRATION_BEFORE=<value>\n    # - Windows Command Line (CMD):\n    #    > set SELFSERVICE_REGISTRATION_BEFORE=<value>\n    #\n    before:\n      - job: redirect\n        config:\n          default_redirect_url: http://ubxIxHSXZdAFmtpNOWW.jfzQsBcHwDgtadjbGtuabQB2\n          allow_user_defined_redirect: false\n      - job: redirect\n        config:\n          default_redirect_url: https://iebhoGPqxM.vyA6f8LWYiTlokLrGXo5VboE\n          allow_user_defined_redirect: false\n      - job: redirect\n        config:\n          default_redirect_url: http://EfZCcuFccKLA.kqFt96m\n          allow_user_defined_redirect: false\n      - job: redirect\n        config:\n          default_redirect_url: http://yWrLhTQqdWvktATVW.iyvioS-Lan.m7JaD6ZGb\n          allow_user_defined_redirect: true\n      - job: redirect\n        config:\n          default_redirect_url: http://dKpGhABBIQhDutIAcuGFMtJytuNccC.rcqk+0nhhGiAAB82WPG9EfYBoOv3nmPr6syGv6dWyW90F6xNkO+DQuUw1\n          allow_user_defined_redirect: false\n\n    ## after ##\n    #\n    after:\n      \n      ## password ##\n      #\n      # Set this value using environment variables on\n      # - Linux/macOS:\n      #    $ export SELFSERVICE_REGISTRATION_AFTER_PASSWORD=<value>\n      # - Windows Command Line (CMD):\n      #    > set SELFSERVICE_REGISTRATION_AFTER_PASSWORD=<value>\n      #\n      password:\n        - job: verify\n\n      ## oidc ##\n      #\n      # Set this value using environment variables on\n      # - Linux/macOS:\n      #    $ export SELFSERVICE_REGISTRATION_AFTER_OIDC=<value>\n      # - Windows Command Line (CMD):\n      #    > set SELFSERVICE_REGISTRATION_AFTER_OIDC=<value>\n      #\n      oidc:\n        - job: session\n        - job: verify\n        - job: redirect\n          config:\n            default_redirect_url: http://FVJpZlF.hfauWp\n            allow_user_defined_redirect: false\n        - job: redirect\n          config:\n            default_redirect_url: http://MxYouifavjiddhfCRhVxEdCo.oiyhO1RNkxr0Fgtohdl5JbiRdZfvSmK+YgXDahIOY+E7sRyf0HEc1rnan-6S37UZ8D\n            allow_user_defined_redirect: true\n        - job: redirect\n          config:\n            default_redirect_url: https://s.moiB9e8fSa\n            allow_user_defined_redirect: false\n\n## Courier configuration ##\n#\n# The courier is responsible for sending and delivering messages over email, sms, and other means.\n#\ncourier:\n  \n  ## SMTP Configuration ##\n  #\n  # Configures outgoing emails using the SMTP protocol.\n  #\n  smtp:\n    \n    ## SMTP connection string ##\n    #\n    # This URI will be used to connect to the SMTP server.\n    #\n    # Examples:\n    # - smtps://foo:bar@my-mailserver:1234/\n    # \n    # Set this value using environment variables on\n    # - Linux/macOS:\n    #    $ export COURIER_SMTP_CONNECTION_URI=<value>\n    # - Windows Command Line (CMD):\n    #    > set COURIER_SMTP_CONNECTION_URI=<value>\n    #\n    connection_uri: smtps://foo:bar@my-mailserver:1234/\n\n    ## SMTP Sender Address ##\n    #\n    # The recipient of an email will see this as the sender address.\n    #\n    # Default value: no-reply@ory.kratos.sh\n    #\n    # Set this value using environment variables on\n    # - Linux/macOS:\n    #    $ export COURIER_SMTP_FROM_ADDRESS=<value>\n    # - Windows Command Line (CMD):\n    #    > set COURIER_SMTP_FROM_ADDRESS=<value>\n    #\n    from_address: J4LNi@lKDckRnZblhfGKt.vtou\n\n  ## Override message templates ##\n  #\n  # You can override certain or all message templates by pointing this key to the path where the templates are located.\n  #\n  # Set this value using environment variables on\n  # - Linux/macOS:\n  #    $ export COURIER_TEMPLATE_OVERRIDE_PATH=<value>\n  # - Windows Command Line (CMD):\n  #    > set COURIER_TEMPLATE_OVERRIDE_PATH=<value>\n  #\n  template_override_path: magna nulla officia\n\n## serve ##\n#\nserve:\n  \n  ## admin ##\n  #\n  admin:\n    \n    ## host ##\n    #\n    # Default value: 0.0.0.0\n    #\n    # Set this value using environment variables on\n    # - Linux/macOS:\n    #    $ export SERVE_ADMIN_HOST=<value>\n    # - Windows Command Line (CMD):\n    #    > set SERVE_ADMIN_HOST=<value>\n    #\n    host: ut aliqua amet pariatur Lorem\n\n    ## port ##\n    #\n    # Default value: 4434\n    #\n    # Examples:\n    # - 4434\n    # \n    # Set this value using environment variables on\n    # - Linux/macOS:\n    #    $ export SERVE_ADMIN_PORT=<value>\n    # - Windows Command Line (CMD):\n    #    > set SERVE_ADMIN_PORT=<value>\n    #\n    port: 4434\n\n  ## public ##\n  #\n  public:\n    \n    ## host ##\n    #\n    # Default value: 0.0.0.0\n    #\n    # Set this value using environment variables on\n    # - Linux/macOS:\n    #    $ export SERVE_PUBLIC_HOST=<value>\n    # - Windows Command Line (CMD):\n    #    > set SERVE_PUBLIC_HOST=<value>\n    #\n    host: eiusmod ea\n\n    ## port ##\n    #\n    # Default value: 4433\n    #\n    # Examples:\n    # - 4433\n    # \n    # Set this value using environment variables on\n    # - Linux/macOS:\n    #    $ export SERVE_PUBLIC_PORT=<value>\n    # - Windows Command Line (CMD):\n    #    > set SERVE_PUBLIC_PORT=<value>\n    #\n    port: 4433\n\n## urls ##\n#\nurls:\n  \n  ## profile_ui ##\n  #\n  # Set this value using environment variables on\n  # - Linux/macOS:\n  #    $ export URLS_PROFILE_UI=<value>\n  # - Windows Command Line (CMD):\n  #    > set URLS_PROFILE_UI=<value>\n  #\n  profile_ui: http://BMvdJD.oumrvPl+.YTtiPL6I21HYzlRsoTW-Dd1-lDUCJltAHcth.+eggbpCfQvWY.YSS3i\n\n  ## mfa_ui ##\n  #\n  # Set this value using environment variables on\n  # - Linux/macOS:\n  #    $ export URLS_MFA_UI=<value>\n  # - Windows Command Line (CMD):\n  #    > set URLS_MFA_UI=<value>\n  #\n  mfa_ui: http://jJAIvAwZyxLFzQjBYtcGhLGuzwudpru.dbF.OeGVZf-fC\n\n  ## login_ui ##\n  #\n  # Set this value using environment variables on\n  # - Linux/macOS:\n  #    $ export URLS_LOGIN_UI=<value>\n  # - Windows Command Line (CMD):\n  #    > set URLS_LOGIN_UI=<value>\n  #\n  login_ui: http://bC.dsmw,wLBWDeODw.jzOSI\n\n  ## registration_ui ##\n  #\n  # Set this value using environment variables on\n  # - Linux/macOS:\n  #    $ export URLS_REGISTRATION_UI=<value>\n  # - Windows Command Line (CMD):\n  #    > set URLS_REGISTRATION_UI=<value>\n  #\n  registration_ui: http://aFuZJoeUxZWbuTpHLFZvK.gxlPs3in99K,qmGgreVGQFtdAJbjtOmf4,oaXujXoOfC9\n\n  ## error_ui ##\n  #\n  # Set this value using environment variables on\n  # - Linux/macOS:\n  #    $ export URLS_ERROR_UI=<value>\n  # - Windows Command Line (CMD):\n  #    > set URLS_ERROR_UI=<value>\n  #\n  error_ui: http://XyOnfsMVwIYMBlWKnkCPLOEjjM.czcUWzDof8Yf3EfshOx2zlNKWInKZLdpwX6P+UoqMabq6j7wR2Wpgx+zXrxhS34dr\n\n  ## Verify User Interface URL ##\n  #\n  # The URL of the Verify User Interface, the page where users can request activate and / or verify their email or telephone number.\n  #\n  # Set this value using environment variables on\n  # - Linux/macOS:\n  #    $ export URLS_VERIFY_UI=<value>\n  # - Windows Command Line (CMD):\n  #    > set URLS_VERIFY_UI=<value>\n  #\n  verify_ui: https://AFOEiEYuMWbJuHEggEbQ.pfQWlSMyPl,,pcK80YpSmfTu4+8fJfb9nsteihlmuak\n\n  ## default_return_to ##\n  #\n  # Set this value using environment variables on\n  # - Linux/macOS:\n  #    $ export URLS_DEFAULT_RETURN_TO=<value>\n  # - Windows Command Line (CMD):\n  #    > set URLS_DEFAULT_RETURN_TO=<value>\n  #\n  default_return_to: http://zkQAiAiiIYb.ccihU+5ATPZJD2Pw8g,BV1p3ttrEDUdvY1.smb0rA\n\n  ## self ##\n  #\n  self:\n    \n    ## public ##\n    #\n    # Set this value using environment variables on\n    # - Linux/macOS:\n    #    $ export URLS_SELF_PUBLIC=<value>\n    # - Windows Command Line (CMD):\n    #    > set URLS_SELF_PUBLIC=<value>\n    #\n    public: https://soaSpPGphWtHdGE.jnisR2qXIxFM6sRpbYF6B9pd1FBsbPIWBKPsXHYbqlRhdmG0xq.pO0IJ4m\n\n    ## admin ##\n    #\n    # Set this value using environment variables on\n    # - Linux/macOS:\n    #    $ export URLS_SELF_ADMIN=<value>\n    # - Windows Command Line (CMD):\n    #    > set URLS_SELF_ADMIN=<value>\n    #\n    admin: http://AW.pbumgzDhx3hSJ+clKU7Oe,amEjmmbm1Ru2yMg0k6kV7cdSKDcPsn1QYXOVUB1071goU\n\n  ## whitelisted_return_to_domains ##\n  #\n  # Set this value using environment variables on\n  # - Linux/macOS:\n  #    $ export URLS_WHITELISTED_RETURN_TO_DOMAINS=<value>\n  # - Windows Command Line (CMD):\n  #    > set URLS_WHITELISTED_RETURN_TO_DOMAINS=<value>\n  #\n  whitelisted_return_to_domains:\n    - http://CTLQXiigUbkVwraZAOiDopaD.lzwMQNslH,m2aPn\n\n## log ##\n#\nlog:\n  \n  ## level ##\n  #\n  # Set this value using environment variables on\n  # - Linux/macOS:\n  #    $ export LOG_LEVEL=<value>\n  # - Windows Command Line (CMD):\n  #    > set LOG_LEVEL=<value>\n  #\n  level: debug\n\n  ## format ##\n  #\n  # Set this value using environment variables on\n  # - Linux/macOS:\n  #    $ export LOG_FORMAT=<value>\n  # - Windows Command Line (CMD):\n  #    > set LOG_FORMAT=<value>\n  #\n  format: text\n\n## secrets ##\n#\nsecrets:\n  \n  ## session ##\n  #\n  # Set this value using environment variables on\n  # - Linux/macOS:\n  #    $ export SECRETS_SESSION=<value>\n  # - Windows Command Line (CMD):\n  #    > set SECRETS_SESSION=<value>\n  #\n  session:\n    - laboris dolore quis\n    - cupidatatexercitation sunt\n\n## hashers ##\n#\nhashers:\n  \n  ## argon2 ##\n  #\n  argon2:\n    \n    ## memory ##\n    #\n    # Set this value using environment variables on\n    # - Linux/macOS:\n    #    $ export HASHERS_ARGON2_MEMORY=<value>\n    # - Windows Command Line (CMD):\n    #    > set HASHERS_ARGON2_MEMORY=<value>\n    #\n    memory: 11883317\n\n    ## iterations ##\n    #\n    # Set this value using environment variables on\n    # - Linux/macOS:\n    #    $ export HASHERS_ARGON2_ITERATIONS=<value>\n    # - Windows Command Line (CMD):\n    #    > set HASHERS_ARGON2_ITERATIONS=<value>\n    #\n    iterations: 21236220\n\n    ## parallelism ##\n    #\n    # Set this value using environment variables on\n    # - Linux/macOS:\n    #    $ export HASHERS_ARGON2_PARALLELISM=<value>\n    # - Windows Command Line (CMD):\n    #    > set HASHERS_ARGON2_PARALLELISM=<value>\n    #\n    parallelism: 71551855\n\n    ## salt_length ##\n    #\n    # Set this value using environment variables on\n    # - Linux/macOS:\n    #    $ export HASHERS_ARGON2_SALT_LENGTH=<value>\n    # - Windows Command Line (CMD):\n    #    > set HASHERS_ARGON2_SALT_LENGTH=<value>\n    #\n    salt_length: 80719037\n\n    ## key_length ##\n    #\n    # Set this value using environment variables on\n    # - Linux/macOS:\n    #    $ export HASHERS_ARGON2_KEY_LENGTH=<value>\n    # - Windows Command Line (CMD):\n    #    > set HASHERS_ARGON2_KEY_LENGTH=<value>\n    #\n    key_length: 86477135\n\n## security ##\n#\nsecurity:\n  \n  ## session ##\n  #\n  session:\n    \n    ## cookie ##\n    #\n    cookie:\n      \n      ## same_site ##\n      #\n      # Default value: Lax\n      #\n      # Set this value using environment variables on\n      # - Linux/macOS:\n      #    $ export SECURITY_SESSION_COOKIE_SAME_SITE=<value>\n      # - Windows Command Line (CMD):\n      #    > set SECURITY_SESSION_COOKIE_SAME_SITE=<value>\n      #\n      same_site: Strict\n\n`}</code></pre>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;\n  "]}]}